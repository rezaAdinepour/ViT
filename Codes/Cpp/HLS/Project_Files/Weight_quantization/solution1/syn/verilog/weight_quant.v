// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="weight_quant_weight_quant,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=64,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4820,HLS_SYN_LUT=5019,HLS_VERSION=2023_2}" *)

module weight_quant (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_0_address1,
        input_0_ce1,
        input_0_q1,
        input_1_address0,
        input_1_ce0,
        input_1_q0,
        input_1_address1,
        input_1_ce1,
        input_1_q1,
        input_2_address0,
        input_2_ce0,
        input_2_q0,
        input_2_address1,
        input_2_ce1,
        input_2_q1,
        output_0_address0,
        output_0_ce0,
        output_0_we0,
        output_0_d0,
        output_0_address1,
        output_0_ce1,
        output_0_we1,
        output_0_d1,
        output_1_address0,
        output_1_ce0,
        output_1_we0,
        output_1_d0,
        output_1_address1,
        output_1_ce1,
        output_1_we1,
        output_1_d1,
        output_2_address0,
        output_2_ce0,
        output_2_we0,
        output_2_d0,
        output_2_address1,
        output_2_ce1,
        output_2_we1,
        output_2_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [1:0] input_0_address1;
output   input_0_ce1;
input  [31:0] input_0_q1;
output  [1:0] input_1_address0;
output   input_1_ce0;
input  [31:0] input_1_q0;
output  [1:0] input_1_address1;
output   input_1_ce1;
input  [31:0] input_1_q1;
output  [1:0] input_2_address0;
output   input_2_ce0;
input  [31:0] input_2_q0;
output  [1:0] input_2_address1;
output   input_2_ce1;
input  [31:0] input_2_q1;
output  [1:0] output_0_address0;
output   output_0_ce0;
output   output_0_we0;
output  [31:0] output_0_d0;
output  [1:0] output_0_address1;
output   output_0_ce1;
output   output_0_we1;
output  [31:0] output_0_d1;
output  [1:0] output_1_address0;
output   output_1_ce0;
output   output_1_we0;
output  [31:0] output_1_d0;
output  [1:0] output_1_address1;
output   output_1_ce1;
output   output_1_we1;
output  [31:0] output_1_d1;
output  [1:0] output_2_address0;
output   output_2_ce0;
output   output_2_we0;
output  [31:0] output_2_d0;
output  [1:0] output_2_address1;
output   output_2_ce1;
output   output_2_we1;
output  [31:0] output_2_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] input_0_address0;
reg input_0_ce0;
reg input_0_ce1;
reg[1:0] input_1_address0;
reg input_1_ce0;
reg input_1_ce1;
reg[1:0] input_2_address0;
reg input_2_ce0;
reg input_2_ce1;
reg[1:0] output_0_address0;
reg output_0_ce0;
reg output_0_we0;
reg[31:0] output_0_d0;
reg output_0_ce1;
reg output_0_we1;
reg[1:0] output_1_address0;
reg output_1_ce0;
reg output_1_we0;
reg[31:0] output_1_d0;
reg output_1_ce1;
reg output_1_we1;
reg[1:0] output_2_address0;
reg output_2_ce0;
reg output_2_we0;
reg[31:0] output_2_d0;
reg output_2_ce1;
reg output_2_we1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
wire   [31:0] grp_generic_round_float_s_fu_288_ap_return;
reg   [31:0] reg_484;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_generic_round_float_s_fu_297_ap_return;
reg   [31:0] reg_491;
wire   [31:0] grp_generic_round_float_s_fu_306_ap_return;
reg   [31:0] reg_498;
wire   [31:0] grp_generic_round_float_s_fu_315_ap_return;
reg   [31:0] reg_505;
reg   [31:0] data_reg_1441;
reg   [31:0] data_reg_1441_pp0_iter1_reg;
reg   [31:0] data_reg_1441_pp0_iter2_reg;
reg   [31:0] data_reg_1441_pp0_iter3_reg;
reg   [31:0] data_reg_1441_pp0_iter4_reg;
reg   [31:0] data_reg_1441_pp0_iter5_reg;
reg   [31:0] data_reg_1441_pp0_iter6_reg;
reg   [31:0] data_reg_1441_pp0_iter7_reg;
reg   [31:0] data_reg_1441_pp0_iter8_reg;
reg   [31:0] data_reg_1441_pp0_iter9_reg;
reg   [31:0] data_reg_1441_pp0_iter10_reg;
reg   [31:0] data_reg_1441_pp0_iter11_reg;
reg   [31:0] data_reg_1441_pp0_iter12_reg;
reg   [31:0] data_reg_1441_pp0_iter13_reg;
reg   [31:0] data_reg_1441_pp0_iter14_reg;
reg   [31:0] data_reg_1441_pp0_iter15_reg;
reg   [31:0] data_reg_1441_pp0_iter16_reg;
reg   [31:0] data_reg_1441_pp0_iter17_reg;
reg   [31:0] data_reg_1441_pp0_iter18_reg;
reg   [31:0] data_reg_1441_pp0_iter19_reg;
reg   [31:0] data_reg_1441_pp0_iter20_reg;
reg   [31:0] data_reg_1441_pp0_iter21_reg;
reg   [31:0] data_reg_1441_pp0_iter22_reg;
reg   [31:0] data_reg_1441_pp0_iter23_reg;
reg   [31:0] data_reg_1441_pp0_iter24_reg;
reg   [31:0] data_reg_1441_pp0_iter25_reg;
wire   [30:0] trunc_ln313_fu_512_p1;
reg   [30:0] trunc_ln313_reg_1446;
reg   [31:0] data_1_reg_1451;
reg   [31:0] data_1_reg_1451_pp0_iter1_reg;
reg   [31:0] data_1_reg_1451_pp0_iter2_reg;
reg   [31:0] data_1_reg_1451_pp0_iter3_reg;
reg   [31:0] data_1_reg_1451_pp0_iter4_reg;
reg   [31:0] data_1_reg_1451_pp0_iter5_reg;
reg   [31:0] data_1_reg_1451_pp0_iter6_reg;
reg   [31:0] data_1_reg_1451_pp0_iter7_reg;
reg   [31:0] data_1_reg_1451_pp0_iter8_reg;
reg   [31:0] data_1_reg_1451_pp0_iter9_reg;
reg   [31:0] data_1_reg_1451_pp0_iter10_reg;
reg   [31:0] data_1_reg_1451_pp0_iter11_reg;
reg   [31:0] data_1_reg_1451_pp0_iter12_reg;
reg   [31:0] data_1_reg_1451_pp0_iter13_reg;
reg   [31:0] data_1_reg_1451_pp0_iter14_reg;
reg   [31:0] data_1_reg_1451_pp0_iter15_reg;
reg   [31:0] data_1_reg_1451_pp0_iter16_reg;
reg   [31:0] data_1_reg_1451_pp0_iter17_reg;
reg   [31:0] data_1_reg_1451_pp0_iter18_reg;
reg   [31:0] data_1_reg_1451_pp0_iter19_reg;
reg   [31:0] data_1_reg_1451_pp0_iter20_reg;
reg   [31:0] data_1_reg_1451_pp0_iter21_reg;
reg   [31:0] data_1_reg_1451_pp0_iter22_reg;
reg   [31:0] data_1_reg_1451_pp0_iter23_reg;
reg   [31:0] data_1_reg_1451_pp0_iter24_reg;
reg   [31:0] data_1_reg_1451_pp0_iter25_reg;
wire   [30:0] trunc_ln313_1_fu_516_p1;
reg   [30:0] trunc_ln313_1_reg_1456;
reg   [30:0] trunc_ln313_1_reg_1456_pp0_iter1_reg;
reg   [31:0] data_2_reg_1461;
reg   [31:0] data_2_reg_1461_pp0_iter1_reg;
reg   [31:0] data_2_reg_1461_pp0_iter2_reg;
reg   [31:0] data_2_reg_1461_pp0_iter3_reg;
reg   [31:0] data_2_reg_1461_pp0_iter4_reg;
reg   [31:0] data_2_reg_1461_pp0_iter5_reg;
reg   [31:0] data_2_reg_1461_pp0_iter6_reg;
reg   [31:0] data_2_reg_1461_pp0_iter7_reg;
reg   [31:0] data_2_reg_1461_pp0_iter8_reg;
reg   [31:0] data_2_reg_1461_pp0_iter9_reg;
reg   [31:0] data_2_reg_1461_pp0_iter10_reg;
reg   [31:0] data_2_reg_1461_pp0_iter11_reg;
reg   [31:0] data_2_reg_1461_pp0_iter12_reg;
reg   [31:0] data_2_reg_1461_pp0_iter13_reg;
reg   [31:0] data_2_reg_1461_pp0_iter14_reg;
reg   [31:0] data_2_reg_1461_pp0_iter15_reg;
reg   [31:0] data_2_reg_1461_pp0_iter16_reg;
reg   [31:0] data_2_reg_1461_pp0_iter17_reg;
reg   [31:0] data_2_reg_1461_pp0_iter18_reg;
reg   [31:0] data_2_reg_1461_pp0_iter19_reg;
reg   [31:0] data_2_reg_1461_pp0_iter20_reg;
reg   [31:0] data_2_reg_1461_pp0_iter21_reg;
reg   [31:0] data_2_reg_1461_pp0_iter22_reg;
reg   [31:0] data_2_reg_1461_pp0_iter23_reg;
reg   [31:0] data_2_reg_1461_pp0_iter24_reg;
reg   [31:0] data_2_reg_1461_pp0_iter25_reg;
wire   [30:0] trunc_ln313_2_fu_520_p1;
reg   [30:0] trunc_ln313_2_reg_1466;
reg   [30:0] trunc_ln313_2_reg_1466_pp0_iter1_reg;
reg   [30:0] trunc_ln313_2_reg_1466_pp0_iter2_reg;
reg   [30:0] trunc_ln313_2_reg_1466_pp0_iter3_reg;
reg   [31:0] data_3_reg_1471;
reg   [31:0] data_3_reg_1471_pp0_iter1_reg;
reg   [31:0] data_3_reg_1471_pp0_iter2_reg;
reg   [31:0] data_3_reg_1471_pp0_iter3_reg;
reg   [31:0] data_3_reg_1471_pp0_iter4_reg;
reg   [31:0] data_3_reg_1471_pp0_iter5_reg;
reg   [31:0] data_3_reg_1471_pp0_iter6_reg;
reg   [31:0] data_3_reg_1471_pp0_iter7_reg;
reg   [31:0] data_3_reg_1471_pp0_iter8_reg;
reg   [31:0] data_3_reg_1471_pp0_iter9_reg;
reg   [31:0] data_3_reg_1471_pp0_iter10_reg;
reg   [31:0] data_3_reg_1471_pp0_iter11_reg;
reg   [31:0] data_3_reg_1471_pp0_iter12_reg;
reg   [31:0] data_3_reg_1471_pp0_iter13_reg;
reg   [31:0] data_3_reg_1471_pp0_iter14_reg;
reg   [31:0] data_3_reg_1471_pp0_iter15_reg;
reg   [31:0] data_3_reg_1471_pp0_iter16_reg;
reg   [31:0] data_3_reg_1471_pp0_iter17_reg;
reg   [31:0] data_3_reg_1471_pp0_iter18_reg;
reg   [31:0] data_3_reg_1471_pp0_iter19_reg;
reg   [31:0] data_3_reg_1471_pp0_iter20_reg;
reg   [31:0] data_3_reg_1471_pp0_iter21_reg;
reg   [31:0] data_3_reg_1471_pp0_iter22_reg;
reg   [31:0] data_3_reg_1471_pp0_iter23_reg;
reg   [31:0] data_3_reg_1471_pp0_iter24_reg;
reg   [31:0] data_3_reg_1471_pp0_iter25_reg;
wire   [30:0] trunc_ln313_3_fu_524_p1;
reg   [30:0] trunc_ln313_3_reg_1476;
reg   [30:0] trunc_ln313_3_reg_1476_pp0_iter1_reg;
reg   [30:0] trunc_ln313_3_reg_1476_pp0_iter2_reg;
reg   [30:0] trunc_ln313_3_reg_1476_pp0_iter3_reg;
reg   [30:0] trunc_ln313_3_reg_1476_pp0_iter4_reg;
reg   [31:0] data_4_reg_1481;
reg   [31:0] data_4_reg_1481_pp0_iter1_reg;
reg   [31:0] data_4_reg_1481_pp0_iter2_reg;
reg   [31:0] data_4_reg_1481_pp0_iter3_reg;
reg   [31:0] data_4_reg_1481_pp0_iter4_reg;
reg   [31:0] data_4_reg_1481_pp0_iter5_reg;
reg   [31:0] data_4_reg_1481_pp0_iter6_reg;
reg   [31:0] data_4_reg_1481_pp0_iter7_reg;
reg   [31:0] data_4_reg_1481_pp0_iter8_reg;
reg   [31:0] data_4_reg_1481_pp0_iter9_reg;
reg   [31:0] data_4_reg_1481_pp0_iter10_reg;
reg   [31:0] data_4_reg_1481_pp0_iter11_reg;
reg   [31:0] data_4_reg_1481_pp0_iter12_reg;
reg   [31:0] data_4_reg_1481_pp0_iter13_reg;
reg   [31:0] data_4_reg_1481_pp0_iter14_reg;
reg   [31:0] data_4_reg_1481_pp0_iter15_reg;
reg   [31:0] data_4_reg_1481_pp0_iter16_reg;
reg   [31:0] data_4_reg_1481_pp0_iter17_reg;
reg   [31:0] data_4_reg_1481_pp0_iter18_reg;
reg   [31:0] data_4_reg_1481_pp0_iter19_reg;
reg   [31:0] data_4_reg_1481_pp0_iter20_reg;
reg   [31:0] data_4_reg_1481_pp0_iter21_reg;
reg   [31:0] data_4_reg_1481_pp0_iter22_reg;
reg   [31:0] data_4_reg_1481_pp0_iter23_reg;
reg   [31:0] data_4_reg_1481_pp0_iter24_reg;
reg   [31:0] data_4_reg_1481_pp0_iter25_reg;
wire   [30:0] trunc_ln313_4_fu_528_p1;
reg   [30:0] trunc_ln313_4_reg_1486;
reg   [30:0] trunc_ln313_4_reg_1486_pp0_iter1_reg;
reg   [30:0] trunc_ln313_4_reg_1486_pp0_iter2_reg;
reg   [30:0] trunc_ln313_4_reg_1486_pp0_iter3_reg;
reg   [30:0] trunc_ln313_4_reg_1486_pp0_iter4_reg;
reg   [30:0] trunc_ln313_4_reg_1486_pp0_iter5_reg;
reg   [30:0] trunc_ln313_4_reg_1486_pp0_iter6_reg;
reg   [31:0] data_5_reg_1491;
reg   [31:0] data_5_reg_1491_pp0_iter1_reg;
reg   [31:0] data_5_reg_1491_pp0_iter2_reg;
reg   [31:0] data_5_reg_1491_pp0_iter3_reg;
reg   [31:0] data_5_reg_1491_pp0_iter4_reg;
reg   [31:0] data_5_reg_1491_pp0_iter5_reg;
reg   [31:0] data_5_reg_1491_pp0_iter6_reg;
reg   [31:0] data_5_reg_1491_pp0_iter7_reg;
reg   [31:0] data_5_reg_1491_pp0_iter8_reg;
reg   [31:0] data_5_reg_1491_pp0_iter9_reg;
reg   [31:0] data_5_reg_1491_pp0_iter10_reg;
reg   [31:0] data_5_reg_1491_pp0_iter11_reg;
reg   [31:0] data_5_reg_1491_pp0_iter12_reg;
reg   [31:0] data_5_reg_1491_pp0_iter13_reg;
reg   [31:0] data_5_reg_1491_pp0_iter14_reg;
reg   [31:0] data_5_reg_1491_pp0_iter15_reg;
reg   [31:0] data_5_reg_1491_pp0_iter16_reg;
reg   [31:0] data_5_reg_1491_pp0_iter17_reg;
reg   [31:0] data_5_reg_1491_pp0_iter18_reg;
reg   [31:0] data_5_reg_1491_pp0_iter19_reg;
reg   [31:0] data_5_reg_1491_pp0_iter20_reg;
reg   [31:0] data_5_reg_1491_pp0_iter21_reg;
reg   [31:0] data_5_reg_1491_pp0_iter22_reg;
reg   [31:0] data_5_reg_1491_pp0_iter23_reg;
reg   [31:0] data_5_reg_1491_pp0_iter24_reg;
reg   [31:0] data_5_reg_1491_pp0_iter25_reg;
reg   [31:0] data_5_reg_1491_pp0_iter26_reg;
wire   [30:0] trunc_ln313_5_fu_532_p1;
reg   [30:0] trunc_ln313_5_reg_1496;
reg   [30:0] trunc_ln313_5_reg_1496_pp0_iter1_reg;
reg   [30:0] trunc_ln313_5_reg_1496_pp0_iter2_reg;
reg   [30:0] trunc_ln313_5_reg_1496_pp0_iter3_reg;
reg   [30:0] trunc_ln313_5_reg_1496_pp0_iter4_reg;
reg   [30:0] trunc_ln313_5_reg_1496_pp0_iter5_reg;
reg   [30:0] trunc_ln313_5_reg_1496_pp0_iter6_reg;
reg   [30:0] trunc_ln313_5_reg_1496_pp0_iter7_reg;
wire   [31:0] bitcast_ln327_fu_543_p1;
reg   [31:0] data_6_reg_1521;
reg   [31:0] data_6_reg_1521_pp0_iter2_reg;
reg   [31:0] data_6_reg_1521_pp0_iter3_reg;
reg   [31:0] data_6_reg_1521_pp0_iter4_reg;
reg   [31:0] data_6_reg_1521_pp0_iter5_reg;
reg   [31:0] data_6_reg_1521_pp0_iter6_reg;
reg   [31:0] data_6_reg_1521_pp0_iter7_reg;
reg   [31:0] data_6_reg_1521_pp0_iter8_reg;
reg   [31:0] data_6_reg_1521_pp0_iter9_reg;
reg   [31:0] data_6_reg_1521_pp0_iter10_reg;
reg   [31:0] data_6_reg_1521_pp0_iter11_reg;
reg   [31:0] data_6_reg_1521_pp0_iter12_reg;
reg   [31:0] data_6_reg_1521_pp0_iter13_reg;
reg   [31:0] data_6_reg_1521_pp0_iter14_reg;
reg   [31:0] data_6_reg_1521_pp0_iter15_reg;
reg   [31:0] data_6_reg_1521_pp0_iter16_reg;
reg   [31:0] data_6_reg_1521_pp0_iter17_reg;
reg   [31:0] data_6_reg_1521_pp0_iter18_reg;
reg   [31:0] data_6_reg_1521_pp0_iter19_reg;
reg   [31:0] data_6_reg_1521_pp0_iter20_reg;
reg   [31:0] data_6_reg_1521_pp0_iter21_reg;
reg   [31:0] data_6_reg_1521_pp0_iter22_reg;
reg   [31:0] data_6_reg_1521_pp0_iter23_reg;
reg   [31:0] data_6_reg_1521_pp0_iter24_reg;
reg   [31:0] data_6_reg_1521_pp0_iter25_reg;
reg   [31:0] data_6_reg_1521_pp0_iter26_reg;
wire   [30:0] trunc_ln313_6_fu_548_p1;
reg   [30:0] trunc_ln313_6_reg_1526;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter2_reg;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter3_reg;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter4_reg;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter5_reg;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter6_reg;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter7_reg;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter8_reg;
reg   [30:0] trunc_ln313_6_reg_1526_pp0_iter9_reg;
reg   [31:0] data_7_reg_1531;
reg   [31:0] data_7_reg_1531_pp0_iter2_reg;
reg   [31:0] data_7_reg_1531_pp0_iter3_reg;
reg   [31:0] data_7_reg_1531_pp0_iter4_reg;
reg   [31:0] data_7_reg_1531_pp0_iter5_reg;
reg   [31:0] data_7_reg_1531_pp0_iter6_reg;
reg   [31:0] data_7_reg_1531_pp0_iter7_reg;
reg   [31:0] data_7_reg_1531_pp0_iter8_reg;
reg   [31:0] data_7_reg_1531_pp0_iter9_reg;
reg   [31:0] data_7_reg_1531_pp0_iter10_reg;
reg   [31:0] data_7_reg_1531_pp0_iter11_reg;
reg   [31:0] data_7_reg_1531_pp0_iter12_reg;
reg   [31:0] data_7_reg_1531_pp0_iter13_reg;
reg   [31:0] data_7_reg_1531_pp0_iter14_reg;
reg   [31:0] data_7_reg_1531_pp0_iter15_reg;
reg   [31:0] data_7_reg_1531_pp0_iter16_reg;
reg   [31:0] data_7_reg_1531_pp0_iter17_reg;
reg   [31:0] data_7_reg_1531_pp0_iter18_reg;
reg   [31:0] data_7_reg_1531_pp0_iter19_reg;
reg   [31:0] data_7_reg_1531_pp0_iter20_reg;
reg   [31:0] data_7_reg_1531_pp0_iter21_reg;
reg   [31:0] data_7_reg_1531_pp0_iter22_reg;
reg   [31:0] data_7_reg_1531_pp0_iter23_reg;
reg   [31:0] data_7_reg_1531_pp0_iter24_reg;
reg   [31:0] data_7_reg_1531_pp0_iter25_reg;
reg   [31:0] data_7_reg_1531_pp0_iter26_reg;
wire   [30:0] trunc_ln313_7_fu_552_p1;
reg   [30:0] trunc_ln313_7_reg_1536;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter2_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter3_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter4_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter5_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter6_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter7_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter8_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter9_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter10_reg;
reg   [30:0] trunc_ln313_7_reg_1536_pp0_iter11_reg;
reg   [31:0] data_8_reg_1541;
reg   [31:0] data_8_reg_1541_pp0_iter2_reg;
reg   [31:0] data_8_reg_1541_pp0_iter3_reg;
reg   [31:0] data_8_reg_1541_pp0_iter4_reg;
reg   [31:0] data_8_reg_1541_pp0_iter5_reg;
reg   [31:0] data_8_reg_1541_pp0_iter6_reg;
reg   [31:0] data_8_reg_1541_pp0_iter7_reg;
reg   [31:0] data_8_reg_1541_pp0_iter8_reg;
reg   [31:0] data_8_reg_1541_pp0_iter9_reg;
reg   [31:0] data_8_reg_1541_pp0_iter10_reg;
reg   [31:0] data_8_reg_1541_pp0_iter11_reg;
reg   [31:0] data_8_reg_1541_pp0_iter12_reg;
reg   [31:0] data_8_reg_1541_pp0_iter13_reg;
reg   [31:0] data_8_reg_1541_pp0_iter14_reg;
reg   [31:0] data_8_reg_1541_pp0_iter15_reg;
reg   [31:0] data_8_reg_1541_pp0_iter16_reg;
reg   [31:0] data_8_reg_1541_pp0_iter17_reg;
reg   [31:0] data_8_reg_1541_pp0_iter18_reg;
reg   [31:0] data_8_reg_1541_pp0_iter19_reg;
reg   [31:0] data_8_reg_1541_pp0_iter20_reg;
reg   [31:0] data_8_reg_1541_pp0_iter21_reg;
reg   [31:0] data_8_reg_1541_pp0_iter22_reg;
reg   [31:0] data_8_reg_1541_pp0_iter23_reg;
reg   [31:0] data_8_reg_1541_pp0_iter24_reg;
reg   [31:0] data_8_reg_1541_pp0_iter25_reg;
reg   [31:0] data_8_reg_1541_pp0_iter26_reg;
wire   [30:0] trunc_ln313_8_fu_556_p1;
reg   [30:0] trunc_ln313_8_reg_1546;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter2_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter3_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter4_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter5_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter6_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter7_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter8_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter9_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter10_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter11_reg;
reg   [30:0] trunc_ln313_8_reg_1546_pp0_iter12_reg;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] sum_reg_1551;
wire   [31:0] bitcast_ln327_1_fu_567_p1;
reg   [31:0] sum_1_reg_1561;
wire   [31:0] bitcast_ln327_2_fu_579_p1;
wire   [31:0] grp_fu_338_p2;
reg   [31:0] sum_2_reg_1571;
wire   [31:0] bitcast_ln327_3_fu_591_p1;
reg   [31:0] sum_3_reg_1581;
wire   [31:0] bitcast_ln327_4_fu_603_p1;
wire   [31:0] grp_fu_342_p2;
reg   [31:0] sum_4_reg_1591;
wire   [31:0] bitcast_ln327_5_fu_615_p1;
reg   [31:0] sum_5_reg_1601;
wire   [31:0] bitcast_ln327_6_fu_627_p1;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] sum_6_reg_1611;
wire   [31:0] bitcast_ln327_7_fu_639_p1;
reg   [31:0] sum_7_reg_1621;
wire   [31:0] grp_fu_350_p2;
reg   [31:0] sum_8_reg_1631;
wire   [31:0] grp_fu_379_p2;
reg   [31:0] mean_reg_1636;
wire   [0:0] icmp_ln23_fu_673_p2;
reg   [0:0] icmp_ln23_reg_1643;
wire   [0:0] icmp_ln23_1_fu_679_p2;
reg   [0:0] icmp_ln23_1_reg_1648;
wire   [63:0] tmp_9_fu_403_p1;
reg   [63:0] tmp_9_reg_1653;
wire   [63:0] select_ln13_fu_695_p3;
reg   [63:0] select_ln13_reg_1658;
wire   [63:0] grp_fu_479_p2;
reg   [63:0] div_reg_1663;
wire   [31:0] grp_fu_400_p1;
reg   [31:0] scale_reg_1668;
reg   [31:0] scale_reg_1668_pp0_iter27_reg;
reg   [31:0] scale_reg_1668_pp0_iter28_reg;
wire   [31:0] dc_fu_702_p1;
wire   [31:0] dc_1_fu_706_p1;
wire   [31:0] dc_2_fu_710_p1;
wire   [31:0] dc_3_fu_714_p1;
wire   [31:0] dc_5_fu_722_p1;
wire   [31:0] dc_6_fu_726_p1;
wire   [31:0] dc_7_fu_730_p1;
wire   [31:0] dc_8_fu_734_p1;
wire   [31:0] grp_generic_round_float_s_fu_324_ap_return;
reg   [31:0] scaled_8_reg_1727;
wire   [31:0] scaled_1_fu_800_p3;
reg   [31:0] scaled_1_reg_1735;
wire   [31:0] scaled_3_fu_870_p3;
reg   [31:0] scaled_3_reg_1740;
wire   [31:0] scaled_5_fu_940_p3;
reg   [31:0] scaled_5_reg_1745;
wire   [31:0] scaled_7_fu_1010_p3;
reg   [31:0] scaled_7_reg_1750;
wire   [31:0] scaled_9_fu_1079_p3;
reg   [31:0] scaled_9_reg_1755;
wire   [31:0] scaled_11_fu_1148_p3;
reg   [31:0] scaled_11_reg_1760;
wire   [31:0] scaled_13_fu_1218_p3;
reg   [31:0] scaled_13_reg_1765;
wire   [31:0] scaled_15_fu_1288_p3;
reg   [31:0] scaled_15_reg_1770;
wire   [31:0] scaled_17_fu_1358_p3;
reg   [31:0] scaled_17_reg_1775;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    grp_generic_round_float_s_fu_288_ap_start;
wire    grp_generic_round_float_s_fu_288_ap_done;
wire    grp_generic_round_float_s_fu_288_ap_idle;
wire    grp_generic_round_float_s_fu_288_ap_ready;
wire    grp_generic_round_float_s_fu_297_ap_start;
wire    grp_generic_round_float_s_fu_297_ap_done;
wire    grp_generic_round_float_s_fu_297_ap_idle;
wire    grp_generic_round_float_s_fu_297_ap_ready;
wire    grp_generic_round_float_s_fu_306_ap_start;
wire    grp_generic_round_float_s_fu_306_ap_done;
wire    grp_generic_round_float_s_fu_306_ap_idle;
wire    grp_generic_round_float_s_fu_306_ap_ready;
wire    grp_generic_round_float_s_fu_315_ap_start;
wire    grp_generic_round_float_s_fu_315_ap_done;
wire    grp_generic_round_float_s_fu_315_ap_idle;
wire    grp_generic_round_float_s_fu_315_ap_ready;
wire    grp_generic_round_float_s_fu_324_ap_start;
wire    grp_generic_round_float_s_fu_324_ap_done;
wire    grp_generic_round_float_s_fu_324_ap_idle;
wire    grp_generic_round_float_s_fu_324_ap_ready;
reg    grp_generic_round_float_s_fu_288_ap_start_reg;
wire   [31:0] grp_fu_354_p2;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg    grp_generic_round_float_s_fu_297_ap_start_reg;
wire   [31:0] grp_fu_359_p2;
reg    grp_generic_round_float_s_fu_306_ap_start_reg;
wire   [31:0] grp_fu_364_p2;
reg    grp_generic_round_float_s_fu_315_ap_start_reg;
wire   [31:0] grp_fu_369_p2;
reg    grp_generic_round_float_s_fu_324_ap_start_reg;
wire   [31:0] grp_fu_374_p2;
wire   [31:0] bitcast_ln23_1_fu_1371_p1;
wire   [31:0] bitcast_ln23_2_fu_1386_p1;
wire   [31:0] bitcast_ln23_3_fu_1376_p1;
wire   [31:0] bitcast_ln23_5_fu_1396_p1;
wire   [31:0] bitcast_ln23_6_fu_1381_p1;
wire   [31:0] bitcast_ln23_8_fu_1406_p1;
reg   [31:0] grp_fu_333_p0;
reg   [31:0] grp_fu_333_p1;
reg   [31:0] grp_fu_338_p0;
reg   [31:0] grp_fu_338_p1;
reg   [31:0] grp_fu_342_p0;
reg   [31:0] grp_fu_342_p1;
reg   [31:0] grp_fu_346_p0;
reg   [31:0] grp_fu_346_p1;
wire   [31:0] grp_fu_350_p1;
reg   [31:0] grp_fu_354_p0;
reg   [31:0] grp_fu_359_p0;
reg   [31:0] grp_fu_364_p0;
reg   [31:0] grp_fu_369_p0;
wire   [31:0] grp_fu_374_p0;
reg   [31:0] grp_fu_379_p0;
reg   [31:0] grp_fu_379_p1;
reg   [31:0] grp_fu_384_p0;
reg   [31:0] grp_fu_388_p0;
reg   [31:0] grp_fu_392_p0;
reg   [31:0] grp_fu_396_p0;
reg   [31:0] grp_fu_406_p0;
reg   [31:0] grp_fu_406_p1;
reg   [31:0] grp_fu_413_p1;
reg   [31:0] grp_fu_419_p0;
reg   [31:0] grp_fu_419_p1;
reg   [31:0] grp_fu_425_p1;
reg   [31:0] grp_fu_431_p0;
reg   [31:0] grp_fu_431_p1;
reg   [31:0] grp_fu_437_p1;
reg   [31:0] grp_fu_443_p0;
reg   [31:0] grp_fu_443_p1;
reg   [31:0] grp_fu_449_p1;
reg   [31:0] grp_fu_455_p0;
reg   [31:0] grp_fu_455_p1;
wire   [31:0] t_fu_536_p3;
wire   [31:0] t_1_fu_560_p3;
wire   [31:0] t_2_fu_572_p3;
wire   [31:0] t_3_fu_584_p3;
wire   [31:0] t_4_fu_596_p3;
wire   [31:0] t_5_fu_608_p3;
wire   [31:0] t_6_fu_620_p3;
wire   [31:0] t_7_fu_632_p3;
wire   [31:0] t_8_fu_644_p3;
wire   [31:0] bitcast_ln23_9_fu_656_p1;
wire   [7:0] tmp_fu_659_p4;
wire   [22:0] trunc_ln23_fu_669_p1;
wire   [0:0] or_ln23_fu_685_p2;
wire   [0:0] grp_fu_406_p2;
wire   [0:0] and_ln23_fu_689_p2;
wire   [31:0] bitcast_ln22_fu_738_p1;
wire   [7:0] tmp_2_fu_742_p4;
wire   [22:0] trunc_ln22_fu_752_p1;
wire   [0:0] icmp_ln22_1_fu_762_p2;
wire   [0:0] icmp_ln22_fu_756_p2;
wire   [0:0] or_ln22_9_fu_768_p2;
wire   [0:0] grp_fu_413_p2;
wire   [0:0] and_ln22_fu_774_p2;
wire   [0:0] and_ln22_1_fu_780_p2;
wire   [0:0] or_ln22_fu_794_p2;
wire   [31:0] select_ln22_fu_786_p3;
wire   [31:0] bitcast_ln22_1_fu_808_p1;
wire   [7:0] tmp_6_fu_812_p4;
wire   [22:0] trunc_ln22_1_fu_822_p1;
wire   [0:0] icmp_ln22_3_fu_832_p2;
wire   [0:0] icmp_ln22_2_fu_826_p2;
wire   [0:0] or_ln22_10_fu_838_p2;
wire   [0:0] grp_fu_419_p2;
wire   [0:0] grp_fu_425_p2;
wire   [0:0] and_ln22_2_fu_844_p2;
wire   [0:0] and_ln22_3_fu_850_p2;
wire   [0:0] or_ln22_1_fu_864_p2;
wire   [31:0] select_ln22_2_fu_856_p3;
wire   [31:0] bitcast_ln22_2_fu_878_p1;
wire   [7:0] tmp_4_fu_882_p4;
wire   [22:0] trunc_ln22_2_fu_892_p1;
wire   [0:0] icmp_ln22_5_fu_902_p2;
wire   [0:0] icmp_ln22_4_fu_896_p2;
wire   [0:0] or_ln22_11_fu_908_p2;
wire   [0:0] grp_fu_431_p2;
wire   [0:0] grp_fu_437_p2;
wire   [0:0] and_ln22_4_fu_914_p2;
wire   [0:0] and_ln22_5_fu_920_p2;
wire   [0:0] or_ln22_2_fu_934_p2;
wire   [31:0] select_ln22_4_fu_926_p3;
wire   [31:0] bitcast_ln22_3_fu_948_p1;
wire   [7:0] tmp_11_fu_952_p4;
wire   [22:0] trunc_ln22_3_fu_962_p1;
wire   [0:0] icmp_ln22_7_fu_972_p2;
wire   [0:0] icmp_ln22_6_fu_966_p2;
wire   [0:0] or_ln22_12_fu_978_p2;
wire   [0:0] grp_fu_443_p2;
wire   [0:0] grp_fu_449_p2;
wire   [0:0] and_ln22_6_fu_984_p2;
wire   [0:0] and_ln22_7_fu_990_p2;
wire   [0:0] or_ln22_3_fu_1004_p2;
wire   [31:0] select_ln22_6_fu_996_p3;
wire   [31:0] bitcast_ln22_4_fu_1018_p1;
wire   [7:0] tmp_14_fu_1021_p4;
wire   [22:0] trunc_ln22_4_fu_1031_p1;
wire   [0:0] icmp_ln22_9_fu_1041_p2;
wire   [0:0] icmp_ln22_8_fu_1035_p2;
wire   [0:0] or_ln22_13_fu_1047_p2;
wire   [0:0] grp_fu_455_p2;
wire   [0:0] grp_fu_461_p2;
wire   [0:0] and_ln22_8_fu_1053_p2;
wire   [0:0] and_ln22_9_fu_1059_p2;
wire   [0:0] or_ln22_4_fu_1073_p2;
wire   [31:0] select_ln22_8_fu_1065_p3;
wire   [31:0] bitcast_ln22_5_fu_1086_p1;
wire   [7:0] tmp_17_fu_1090_p4;
wire   [22:0] trunc_ln22_5_fu_1100_p1;
wire   [0:0] icmp_ln22_11_fu_1110_p2;
wire   [0:0] icmp_ln22_10_fu_1104_p2;
wire   [0:0] or_ln22_14_fu_1116_p2;
wire   [0:0] and_ln22_10_fu_1122_p2;
wire   [0:0] and_ln22_11_fu_1128_p2;
wire   [0:0] or_ln22_5_fu_1142_p2;
wire   [31:0] select_ln22_10_fu_1134_p3;
wire   [31:0] bitcast_ln22_6_fu_1156_p1;
wire   [7:0] tmp_20_fu_1160_p4;
wire   [22:0] trunc_ln22_6_fu_1170_p1;
wire   [0:0] icmp_ln22_13_fu_1180_p2;
wire   [0:0] icmp_ln22_12_fu_1174_p2;
wire   [0:0] or_ln22_15_fu_1186_p2;
wire   [0:0] and_ln22_12_fu_1192_p2;
wire   [0:0] and_ln22_13_fu_1198_p2;
wire   [0:0] or_ln22_6_fu_1212_p2;
wire   [31:0] select_ln22_12_fu_1204_p3;
wire   [31:0] bitcast_ln22_7_fu_1226_p1;
wire   [7:0] tmp_23_fu_1230_p4;
wire   [22:0] trunc_ln22_7_fu_1240_p1;
wire   [0:0] icmp_ln22_15_fu_1250_p2;
wire   [0:0] icmp_ln22_14_fu_1244_p2;
wire   [0:0] or_ln22_16_fu_1256_p2;
wire   [0:0] and_ln22_14_fu_1262_p2;
wire   [0:0] and_ln22_15_fu_1268_p2;
wire   [0:0] or_ln22_7_fu_1282_p2;
wire   [31:0] select_ln22_14_fu_1274_p3;
wire   [31:0] bitcast_ln22_8_fu_1296_p1;
wire   [7:0] tmp_26_fu_1300_p4;
wire   [22:0] trunc_ln22_8_fu_1310_p1;
wire   [0:0] icmp_ln22_17_fu_1320_p2;
wire   [0:0] icmp_ln22_16_fu_1314_p2;
wire   [0:0] or_ln22_17_fu_1326_p2;
wire   [0:0] and_ln22_16_fu_1332_p2;
wire   [0:0] and_ln22_17_fu_1338_p2;
wire   [0:0] or_ln22_8_fu_1352_p2;
wire   [31:0] select_ln22_16_fu_1344_p3;
wire   [31:0] grp_fu_384_p2;
wire   [31:0] grp_fu_396_p2;
wire   [31:0] grp_fu_388_p2;
wire   [31:0] grp_fu_392_p2;
reg   [4:0] grp_fu_406_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg   [4:0] grp_fu_413_opcode;
reg   [4:0] grp_fu_419_opcode;
reg   [4:0] grp_fu_425_opcode;
reg   [4:0] grp_fu_431_opcode;
reg   [4:0] grp_fu_437_opcode;
reg   [4:0] grp_fu_443_opcode;
reg   [4:0] grp_fu_449_opcode;
reg   [4:0] grp_fu_455_opcode;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to31;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to32;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_generic_round_float_s_fu_288_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_297_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_306_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_315_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_324_ap_start_reg = 1'b0;
end

weight_quant_generic_round_float_s grp_generic_round_float_s_fu_288(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_288_ap_start),
    .ap_done(grp_generic_round_float_s_fu_288_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_288_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_288_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_354_p2),
    .ap_return(grp_generic_round_float_s_fu_288_ap_return)
);

weight_quant_generic_round_float_s grp_generic_round_float_s_fu_297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_297_ap_start),
    .ap_done(grp_generic_round_float_s_fu_297_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_297_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_297_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_359_p2),
    .ap_return(grp_generic_round_float_s_fu_297_ap_return)
);

weight_quant_generic_round_float_s grp_generic_round_float_s_fu_306(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_306_ap_start),
    .ap_done(grp_generic_round_float_s_fu_306_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_306_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_306_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_364_p2),
    .ap_return(grp_generic_round_float_s_fu_306_ap_return)
);

weight_quant_generic_round_float_s grp_generic_round_float_s_fu_315(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_315_ap_start),
    .ap_done(grp_generic_round_float_s_fu_315_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_315_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_315_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_369_p2),
    .ap_return(grp_generic_round_float_s_fu_315_ap_return)
);

weight_quant_generic_round_float_s grp_generic_round_float_s_fu_324(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_324_ap_start),
    .ap_done(grp_generic_round_float_s_fu_324_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_324_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_324_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_374_p2),
    .ap_return(grp_generic_round_float_s_fu_324_ap_return)
);

weight_quant_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_333_p0),
    .din1(grp_fu_333_p1),
    .ce(1'b1),
    .dout(grp_fu_333_p2)
);

weight_quant_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_338_p0),
    .din1(grp_fu_338_p1),
    .ce(1'b1),
    .dout(grp_fu_338_p2)
);

weight_quant_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_342_p0),
    .din1(grp_fu_342_p1),
    .ce(1'b1),
    .dout(grp_fu_342_p2)
);

weight_quant_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_346_p0),
    .din1(grp_fu_346_p1),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

weight_quant_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_7_reg_1621),
    .din1(grp_fu_350_p1),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

weight_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_354_p0),
    .din1(scale_reg_1668),
    .ce(1'b1),
    .dout(grp_fu_354_p2)
);

weight_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_359_p0),
    .din1(scale_reg_1668),
    .ce(1'b1),
    .dout(grp_fu_359_p2)
);

weight_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_364_p0),
    .din1(scale_reg_1668),
    .ce(1'b1),
    .dout(grp_fu_364_p2)
);

weight_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_369_p0),
    .din1(scale_reg_1668),
    .ce(1'b1),
    .dout(grp_fu_369_p2)
);

weight_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_374_p0),
    .din1(scale_reg_1668),
    .ce(1'b1),
    .dout(grp_fu_374_p2)
);

weight_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_379_p0),
    .din1(grp_fu_379_p1),
    .ce(1'b1),
    .dout(grp_fu_379_p2)
);

weight_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_384_p0),
    .din1(scale_reg_1668_pp0_iter28_reg),
    .ce(1'b1),
    .dout(grp_fu_384_p2)
);

weight_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_388_p0),
    .din1(scale_reg_1668_pp0_iter28_reg),
    .ce(1'b1),
    .dout(grp_fu_388_p2)
);

weight_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_392_p0),
    .din1(scale_reg_1668_pp0_iter28_reg),
    .ce(1'b1),
    .dout(grp_fu_392_p2)
);

weight_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_396_p0),
    .din1(scale_reg_1668_pp0_iter28_reg),
    .ce(1'b1),
    .dout(grp_fu_396_p2)
);

weight_quant_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(div_reg_1663),
    .ce(1'b1),
    .dout(grp_fu_400_p1)
);

weight_quant_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U20(
    .din0(mean_reg_1636),
    .dout(tmp_9_fu_403_p1)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_406_p0),
    .din1(grp_fu_406_p1),
    .ce(1'b1),
    .opcode(grp_fu_406_opcode),
    .dout(grp_fu_406_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_generic_round_float_s_fu_288_ap_return),
    .din1(grp_fu_413_p1),
    .ce(1'b1),
    .opcode(grp_fu_413_opcode),
    .dout(grp_fu_413_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_419_p0),
    .din1(grp_fu_419_p1),
    .ce(1'b1),
    .opcode(grp_fu_419_opcode),
    .dout(grp_fu_419_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_generic_round_float_s_fu_297_ap_return),
    .din1(grp_fu_425_p1),
    .ce(1'b1),
    .opcode(grp_fu_425_opcode),
    .dout(grp_fu_425_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_431_p0),
    .din1(grp_fu_431_p1),
    .ce(1'b1),
    .opcode(grp_fu_431_opcode),
    .dout(grp_fu_431_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_generic_round_float_s_fu_306_ap_return),
    .din1(grp_fu_437_p1),
    .ce(1'b1),
    .opcode(grp_fu_437_opcode),
    .dout(grp_fu_437_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_443_p0),
    .din1(grp_fu_443_p1),
    .ce(1'b1),
    .opcode(grp_fu_443_opcode),
    .dout(grp_fu_443_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_generic_round_float_s_fu_315_ap_return),
    .din1(grp_fu_449_p1),
    .ce(1'b1),
    .opcode(grp_fu_449_opcode),
    .dout(grp_fu_449_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_455_p0),
    .din1(grp_fu_455_p1),
    .ce(1'b1),
    .opcode(grp_fu_455_opcode),
    .dout(grp_fu_455_p2)
);

weight_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_generic_round_float_s_fu_324_ap_return),
    .din1(32'd3212836864),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_461_p2)
);

weight_quant_ddiv_64ns_64ns_64_13_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_13_no_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(select_ln13_reg_1658),
    .ce(1'b1),
    .dout(grp_fu_479_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            ap_enable_reg_pp0_iter32 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_288_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)))) begin
            grp_generic_round_float_s_fu_288_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_288_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_288_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)))) begin
            grp_generic_round_float_s_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_297_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_306_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)))) begin
            grp_generic_round_float_s_fu_306_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_306_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_306_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_315_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)))) begin
            grp_generic_round_float_s_fu_315_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_315_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_315_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_324_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            grp_generic_round_float_s_fu_324_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_324_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_324_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_1_reg_1451 <= input_1_q1;
        data_2_reg_1461 <= input_2_q1;
        data_3_reg_1471 <= input_0_q0;
        data_4_reg_1481 <= input_1_q0;
        data_5_reg_1491 <= input_2_q0;
        data_reg_1441 <= input_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_1_reg_1451_pp0_iter10_reg <= data_1_reg_1451_pp0_iter9_reg;
        data_1_reg_1451_pp0_iter11_reg <= data_1_reg_1451_pp0_iter10_reg;
        data_1_reg_1451_pp0_iter12_reg <= data_1_reg_1451_pp0_iter11_reg;
        data_1_reg_1451_pp0_iter13_reg <= data_1_reg_1451_pp0_iter12_reg;
        data_1_reg_1451_pp0_iter14_reg <= data_1_reg_1451_pp0_iter13_reg;
        data_1_reg_1451_pp0_iter15_reg <= data_1_reg_1451_pp0_iter14_reg;
        data_1_reg_1451_pp0_iter16_reg <= data_1_reg_1451_pp0_iter15_reg;
        data_1_reg_1451_pp0_iter17_reg <= data_1_reg_1451_pp0_iter16_reg;
        data_1_reg_1451_pp0_iter18_reg <= data_1_reg_1451_pp0_iter17_reg;
        data_1_reg_1451_pp0_iter19_reg <= data_1_reg_1451_pp0_iter18_reg;
        data_1_reg_1451_pp0_iter1_reg <= data_1_reg_1451;
        data_1_reg_1451_pp0_iter20_reg <= data_1_reg_1451_pp0_iter19_reg;
        data_1_reg_1451_pp0_iter21_reg <= data_1_reg_1451_pp0_iter20_reg;
        data_1_reg_1451_pp0_iter22_reg <= data_1_reg_1451_pp0_iter21_reg;
        data_1_reg_1451_pp0_iter23_reg <= data_1_reg_1451_pp0_iter22_reg;
        data_1_reg_1451_pp0_iter24_reg <= data_1_reg_1451_pp0_iter23_reg;
        data_1_reg_1451_pp0_iter25_reg <= data_1_reg_1451_pp0_iter24_reg;
        data_1_reg_1451_pp0_iter2_reg <= data_1_reg_1451_pp0_iter1_reg;
        data_1_reg_1451_pp0_iter3_reg <= data_1_reg_1451_pp0_iter2_reg;
        data_1_reg_1451_pp0_iter4_reg <= data_1_reg_1451_pp0_iter3_reg;
        data_1_reg_1451_pp0_iter5_reg <= data_1_reg_1451_pp0_iter4_reg;
        data_1_reg_1451_pp0_iter6_reg <= data_1_reg_1451_pp0_iter5_reg;
        data_1_reg_1451_pp0_iter7_reg <= data_1_reg_1451_pp0_iter6_reg;
        data_1_reg_1451_pp0_iter8_reg <= data_1_reg_1451_pp0_iter7_reg;
        data_1_reg_1451_pp0_iter9_reg <= data_1_reg_1451_pp0_iter8_reg;
        data_2_reg_1461_pp0_iter10_reg <= data_2_reg_1461_pp0_iter9_reg;
        data_2_reg_1461_pp0_iter11_reg <= data_2_reg_1461_pp0_iter10_reg;
        data_2_reg_1461_pp0_iter12_reg <= data_2_reg_1461_pp0_iter11_reg;
        data_2_reg_1461_pp0_iter13_reg <= data_2_reg_1461_pp0_iter12_reg;
        data_2_reg_1461_pp0_iter14_reg <= data_2_reg_1461_pp0_iter13_reg;
        data_2_reg_1461_pp0_iter15_reg <= data_2_reg_1461_pp0_iter14_reg;
        data_2_reg_1461_pp0_iter16_reg <= data_2_reg_1461_pp0_iter15_reg;
        data_2_reg_1461_pp0_iter17_reg <= data_2_reg_1461_pp0_iter16_reg;
        data_2_reg_1461_pp0_iter18_reg <= data_2_reg_1461_pp0_iter17_reg;
        data_2_reg_1461_pp0_iter19_reg <= data_2_reg_1461_pp0_iter18_reg;
        data_2_reg_1461_pp0_iter1_reg <= data_2_reg_1461;
        data_2_reg_1461_pp0_iter20_reg <= data_2_reg_1461_pp0_iter19_reg;
        data_2_reg_1461_pp0_iter21_reg <= data_2_reg_1461_pp0_iter20_reg;
        data_2_reg_1461_pp0_iter22_reg <= data_2_reg_1461_pp0_iter21_reg;
        data_2_reg_1461_pp0_iter23_reg <= data_2_reg_1461_pp0_iter22_reg;
        data_2_reg_1461_pp0_iter24_reg <= data_2_reg_1461_pp0_iter23_reg;
        data_2_reg_1461_pp0_iter25_reg <= data_2_reg_1461_pp0_iter24_reg;
        data_2_reg_1461_pp0_iter2_reg <= data_2_reg_1461_pp0_iter1_reg;
        data_2_reg_1461_pp0_iter3_reg <= data_2_reg_1461_pp0_iter2_reg;
        data_2_reg_1461_pp0_iter4_reg <= data_2_reg_1461_pp0_iter3_reg;
        data_2_reg_1461_pp0_iter5_reg <= data_2_reg_1461_pp0_iter4_reg;
        data_2_reg_1461_pp0_iter6_reg <= data_2_reg_1461_pp0_iter5_reg;
        data_2_reg_1461_pp0_iter7_reg <= data_2_reg_1461_pp0_iter6_reg;
        data_2_reg_1461_pp0_iter8_reg <= data_2_reg_1461_pp0_iter7_reg;
        data_2_reg_1461_pp0_iter9_reg <= data_2_reg_1461_pp0_iter8_reg;
        data_3_reg_1471_pp0_iter10_reg <= data_3_reg_1471_pp0_iter9_reg;
        data_3_reg_1471_pp0_iter11_reg <= data_3_reg_1471_pp0_iter10_reg;
        data_3_reg_1471_pp0_iter12_reg <= data_3_reg_1471_pp0_iter11_reg;
        data_3_reg_1471_pp0_iter13_reg <= data_3_reg_1471_pp0_iter12_reg;
        data_3_reg_1471_pp0_iter14_reg <= data_3_reg_1471_pp0_iter13_reg;
        data_3_reg_1471_pp0_iter15_reg <= data_3_reg_1471_pp0_iter14_reg;
        data_3_reg_1471_pp0_iter16_reg <= data_3_reg_1471_pp0_iter15_reg;
        data_3_reg_1471_pp0_iter17_reg <= data_3_reg_1471_pp0_iter16_reg;
        data_3_reg_1471_pp0_iter18_reg <= data_3_reg_1471_pp0_iter17_reg;
        data_3_reg_1471_pp0_iter19_reg <= data_3_reg_1471_pp0_iter18_reg;
        data_3_reg_1471_pp0_iter1_reg <= data_3_reg_1471;
        data_3_reg_1471_pp0_iter20_reg <= data_3_reg_1471_pp0_iter19_reg;
        data_3_reg_1471_pp0_iter21_reg <= data_3_reg_1471_pp0_iter20_reg;
        data_3_reg_1471_pp0_iter22_reg <= data_3_reg_1471_pp0_iter21_reg;
        data_3_reg_1471_pp0_iter23_reg <= data_3_reg_1471_pp0_iter22_reg;
        data_3_reg_1471_pp0_iter24_reg <= data_3_reg_1471_pp0_iter23_reg;
        data_3_reg_1471_pp0_iter25_reg <= data_3_reg_1471_pp0_iter24_reg;
        data_3_reg_1471_pp0_iter2_reg <= data_3_reg_1471_pp0_iter1_reg;
        data_3_reg_1471_pp0_iter3_reg <= data_3_reg_1471_pp0_iter2_reg;
        data_3_reg_1471_pp0_iter4_reg <= data_3_reg_1471_pp0_iter3_reg;
        data_3_reg_1471_pp0_iter5_reg <= data_3_reg_1471_pp0_iter4_reg;
        data_3_reg_1471_pp0_iter6_reg <= data_3_reg_1471_pp0_iter5_reg;
        data_3_reg_1471_pp0_iter7_reg <= data_3_reg_1471_pp0_iter6_reg;
        data_3_reg_1471_pp0_iter8_reg <= data_3_reg_1471_pp0_iter7_reg;
        data_3_reg_1471_pp0_iter9_reg <= data_3_reg_1471_pp0_iter8_reg;
        data_4_reg_1481_pp0_iter10_reg <= data_4_reg_1481_pp0_iter9_reg;
        data_4_reg_1481_pp0_iter11_reg <= data_4_reg_1481_pp0_iter10_reg;
        data_4_reg_1481_pp0_iter12_reg <= data_4_reg_1481_pp0_iter11_reg;
        data_4_reg_1481_pp0_iter13_reg <= data_4_reg_1481_pp0_iter12_reg;
        data_4_reg_1481_pp0_iter14_reg <= data_4_reg_1481_pp0_iter13_reg;
        data_4_reg_1481_pp0_iter15_reg <= data_4_reg_1481_pp0_iter14_reg;
        data_4_reg_1481_pp0_iter16_reg <= data_4_reg_1481_pp0_iter15_reg;
        data_4_reg_1481_pp0_iter17_reg <= data_4_reg_1481_pp0_iter16_reg;
        data_4_reg_1481_pp0_iter18_reg <= data_4_reg_1481_pp0_iter17_reg;
        data_4_reg_1481_pp0_iter19_reg <= data_4_reg_1481_pp0_iter18_reg;
        data_4_reg_1481_pp0_iter1_reg <= data_4_reg_1481;
        data_4_reg_1481_pp0_iter20_reg <= data_4_reg_1481_pp0_iter19_reg;
        data_4_reg_1481_pp0_iter21_reg <= data_4_reg_1481_pp0_iter20_reg;
        data_4_reg_1481_pp0_iter22_reg <= data_4_reg_1481_pp0_iter21_reg;
        data_4_reg_1481_pp0_iter23_reg <= data_4_reg_1481_pp0_iter22_reg;
        data_4_reg_1481_pp0_iter24_reg <= data_4_reg_1481_pp0_iter23_reg;
        data_4_reg_1481_pp0_iter25_reg <= data_4_reg_1481_pp0_iter24_reg;
        data_4_reg_1481_pp0_iter2_reg <= data_4_reg_1481_pp0_iter1_reg;
        data_4_reg_1481_pp0_iter3_reg <= data_4_reg_1481_pp0_iter2_reg;
        data_4_reg_1481_pp0_iter4_reg <= data_4_reg_1481_pp0_iter3_reg;
        data_4_reg_1481_pp0_iter5_reg <= data_4_reg_1481_pp0_iter4_reg;
        data_4_reg_1481_pp0_iter6_reg <= data_4_reg_1481_pp0_iter5_reg;
        data_4_reg_1481_pp0_iter7_reg <= data_4_reg_1481_pp0_iter6_reg;
        data_4_reg_1481_pp0_iter8_reg <= data_4_reg_1481_pp0_iter7_reg;
        data_4_reg_1481_pp0_iter9_reg <= data_4_reg_1481_pp0_iter8_reg;
        data_5_reg_1491_pp0_iter10_reg <= data_5_reg_1491_pp0_iter9_reg;
        data_5_reg_1491_pp0_iter11_reg <= data_5_reg_1491_pp0_iter10_reg;
        data_5_reg_1491_pp0_iter12_reg <= data_5_reg_1491_pp0_iter11_reg;
        data_5_reg_1491_pp0_iter13_reg <= data_5_reg_1491_pp0_iter12_reg;
        data_5_reg_1491_pp0_iter14_reg <= data_5_reg_1491_pp0_iter13_reg;
        data_5_reg_1491_pp0_iter15_reg <= data_5_reg_1491_pp0_iter14_reg;
        data_5_reg_1491_pp0_iter16_reg <= data_5_reg_1491_pp0_iter15_reg;
        data_5_reg_1491_pp0_iter17_reg <= data_5_reg_1491_pp0_iter16_reg;
        data_5_reg_1491_pp0_iter18_reg <= data_5_reg_1491_pp0_iter17_reg;
        data_5_reg_1491_pp0_iter19_reg <= data_5_reg_1491_pp0_iter18_reg;
        data_5_reg_1491_pp0_iter1_reg <= data_5_reg_1491;
        data_5_reg_1491_pp0_iter20_reg <= data_5_reg_1491_pp0_iter19_reg;
        data_5_reg_1491_pp0_iter21_reg <= data_5_reg_1491_pp0_iter20_reg;
        data_5_reg_1491_pp0_iter22_reg <= data_5_reg_1491_pp0_iter21_reg;
        data_5_reg_1491_pp0_iter23_reg <= data_5_reg_1491_pp0_iter22_reg;
        data_5_reg_1491_pp0_iter24_reg <= data_5_reg_1491_pp0_iter23_reg;
        data_5_reg_1491_pp0_iter25_reg <= data_5_reg_1491_pp0_iter24_reg;
        data_5_reg_1491_pp0_iter26_reg <= data_5_reg_1491_pp0_iter25_reg;
        data_5_reg_1491_pp0_iter2_reg <= data_5_reg_1491_pp0_iter1_reg;
        data_5_reg_1491_pp0_iter3_reg <= data_5_reg_1491_pp0_iter2_reg;
        data_5_reg_1491_pp0_iter4_reg <= data_5_reg_1491_pp0_iter3_reg;
        data_5_reg_1491_pp0_iter5_reg <= data_5_reg_1491_pp0_iter4_reg;
        data_5_reg_1491_pp0_iter6_reg <= data_5_reg_1491_pp0_iter5_reg;
        data_5_reg_1491_pp0_iter7_reg <= data_5_reg_1491_pp0_iter6_reg;
        data_5_reg_1491_pp0_iter8_reg <= data_5_reg_1491_pp0_iter7_reg;
        data_5_reg_1491_pp0_iter9_reg <= data_5_reg_1491_pp0_iter8_reg;
        data_reg_1441_pp0_iter10_reg <= data_reg_1441_pp0_iter9_reg;
        data_reg_1441_pp0_iter11_reg <= data_reg_1441_pp0_iter10_reg;
        data_reg_1441_pp0_iter12_reg <= data_reg_1441_pp0_iter11_reg;
        data_reg_1441_pp0_iter13_reg <= data_reg_1441_pp0_iter12_reg;
        data_reg_1441_pp0_iter14_reg <= data_reg_1441_pp0_iter13_reg;
        data_reg_1441_pp0_iter15_reg <= data_reg_1441_pp0_iter14_reg;
        data_reg_1441_pp0_iter16_reg <= data_reg_1441_pp0_iter15_reg;
        data_reg_1441_pp0_iter17_reg <= data_reg_1441_pp0_iter16_reg;
        data_reg_1441_pp0_iter18_reg <= data_reg_1441_pp0_iter17_reg;
        data_reg_1441_pp0_iter19_reg <= data_reg_1441_pp0_iter18_reg;
        data_reg_1441_pp0_iter1_reg <= data_reg_1441;
        data_reg_1441_pp0_iter20_reg <= data_reg_1441_pp0_iter19_reg;
        data_reg_1441_pp0_iter21_reg <= data_reg_1441_pp0_iter20_reg;
        data_reg_1441_pp0_iter22_reg <= data_reg_1441_pp0_iter21_reg;
        data_reg_1441_pp0_iter23_reg <= data_reg_1441_pp0_iter22_reg;
        data_reg_1441_pp0_iter24_reg <= data_reg_1441_pp0_iter23_reg;
        data_reg_1441_pp0_iter25_reg <= data_reg_1441_pp0_iter24_reg;
        data_reg_1441_pp0_iter2_reg <= data_reg_1441_pp0_iter1_reg;
        data_reg_1441_pp0_iter3_reg <= data_reg_1441_pp0_iter2_reg;
        data_reg_1441_pp0_iter4_reg <= data_reg_1441_pp0_iter3_reg;
        data_reg_1441_pp0_iter5_reg <= data_reg_1441_pp0_iter4_reg;
        data_reg_1441_pp0_iter6_reg <= data_reg_1441_pp0_iter5_reg;
        data_reg_1441_pp0_iter7_reg <= data_reg_1441_pp0_iter6_reg;
        data_reg_1441_pp0_iter8_reg <= data_reg_1441_pp0_iter7_reg;
        data_reg_1441_pp0_iter9_reg <= data_reg_1441_pp0_iter8_reg;
        scaled_11_reg_1760 <= scaled_11_fu_1148_p3;
        scaled_13_reg_1765 <= scaled_13_fu_1218_p3;
        scaled_15_reg_1770 <= scaled_15_fu_1288_p3;
        scaled_17_reg_1775 <= scaled_17_fu_1358_p3;
        scaled_8_reg_1727 <= grp_generic_round_float_s_fu_324_ap_return;
        select_ln13_reg_1658 <= select_ln13_fu_695_p3;
        trunc_ln313_1_reg_1456 <= trunc_ln313_1_fu_516_p1;
        trunc_ln313_1_reg_1456_pp0_iter1_reg <= trunc_ln313_1_reg_1456;
        trunc_ln313_2_reg_1466 <= trunc_ln313_2_fu_520_p1;
        trunc_ln313_2_reg_1466_pp0_iter1_reg <= trunc_ln313_2_reg_1466;
        trunc_ln313_2_reg_1466_pp0_iter2_reg <= trunc_ln313_2_reg_1466_pp0_iter1_reg;
        trunc_ln313_2_reg_1466_pp0_iter3_reg <= trunc_ln313_2_reg_1466_pp0_iter2_reg;
        trunc_ln313_3_reg_1476 <= trunc_ln313_3_fu_524_p1;
        trunc_ln313_3_reg_1476_pp0_iter1_reg <= trunc_ln313_3_reg_1476;
        trunc_ln313_3_reg_1476_pp0_iter2_reg <= trunc_ln313_3_reg_1476_pp0_iter1_reg;
        trunc_ln313_3_reg_1476_pp0_iter3_reg <= trunc_ln313_3_reg_1476_pp0_iter2_reg;
        trunc_ln313_3_reg_1476_pp0_iter4_reg <= trunc_ln313_3_reg_1476_pp0_iter3_reg;
        trunc_ln313_4_reg_1486 <= trunc_ln313_4_fu_528_p1;
        trunc_ln313_4_reg_1486_pp0_iter1_reg <= trunc_ln313_4_reg_1486;
        trunc_ln313_4_reg_1486_pp0_iter2_reg <= trunc_ln313_4_reg_1486_pp0_iter1_reg;
        trunc_ln313_4_reg_1486_pp0_iter3_reg <= trunc_ln313_4_reg_1486_pp0_iter2_reg;
        trunc_ln313_4_reg_1486_pp0_iter4_reg <= trunc_ln313_4_reg_1486_pp0_iter3_reg;
        trunc_ln313_4_reg_1486_pp0_iter5_reg <= trunc_ln313_4_reg_1486_pp0_iter4_reg;
        trunc_ln313_4_reg_1486_pp0_iter6_reg <= trunc_ln313_4_reg_1486_pp0_iter5_reg;
        trunc_ln313_5_reg_1496 <= trunc_ln313_5_fu_532_p1;
        trunc_ln313_5_reg_1496_pp0_iter1_reg <= trunc_ln313_5_reg_1496;
        trunc_ln313_5_reg_1496_pp0_iter2_reg <= trunc_ln313_5_reg_1496_pp0_iter1_reg;
        trunc_ln313_5_reg_1496_pp0_iter3_reg <= trunc_ln313_5_reg_1496_pp0_iter2_reg;
        trunc_ln313_5_reg_1496_pp0_iter4_reg <= trunc_ln313_5_reg_1496_pp0_iter3_reg;
        trunc_ln313_5_reg_1496_pp0_iter5_reg <= trunc_ln313_5_reg_1496_pp0_iter4_reg;
        trunc_ln313_5_reg_1496_pp0_iter6_reg <= trunc_ln313_5_reg_1496_pp0_iter5_reg;
        trunc_ln313_5_reg_1496_pp0_iter7_reg <= trunc_ln313_5_reg_1496_pp0_iter6_reg;
        trunc_ln313_reg_1446 <= trunc_ln313_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_6_reg_1521 <= input_0_q0;
        data_7_reg_1531 <= input_1_q0;
        data_8_reg_1541 <= input_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_6_reg_1521_pp0_iter10_reg <= data_6_reg_1521_pp0_iter9_reg;
        data_6_reg_1521_pp0_iter11_reg <= data_6_reg_1521_pp0_iter10_reg;
        data_6_reg_1521_pp0_iter12_reg <= data_6_reg_1521_pp0_iter11_reg;
        data_6_reg_1521_pp0_iter13_reg <= data_6_reg_1521_pp0_iter12_reg;
        data_6_reg_1521_pp0_iter14_reg <= data_6_reg_1521_pp0_iter13_reg;
        data_6_reg_1521_pp0_iter15_reg <= data_6_reg_1521_pp0_iter14_reg;
        data_6_reg_1521_pp0_iter16_reg <= data_6_reg_1521_pp0_iter15_reg;
        data_6_reg_1521_pp0_iter17_reg <= data_6_reg_1521_pp0_iter16_reg;
        data_6_reg_1521_pp0_iter18_reg <= data_6_reg_1521_pp0_iter17_reg;
        data_6_reg_1521_pp0_iter19_reg <= data_6_reg_1521_pp0_iter18_reg;
        data_6_reg_1521_pp0_iter20_reg <= data_6_reg_1521_pp0_iter19_reg;
        data_6_reg_1521_pp0_iter21_reg <= data_6_reg_1521_pp0_iter20_reg;
        data_6_reg_1521_pp0_iter22_reg <= data_6_reg_1521_pp0_iter21_reg;
        data_6_reg_1521_pp0_iter23_reg <= data_6_reg_1521_pp0_iter22_reg;
        data_6_reg_1521_pp0_iter24_reg <= data_6_reg_1521_pp0_iter23_reg;
        data_6_reg_1521_pp0_iter25_reg <= data_6_reg_1521_pp0_iter24_reg;
        data_6_reg_1521_pp0_iter26_reg <= data_6_reg_1521_pp0_iter25_reg;
        data_6_reg_1521_pp0_iter2_reg <= data_6_reg_1521;
        data_6_reg_1521_pp0_iter3_reg <= data_6_reg_1521_pp0_iter2_reg;
        data_6_reg_1521_pp0_iter4_reg <= data_6_reg_1521_pp0_iter3_reg;
        data_6_reg_1521_pp0_iter5_reg <= data_6_reg_1521_pp0_iter4_reg;
        data_6_reg_1521_pp0_iter6_reg <= data_6_reg_1521_pp0_iter5_reg;
        data_6_reg_1521_pp0_iter7_reg <= data_6_reg_1521_pp0_iter6_reg;
        data_6_reg_1521_pp0_iter8_reg <= data_6_reg_1521_pp0_iter7_reg;
        data_6_reg_1521_pp0_iter9_reg <= data_6_reg_1521_pp0_iter8_reg;
        data_7_reg_1531_pp0_iter10_reg <= data_7_reg_1531_pp0_iter9_reg;
        data_7_reg_1531_pp0_iter11_reg <= data_7_reg_1531_pp0_iter10_reg;
        data_7_reg_1531_pp0_iter12_reg <= data_7_reg_1531_pp0_iter11_reg;
        data_7_reg_1531_pp0_iter13_reg <= data_7_reg_1531_pp0_iter12_reg;
        data_7_reg_1531_pp0_iter14_reg <= data_7_reg_1531_pp0_iter13_reg;
        data_7_reg_1531_pp0_iter15_reg <= data_7_reg_1531_pp0_iter14_reg;
        data_7_reg_1531_pp0_iter16_reg <= data_7_reg_1531_pp0_iter15_reg;
        data_7_reg_1531_pp0_iter17_reg <= data_7_reg_1531_pp0_iter16_reg;
        data_7_reg_1531_pp0_iter18_reg <= data_7_reg_1531_pp0_iter17_reg;
        data_7_reg_1531_pp0_iter19_reg <= data_7_reg_1531_pp0_iter18_reg;
        data_7_reg_1531_pp0_iter20_reg <= data_7_reg_1531_pp0_iter19_reg;
        data_7_reg_1531_pp0_iter21_reg <= data_7_reg_1531_pp0_iter20_reg;
        data_7_reg_1531_pp0_iter22_reg <= data_7_reg_1531_pp0_iter21_reg;
        data_7_reg_1531_pp0_iter23_reg <= data_7_reg_1531_pp0_iter22_reg;
        data_7_reg_1531_pp0_iter24_reg <= data_7_reg_1531_pp0_iter23_reg;
        data_7_reg_1531_pp0_iter25_reg <= data_7_reg_1531_pp0_iter24_reg;
        data_7_reg_1531_pp0_iter26_reg <= data_7_reg_1531_pp0_iter25_reg;
        data_7_reg_1531_pp0_iter2_reg <= data_7_reg_1531;
        data_7_reg_1531_pp0_iter3_reg <= data_7_reg_1531_pp0_iter2_reg;
        data_7_reg_1531_pp0_iter4_reg <= data_7_reg_1531_pp0_iter3_reg;
        data_7_reg_1531_pp0_iter5_reg <= data_7_reg_1531_pp0_iter4_reg;
        data_7_reg_1531_pp0_iter6_reg <= data_7_reg_1531_pp0_iter5_reg;
        data_7_reg_1531_pp0_iter7_reg <= data_7_reg_1531_pp0_iter6_reg;
        data_7_reg_1531_pp0_iter8_reg <= data_7_reg_1531_pp0_iter7_reg;
        data_7_reg_1531_pp0_iter9_reg <= data_7_reg_1531_pp0_iter8_reg;
        data_8_reg_1541_pp0_iter10_reg <= data_8_reg_1541_pp0_iter9_reg;
        data_8_reg_1541_pp0_iter11_reg <= data_8_reg_1541_pp0_iter10_reg;
        data_8_reg_1541_pp0_iter12_reg <= data_8_reg_1541_pp0_iter11_reg;
        data_8_reg_1541_pp0_iter13_reg <= data_8_reg_1541_pp0_iter12_reg;
        data_8_reg_1541_pp0_iter14_reg <= data_8_reg_1541_pp0_iter13_reg;
        data_8_reg_1541_pp0_iter15_reg <= data_8_reg_1541_pp0_iter14_reg;
        data_8_reg_1541_pp0_iter16_reg <= data_8_reg_1541_pp0_iter15_reg;
        data_8_reg_1541_pp0_iter17_reg <= data_8_reg_1541_pp0_iter16_reg;
        data_8_reg_1541_pp0_iter18_reg <= data_8_reg_1541_pp0_iter17_reg;
        data_8_reg_1541_pp0_iter19_reg <= data_8_reg_1541_pp0_iter18_reg;
        data_8_reg_1541_pp0_iter20_reg <= data_8_reg_1541_pp0_iter19_reg;
        data_8_reg_1541_pp0_iter21_reg <= data_8_reg_1541_pp0_iter20_reg;
        data_8_reg_1541_pp0_iter22_reg <= data_8_reg_1541_pp0_iter21_reg;
        data_8_reg_1541_pp0_iter23_reg <= data_8_reg_1541_pp0_iter22_reg;
        data_8_reg_1541_pp0_iter24_reg <= data_8_reg_1541_pp0_iter23_reg;
        data_8_reg_1541_pp0_iter25_reg <= data_8_reg_1541_pp0_iter24_reg;
        data_8_reg_1541_pp0_iter26_reg <= data_8_reg_1541_pp0_iter25_reg;
        data_8_reg_1541_pp0_iter2_reg <= data_8_reg_1541;
        data_8_reg_1541_pp0_iter3_reg <= data_8_reg_1541_pp0_iter2_reg;
        data_8_reg_1541_pp0_iter4_reg <= data_8_reg_1541_pp0_iter3_reg;
        data_8_reg_1541_pp0_iter5_reg <= data_8_reg_1541_pp0_iter4_reg;
        data_8_reg_1541_pp0_iter6_reg <= data_8_reg_1541_pp0_iter5_reg;
        data_8_reg_1541_pp0_iter7_reg <= data_8_reg_1541_pp0_iter6_reg;
        data_8_reg_1541_pp0_iter8_reg <= data_8_reg_1541_pp0_iter7_reg;
        data_8_reg_1541_pp0_iter9_reg <= data_8_reg_1541_pp0_iter8_reg;
        div_reg_1663 <= grp_fu_479_p2;
        icmp_ln23_1_reg_1648 <= icmp_ln23_1_fu_679_p2;
        icmp_ln23_reg_1643 <= icmp_ln23_fu_673_p2;
        scale_reg_1668 <= grp_fu_400_p1;
        scale_reg_1668_pp0_iter27_reg <= scale_reg_1668;
        scale_reg_1668_pp0_iter28_reg <= scale_reg_1668_pp0_iter27_reg;
        scaled_1_reg_1735 <= scaled_1_fu_800_p3;
        scaled_3_reg_1740 <= scaled_3_fu_870_p3;
        scaled_5_reg_1745 <= scaled_5_fu_940_p3;
        scaled_7_reg_1750 <= scaled_7_fu_1010_p3;
        scaled_9_reg_1755 <= scaled_9_fu_1079_p3;
        sum_8_reg_1631 <= grp_fu_350_p2;
        tmp_9_reg_1653 <= tmp_9_fu_403_p1;
        trunc_ln313_6_reg_1526 <= trunc_ln313_6_fu_548_p1;
        trunc_ln313_6_reg_1526_pp0_iter2_reg <= trunc_ln313_6_reg_1526;
        trunc_ln313_6_reg_1526_pp0_iter3_reg <= trunc_ln313_6_reg_1526_pp0_iter2_reg;
        trunc_ln313_6_reg_1526_pp0_iter4_reg <= trunc_ln313_6_reg_1526_pp0_iter3_reg;
        trunc_ln313_6_reg_1526_pp0_iter5_reg <= trunc_ln313_6_reg_1526_pp0_iter4_reg;
        trunc_ln313_6_reg_1526_pp0_iter6_reg <= trunc_ln313_6_reg_1526_pp0_iter5_reg;
        trunc_ln313_6_reg_1526_pp0_iter7_reg <= trunc_ln313_6_reg_1526_pp0_iter6_reg;
        trunc_ln313_6_reg_1526_pp0_iter8_reg <= trunc_ln313_6_reg_1526_pp0_iter7_reg;
        trunc_ln313_6_reg_1526_pp0_iter9_reg <= trunc_ln313_6_reg_1526_pp0_iter8_reg;
        trunc_ln313_7_reg_1536 <= trunc_ln313_7_fu_552_p1;
        trunc_ln313_7_reg_1536_pp0_iter10_reg <= trunc_ln313_7_reg_1536_pp0_iter9_reg;
        trunc_ln313_7_reg_1536_pp0_iter11_reg <= trunc_ln313_7_reg_1536_pp0_iter10_reg;
        trunc_ln313_7_reg_1536_pp0_iter2_reg <= trunc_ln313_7_reg_1536;
        trunc_ln313_7_reg_1536_pp0_iter3_reg <= trunc_ln313_7_reg_1536_pp0_iter2_reg;
        trunc_ln313_7_reg_1536_pp0_iter4_reg <= trunc_ln313_7_reg_1536_pp0_iter3_reg;
        trunc_ln313_7_reg_1536_pp0_iter5_reg <= trunc_ln313_7_reg_1536_pp0_iter4_reg;
        trunc_ln313_7_reg_1536_pp0_iter6_reg <= trunc_ln313_7_reg_1536_pp0_iter5_reg;
        trunc_ln313_7_reg_1536_pp0_iter7_reg <= trunc_ln313_7_reg_1536_pp0_iter6_reg;
        trunc_ln313_7_reg_1536_pp0_iter8_reg <= trunc_ln313_7_reg_1536_pp0_iter7_reg;
        trunc_ln313_7_reg_1536_pp0_iter9_reg <= trunc_ln313_7_reg_1536_pp0_iter8_reg;
        trunc_ln313_8_reg_1546 <= trunc_ln313_8_fu_556_p1;
        trunc_ln313_8_reg_1546_pp0_iter10_reg <= trunc_ln313_8_reg_1546_pp0_iter9_reg;
        trunc_ln313_8_reg_1546_pp0_iter11_reg <= trunc_ln313_8_reg_1546_pp0_iter10_reg;
        trunc_ln313_8_reg_1546_pp0_iter12_reg <= trunc_ln313_8_reg_1546_pp0_iter11_reg;
        trunc_ln313_8_reg_1546_pp0_iter2_reg <= trunc_ln313_8_reg_1546;
        trunc_ln313_8_reg_1546_pp0_iter3_reg <= trunc_ln313_8_reg_1546_pp0_iter2_reg;
        trunc_ln313_8_reg_1546_pp0_iter4_reg <= trunc_ln313_8_reg_1546_pp0_iter3_reg;
        trunc_ln313_8_reg_1546_pp0_iter5_reg <= trunc_ln313_8_reg_1546_pp0_iter4_reg;
        trunc_ln313_8_reg_1546_pp0_iter6_reg <= trunc_ln313_8_reg_1546_pp0_iter5_reg;
        trunc_ln313_8_reg_1546_pp0_iter7_reg <= trunc_ln313_8_reg_1546_pp0_iter6_reg;
        trunc_ln313_8_reg_1546_pp0_iter8_reg <= trunc_ln313_8_reg_1546_pp0_iter7_reg;
        trunc_ln313_8_reg_1546_pp0_iter9_reg <= trunc_ln313_8_reg_1546_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mean_reg_1636 <= grp_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)))) begin
        reg_484 <= grp_generic_round_float_s_fu_288_ap_return;
        reg_491 <= grp_generic_round_float_s_fu_297_ap_return;
        reg_498 <= grp_generic_round_float_s_fu_306_ap_return;
        reg_505 <= grp_generic_round_float_s_fu_315_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_1_reg_1561 <= grp_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_2_reg_1571 <= grp_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_3_reg_1581 <= grp_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_4_reg_1591 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_5_reg_1601 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_6_reg_1611 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_7_reg_1621 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_1551 <= grp_fu_333_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) 
    & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) 
    & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to31 = 1'b1;
    end else begin
        ap_idle_pp0_0to31 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) 
    & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to32 = 1'b1;
    end else begin
        ap_idle_pp0_1to32 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to31 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_333_p0 = sum_reg_1551;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_333_p0 = bitcast_ln327_fu_543_p1;
    end else begin
        grp_fu_333_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_333_p1 = bitcast_ln327_1_fu_567_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_333_p1 = 32'd0;
    end else begin
        grp_fu_333_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_338_p0 = sum_2_reg_1571;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_338_p0 = sum_1_reg_1561;
    end else begin
        grp_fu_338_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_338_p1 = bitcast_ln327_3_fu_591_p1;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_338_p1 = bitcast_ln327_2_fu_579_p1;
    end else begin
        grp_fu_338_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_342_p0 = sum_4_reg_1591;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_342_p0 = sum_3_reg_1581;
    end else begin
        grp_fu_342_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_342_p1 = bitcast_ln327_5_fu_615_p1;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_342_p1 = bitcast_ln327_4_fu_603_p1;
    end else begin
        grp_fu_342_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_346_p0 = sum_6_reg_1611;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_346_p0 = sum_5_reg_1601;
    end else begin
        grp_fu_346_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_346_p1 = bitcast_ln327_7_fu_639_p1;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_346_p1 = bitcast_ln327_6_fu_627_p1;
    end else begin
        grp_fu_346_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_354_p0 = dc_5_fu_722_p1;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_354_p0 = dc_fu_702_p1;
    end else begin
        grp_fu_354_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_359_p0 = dc_6_fu_726_p1;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_359_p0 = dc_1_fu_706_p1;
    end else begin
        grp_fu_359_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_364_p0 = dc_7_fu_730_p1;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_364_p0 = dc_2_fu_710_p1;
    end else begin
        grp_fu_364_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_369_p0 = dc_8_fu_734_p1;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_369_p0 = dc_3_fu_714_p1;
    end else begin
        grp_fu_369_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_379_p0 = scaled_9_reg_1755;
    end else if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_379_p0 = sum_8_reg_1631;
    end else begin
        grp_fu_379_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_379_p1 = scale_reg_1668_pp0_iter28_reg;
    end else if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_379_p1 = 32'd1091567616;
    end else begin
        grp_fu_379_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_384_p0 = scaled_11_reg_1760;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_384_p0 = scaled_1_reg_1735;
    end else begin
        grp_fu_384_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_388_p0 = scaled_13_reg_1765;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_388_p0 = scaled_3_reg_1740;
    end else begin
        grp_fu_388_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_392_p0 = scaled_15_reg_1770;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_392_p0 = scaled_5_reg_1745;
    end else begin
        grp_fu_392_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_396_p0 = scaled_17_reg_1775;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_396_p0 = scaled_7_reg_1750;
    end else begin
        grp_fu_396_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_406_opcode = 5'd2;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001))) begin
        grp_fu_406_opcode = 5'd4;
    end else begin
        grp_fu_406_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_406_p0 = grp_generic_round_float_s_fu_288_ap_return;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_406_p0 = mean_reg_1636;
    end else begin
        grp_fu_406_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_406_p1 = 32'd1065353216;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_406_p1 = 32'd925353388;
    end else begin
        grp_fu_406_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_413_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_413_opcode = 5'd4;
    end else begin
        grp_fu_413_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_413_p1 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_413_p1 = 32'd3212836864;
    end else begin
        grp_fu_413_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_419_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_419_opcode = 5'd2;
    end else begin
        grp_fu_419_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_419_p0 = grp_generic_round_float_s_fu_288_ap_return;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_419_p0 = grp_generic_round_float_s_fu_297_ap_return;
    end else begin
        grp_fu_419_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_419_p1 = 32'd3212836864;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_419_p1 = 32'd1065353216;
    end else begin
        grp_fu_419_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_425_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_425_opcode = 5'd4;
    end else begin
        grp_fu_425_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_425_p1 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_425_p1 = 32'd3212836864;
    end else begin
        grp_fu_425_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_431_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_431_opcode = 5'd2;
    end else begin
        grp_fu_431_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_431_p0 = grp_generic_round_float_s_fu_297_ap_return;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_431_p0 = grp_generic_round_float_s_fu_306_ap_return;
    end else begin
        grp_fu_431_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_431_p1 = 32'd3212836864;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_431_p1 = 32'd1065353216;
    end else begin
        grp_fu_431_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_437_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_437_opcode = 5'd4;
    end else begin
        grp_fu_437_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_437_p1 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_437_p1 = 32'd3212836864;
    end else begin
        grp_fu_437_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_443_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_443_opcode = 5'd2;
    end else begin
        grp_fu_443_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_443_p0 = grp_generic_round_float_s_fu_306_ap_return;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_443_p0 = grp_generic_round_float_s_fu_315_ap_return;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_443_p1 = 32'd3212836864;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_443_p1 = 32'd1065353216;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_449_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_449_opcode = 5'd4;
    end else begin
        grp_fu_449_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_449_p1 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_449_p1 = 32'd3212836864;
    end else begin
        grp_fu_449_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_455_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_455_opcode = 5'd2;
    end else begin
        grp_fu_455_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_455_p0 = grp_generic_round_float_s_fu_315_ap_return;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_455_p0 = grp_generic_round_float_s_fu_324_ap_return;
    end else begin
        grp_fu_455_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_455_p1 = 32'd3212836864;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_455_p1 = 32'd1065353216;
    end else begin
        grp_fu_455_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            input_0_address0 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            input_0_address0 = 64'd1;
        end else begin
            input_0_address0 = 'bx;
        end
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            input_1_address0 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            input_1_address0 = 64'd1;
        end else begin
            input_1_address0 = 'bx;
        end
    end else begin
        input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_1_ce1 = 1'b1;
    end else begin
        input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            input_2_address0 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            input_2_address0 = 64'd1;
        end else begin
            input_2_address0 = 'bx;
        end
    end else begin
        input_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_2_ce0 = 1'b1;
    end else begin
        input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_ce1 = 1'b1;
    end else begin
        input_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_0_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_0_address0 = 64'd1;
    end else begin
        output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_0_ce1 = 1'b1;
    end else begin
        output_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_0_d0 = bitcast_ln23_2_fu_1386_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_0_d0 = bitcast_ln23_1_fu_1371_p1;
    end else begin
        output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_0_we1 = 1'b1;
    end else begin
        output_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_1_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_1_address0 = 64'd0;
    end else begin
        output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_1_ce1 = 1'b1;
    end else begin
        output_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_1_d0 = bitcast_ln23_5_fu_1396_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_1_d0 = bitcast_ln23_3_fu_1376_p1;
    end else begin
        output_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
        output_1_we0 = 1'b1;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_1_we1 = 1'b1;
    end else begin
        output_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_2_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_2_address0 = 64'd0;
    end else begin
        output_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
        output_2_ce0 = 1'b1;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_2_ce1 = 1'b1;
    end else begin
        output_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_2_d0 = bitcast_ln23_8_fu_1406_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        output_2_d0 = bitcast_ln23_6_fu_1381_p1;
    end else begin
        output_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
        output_2_we0 = 1'b1;
    end else begin
        output_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        output_2_we1 = 1'b1;
    end else begin
        output_2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to32 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln22_10_fu_1122_p2 = (or_ln22_14_fu_1116_p2 & grp_fu_413_p2);

assign and_ln22_11_fu_1128_p2 = (or_ln22_14_fu_1116_p2 & grp_fu_419_p2);

assign and_ln22_12_fu_1192_p2 = (or_ln22_15_fu_1186_p2 & grp_fu_425_p2);

assign and_ln22_13_fu_1198_p2 = (or_ln22_15_fu_1186_p2 & grp_fu_431_p2);

assign and_ln22_14_fu_1262_p2 = (or_ln22_16_fu_1256_p2 & grp_fu_437_p2);

assign and_ln22_15_fu_1268_p2 = (or_ln22_16_fu_1256_p2 & grp_fu_443_p2);

assign and_ln22_16_fu_1332_p2 = (or_ln22_17_fu_1326_p2 & grp_fu_449_p2);

assign and_ln22_17_fu_1338_p2 = (or_ln22_17_fu_1326_p2 & grp_fu_455_p2);

assign and_ln22_1_fu_780_p2 = (or_ln22_9_fu_768_p2 & grp_fu_413_p2);

assign and_ln22_2_fu_844_p2 = (or_ln22_10_fu_838_p2 & grp_fu_419_p2);

assign and_ln22_3_fu_850_p2 = (or_ln22_10_fu_838_p2 & grp_fu_425_p2);

assign and_ln22_4_fu_914_p2 = (or_ln22_11_fu_908_p2 & grp_fu_431_p2);

assign and_ln22_5_fu_920_p2 = (or_ln22_11_fu_908_p2 & grp_fu_437_p2);

assign and_ln22_6_fu_984_p2 = (or_ln22_12_fu_978_p2 & grp_fu_443_p2);

assign and_ln22_7_fu_990_p2 = (or_ln22_12_fu_978_p2 & grp_fu_449_p2);

assign and_ln22_8_fu_1053_p2 = (or_ln22_13_fu_1047_p2 & grp_fu_455_p2);

assign and_ln22_9_fu_1059_p2 = (or_ln22_13_fu_1047_p2 & grp_fu_461_p2);

assign and_ln22_fu_774_p2 = (or_ln22_9_fu_768_p2 & grp_fu_406_p2);

assign and_ln23_fu_689_p2 = (or_ln23_fu_685_p2 & grp_fu_406_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln22_1_fu_808_p1 = reg_491;

assign bitcast_ln22_2_fu_878_p1 = reg_498;

assign bitcast_ln22_3_fu_948_p1 = reg_505;

assign bitcast_ln22_4_fu_1018_p1 = scaled_8_reg_1727;

assign bitcast_ln22_5_fu_1086_p1 = reg_484;

assign bitcast_ln22_6_fu_1156_p1 = reg_491;

assign bitcast_ln22_7_fu_1226_p1 = reg_498;

assign bitcast_ln22_8_fu_1296_p1 = reg_505;

assign bitcast_ln22_fu_738_p1 = reg_484;

assign bitcast_ln23_1_fu_1371_p1 = grp_fu_396_p2;

assign bitcast_ln23_2_fu_1386_p1 = grp_fu_388_p2;

assign bitcast_ln23_3_fu_1376_p1 = grp_fu_388_p2;

assign bitcast_ln23_5_fu_1396_p1 = grp_fu_392_p2;

assign bitcast_ln23_6_fu_1381_p1 = grp_fu_392_p2;

assign bitcast_ln23_8_fu_1406_p1 = grp_fu_396_p2;

assign bitcast_ln23_9_fu_656_p1 = mean_reg_1636;

assign bitcast_ln327_1_fu_567_p1 = t_1_fu_560_p3;

assign bitcast_ln327_2_fu_579_p1 = t_2_fu_572_p3;

assign bitcast_ln327_3_fu_591_p1 = t_3_fu_584_p3;

assign bitcast_ln327_4_fu_603_p1 = t_4_fu_596_p3;

assign bitcast_ln327_5_fu_615_p1 = t_5_fu_608_p3;

assign bitcast_ln327_6_fu_627_p1 = t_6_fu_620_p3;

assign bitcast_ln327_7_fu_639_p1 = t_7_fu_632_p3;

assign bitcast_ln327_fu_543_p1 = t_fu_536_p3;

assign dc_1_fu_706_p1 = data_1_reg_1451_pp0_iter25_reg;

assign dc_2_fu_710_p1 = data_2_reg_1461_pp0_iter25_reg;

assign dc_3_fu_714_p1 = data_3_reg_1471_pp0_iter25_reg;

assign dc_5_fu_722_p1 = data_5_reg_1491_pp0_iter26_reg;

assign dc_6_fu_726_p1 = data_6_reg_1521_pp0_iter26_reg;

assign dc_7_fu_730_p1 = data_7_reg_1531_pp0_iter26_reg;

assign dc_8_fu_734_p1 = data_8_reg_1541_pp0_iter26_reg;

assign dc_fu_702_p1 = data_reg_1441_pp0_iter25_reg;

assign grp_fu_350_p1 = t_8_fu_644_p3;

assign grp_fu_374_p0 = data_4_reg_1481_pp0_iter25_reg;

assign grp_generic_round_float_s_fu_288_ap_start = grp_generic_round_float_s_fu_288_ap_start_reg;

assign grp_generic_round_float_s_fu_297_ap_start = grp_generic_round_float_s_fu_297_ap_start_reg;

assign grp_generic_round_float_s_fu_306_ap_start = grp_generic_round_float_s_fu_306_ap_start_reg;

assign grp_generic_round_float_s_fu_315_ap_start = grp_generic_round_float_s_fu_315_ap_start_reg;

assign grp_generic_round_float_s_fu_324_ap_start = grp_generic_round_float_s_fu_324_ap_start_reg;

assign icmp_ln22_10_fu_1104_p2 = ((tmp_17_fu_1090_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_11_fu_1110_p2 = ((trunc_ln22_5_fu_1100_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_12_fu_1174_p2 = ((tmp_20_fu_1160_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_13_fu_1180_p2 = ((trunc_ln22_6_fu_1170_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_14_fu_1244_p2 = ((tmp_23_fu_1230_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_15_fu_1250_p2 = ((trunc_ln22_7_fu_1240_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_16_fu_1314_p2 = ((tmp_26_fu_1300_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_17_fu_1320_p2 = ((trunc_ln22_8_fu_1310_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_1_fu_762_p2 = ((trunc_ln22_fu_752_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_2_fu_826_p2 = ((tmp_6_fu_812_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_3_fu_832_p2 = ((trunc_ln22_1_fu_822_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_4_fu_896_p2 = ((tmp_4_fu_882_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_5_fu_902_p2 = ((trunc_ln22_2_fu_892_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_6_fu_966_p2 = ((tmp_11_fu_952_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_7_fu_972_p2 = ((trunc_ln22_3_fu_962_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_8_fu_1035_p2 = ((tmp_14_fu_1021_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln22_9_fu_1041_p2 = ((trunc_ln22_4_fu_1031_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_756_p2 = ((tmp_2_fu_742_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_679_p2 = ((trunc_ln23_fu_669_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_673_p2 = ((tmp_fu_659_p4 != 8'd255) ? 1'b1 : 1'b0);

assign input_0_address1 = 64'd0;

assign input_1_address1 = 64'd0;

assign input_2_address1 = 64'd0;

assign or_ln22_10_fu_838_p2 = (icmp_ln22_3_fu_832_p2 | icmp_ln22_2_fu_826_p2);

assign or_ln22_11_fu_908_p2 = (icmp_ln22_5_fu_902_p2 | icmp_ln22_4_fu_896_p2);

assign or_ln22_12_fu_978_p2 = (icmp_ln22_7_fu_972_p2 | icmp_ln22_6_fu_966_p2);

assign or_ln22_13_fu_1047_p2 = (icmp_ln22_9_fu_1041_p2 | icmp_ln22_8_fu_1035_p2);

assign or_ln22_14_fu_1116_p2 = (icmp_ln22_11_fu_1110_p2 | icmp_ln22_10_fu_1104_p2);

assign or_ln22_15_fu_1186_p2 = (icmp_ln22_13_fu_1180_p2 | icmp_ln22_12_fu_1174_p2);

assign or_ln22_16_fu_1256_p2 = (icmp_ln22_15_fu_1250_p2 | icmp_ln22_14_fu_1244_p2);

assign or_ln22_17_fu_1326_p2 = (icmp_ln22_17_fu_1320_p2 | icmp_ln22_16_fu_1314_p2);

assign or_ln22_1_fu_864_p2 = (and_ln22_3_fu_850_p2 | and_ln22_2_fu_844_p2);

assign or_ln22_2_fu_934_p2 = (and_ln22_5_fu_920_p2 | and_ln22_4_fu_914_p2);

assign or_ln22_3_fu_1004_p2 = (and_ln22_7_fu_990_p2 | and_ln22_6_fu_984_p2);

assign or_ln22_4_fu_1073_p2 = (and_ln22_9_fu_1059_p2 | and_ln22_8_fu_1053_p2);

assign or_ln22_5_fu_1142_p2 = (and_ln22_11_fu_1128_p2 | and_ln22_10_fu_1122_p2);

assign or_ln22_6_fu_1212_p2 = (and_ln22_13_fu_1198_p2 | and_ln22_12_fu_1192_p2);

assign or_ln22_7_fu_1282_p2 = (and_ln22_15_fu_1268_p2 | and_ln22_14_fu_1262_p2);

assign or_ln22_8_fu_1352_p2 = (and_ln22_17_fu_1338_p2 | and_ln22_16_fu_1332_p2);

assign or_ln22_9_fu_768_p2 = (icmp_ln22_fu_756_p2 | icmp_ln22_1_fu_762_p2);

assign or_ln22_fu_794_p2 = (and_ln22_fu_774_p2 | and_ln22_1_fu_780_p2);

assign or_ln23_fu_685_p2 = (icmp_ln23_reg_1643 | icmp_ln23_1_reg_1648);

assign output_0_address1 = 64'd0;

assign output_0_d1 = grp_fu_384_p2;

assign output_1_address1 = 64'd1;

assign output_1_d1 = grp_fu_379_p2;

assign output_2_address1 = 64'd1;

assign output_2_d1 = grp_fu_384_p2;

assign scaled_11_fu_1148_p3 = ((or_ln22_5_fu_1142_p2[0:0] == 1'b1) ? select_ln22_10_fu_1134_p3 : reg_484);

assign scaled_13_fu_1218_p3 = ((or_ln22_6_fu_1212_p2[0:0] == 1'b1) ? select_ln22_12_fu_1204_p3 : reg_491);

assign scaled_15_fu_1288_p3 = ((or_ln22_7_fu_1282_p2[0:0] == 1'b1) ? select_ln22_14_fu_1274_p3 : reg_498);

assign scaled_17_fu_1358_p3 = ((or_ln22_8_fu_1352_p2[0:0] == 1'b1) ? select_ln22_16_fu_1344_p3 : reg_505);

assign scaled_1_fu_800_p3 = ((or_ln22_fu_794_p2[0:0] == 1'b1) ? select_ln22_fu_786_p3 : reg_484);

assign scaled_3_fu_870_p3 = ((or_ln22_1_fu_864_p2[0:0] == 1'b1) ? select_ln22_2_fu_856_p3 : reg_491);

assign scaled_5_fu_940_p3 = ((or_ln22_2_fu_934_p2[0:0] == 1'b1) ? select_ln22_4_fu_926_p3 : reg_498);

assign scaled_7_fu_1010_p3 = ((or_ln22_3_fu_1004_p2[0:0] == 1'b1) ? select_ln22_6_fu_996_p3 : reg_505);

assign scaled_9_fu_1079_p3 = ((or_ln22_4_fu_1073_p2[0:0] == 1'b1) ? select_ln22_8_fu_1065_p3 : scaled_8_reg_1727);

assign select_ln13_fu_695_p3 = ((and_ln23_fu_689_p2[0:0] == 1'b1) ? 64'd4532020583461814272 : tmp_9_reg_1653);

assign select_ln22_10_fu_1134_p3 = ((and_ln22_10_fu_1122_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_12_fu_1204_p3 = ((and_ln22_12_fu_1192_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_14_fu_1274_p3 = ((and_ln22_14_fu_1262_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_16_fu_1344_p3 = ((and_ln22_16_fu_1332_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_2_fu_856_p3 = ((and_ln22_2_fu_844_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_4_fu_926_p3 = ((and_ln22_4_fu_914_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_6_fu_996_p3 = ((and_ln22_6_fu_984_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_8_fu_1065_p3 = ((and_ln22_8_fu_1053_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln22_fu_786_p3 = ((and_ln22_fu_774_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign t_1_fu_560_p3 = {{1'd0}, {trunc_ln313_1_reg_1456_pp0_iter1_reg}};

assign t_2_fu_572_p3 = {{1'd0}, {trunc_ln313_2_reg_1466_pp0_iter3_reg}};

assign t_3_fu_584_p3 = {{1'd0}, {trunc_ln313_3_reg_1476_pp0_iter4_reg}};

assign t_4_fu_596_p3 = {{1'd0}, {trunc_ln313_4_reg_1486_pp0_iter6_reg}};

assign t_5_fu_608_p3 = {{1'd0}, {trunc_ln313_5_reg_1496_pp0_iter7_reg}};

assign t_6_fu_620_p3 = {{1'd0}, {trunc_ln313_6_reg_1526_pp0_iter9_reg}};

assign t_7_fu_632_p3 = {{1'd0}, {trunc_ln313_7_reg_1536_pp0_iter11_reg}};

assign t_8_fu_644_p3 = {{1'd0}, {trunc_ln313_8_reg_1546_pp0_iter12_reg}};

assign t_fu_536_p3 = {{1'd0}, {trunc_ln313_reg_1446}};

assign tmp_11_fu_952_p4 = {{bitcast_ln22_3_fu_948_p1[30:23]}};

assign tmp_14_fu_1021_p4 = {{bitcast_ln22_4_fu_1018_p1[30:23]}};

assign tmp_17_fu_1090_p4 = {{bitcast_ln22_5_fu_1086_p1[30:23]}};

assign tmp_20_fu_1160_p4 = {{bitcast_ln22_6_fu_1156_p1[30:23]}};

assign tmp_23_fu_1230_p4 = {{bitcast_ln22_7_fu_1226_p1[30:23]}};

assign tmp_26_fu_1300_p4 = {{bitcast_ln22_8_fu_1296_p1[30:23]}};

assign tmp_2_fu_742_p4 = {{bitcast_ln22_fu_738_p1[30:23]}};

assign tmp_4_fu_882_p4 = {{bitcast_ln22_2_fu_878_p1[30:23]}};

assign tmp_6_fu_812_p4 = {{bitcast_ln22_1_fu_808_p1[30:23]}};

assign tmp_fu_659_p4 = {{bitcast_ln23_9_fu_656_p1[30:23]}};

assign trunc_ln22_1_fu_822_p1 = bitcast_ln22_1_fu_808_p1[22:0];

assign trunc_ln22_2_fu_892_p1 = bitcast_ln22_2_fu_878_p1[22:0];

assign trunc_ln22_3_fu_962_p1 = bitcast_ln22_3_fu_948_p1[22:0];

assign trunc_ln22_4_fu_1031_p1 = bitcast_ln22_4_fu_1018_p1[22:0];

assign trunc_ln22_5_fu_1100_p1 = bitcast_ln22_5_fu_1086_p1[22:0];

assign trunc_ln22_6_fu_1170_p1 = bitcast_ln22_6_fu_1156_p1[22:0];

assign trunc_ln22_7_fu_1240_p1 = bitcast_ln22_7_fu_1226_p1[22:0];

assign trunc_ln22_8_fu_1310_p1 = bitcast_ln22_8_fu_1296_p1[22:0];

assign trunc_ln22_fu_752_p1 = bitcast_ln22_fu_738_p1[22:0];

assign trunc_ln23_fu_669_p1 = bitcast_ln23_9_fu_656_p1[22:0];

assign trunc_ln313_1_fu_516_p1 = input_1_q1[30:0];

assign trunc_ln313_2_fu_520_p1 = input_2_q1[30:0];

assign trunc_ln313_3_fu_524_p1 = input_0_q0[30:0];

assign trunc_ln313_4_fu_528_p1 = input_1_q0[30:0];

assign trunc_ln313_5_fu_532_p1 = input_2_q0[30:0];

assign trunc_ln313_6_fu_548_p1 = input_0_q0[30:0];

assign trunc_ln313_7_fu_552_p1 = input_1_q0[30:0];

assign trunc_ln313_8_fu_556_p1 = input_2_q0[30:0];

assign trunc_ln313_fu_512_p1 = input_0_q1[30:0];

endmodule //weight_quant
