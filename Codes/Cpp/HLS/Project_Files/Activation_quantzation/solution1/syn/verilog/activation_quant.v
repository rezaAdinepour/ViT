// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="activation_quant_activation_quant,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.043000,HLS_SYN_LAT=23,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3535,HLS_SYN_LUT=5632,HLS_VERSION=2023_2}" *)

module activation_quant (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_0_address1,
        input_0_ce1,
        input_0_q1,
        input_1_address0,
        input_1_ce0,
        input_1_q0,
        input_1_address1,
        input_1_ce1,
        input_1_q1,
        input_2_address0,
        input_2_ce0,
        input_2_q0,
        input_2_address1,
        input_2_ce1,
        input_2_q1,
        output_0_address0,
        output_0_ce0,
        output_0_we0,
        output_0_d0,
        output_0_address1,
        output_0_ce1,
        output_0_we1,
        output_0_d1,
        output_1_address0,
        output_1_ce0,
        output_1_we0,
        output_1_d0,
        output_1_address1,
        output_1_ce1,
        output_1_we1,
        output_1_d1,
        output_2_address0,
        output_2_ce0,
        output_2_we0,
        output_2_d0,
        output_2_address1,
        output_2_ce1,
        output_2_we1,
        output_2_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [1:0] input_0_address1;
output   input_0_ce1;
input  [31:0] input_0_q1;
output  [1:0] input_1_address0;
output   input_1_ce0;
input  [31:0] input_1_q0;
output  [1:0] input_1_address1;
output   input_1_ce1;
input  [31:0] input_1_q1;
output  [1:0] input_2_address0;
output   input_2_ce0;
input  [31:0] input_2_q0;
output  [1:0] input_2_address1;
output   input_2_ce1;
input  [31:0] input_2_q1;
output  [1:0] output_0_address0;
output   output_0_ce0;
output   output_0_we0;
output  [31:0] output_0_d0;
output  [1:0] output_0_address1;
output   output_0_ce1;
output   output_0_we1;
output  [31:0] output_0_d1;
output  [1:0] output_1_address0;
output   output_1_ce0;
output   output_1_we0;
output  [31:0] output_1_d0;
output  [1:0] output_1_address1;
output   output_1_ce1;
output   output_1_we1;
output  [31:0] output_1_d1;
output  [1:0] output_2_address0;
output   output_2_ce0;
output   output_2_we0;
output  [31:0] output_2_d0;
output  [1:0] output_2_address1;
output   output_2_ce1;
output   output_2_we1;
output  [31:0] output_2_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] input_0_address0;
reg input_0_ce0;
reg input_0_ce1;
reg[1:0] input_1_address0;
reg input_1_ce0;
reg input_1_ce1;
reg[1:0] input_2_address0;
reg input_2_ce0;
reg input_2_ce1;
reg[1:0] output_0_address0;
reg output_0_ce0;
reg output_0_we0;
reg[31:0] output_0_d0;
reg output_0_ce1;
reg output_0_we1;
reg[1:0] output_1_address0;
reg output_1_ce0;
reg output_1_we0;
reg[31:0] output_1_d0;
reg output_1_ce1;
reg output_1_we1;
reg[1:0] output_2_address0;
reg output_2_ce0;
reg output_2_we0;
reg[31:0] output_2_d0;
reg output_2_ce1;
reg output_2_we1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] data_reg_1952;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] data_reg_1952_pp0_iter1_reg;
reg   [31:0] data_reg_1952_pp0_iter2_reg;
reg   [31:0] data_reg_1952_pp0_iter3_reg;
reg   [31:0] data_reg_1952_pp0_iter4_reg;
reg   [31:0] data_reg_1952_pp0_iter5_reg;
wire   [31:0] abs_val_fu_504_p1;
reg   [31:0] abs_val_reg_1957;
wire   [0:0] icmp_ln16_fu_519_p2;
reg   [0:0] icmp_ln16_reg_1963;
wire   [0:0] icmp_ln16_1_fu_525_p2;
reg   [0:0] icmp_ln16_1_reg_1968;
reg   [31:0] data_2_reg_1973;
reg   [31:0] data_2_reg_1973_pp0_iter1_reg;
reg   [31:0] data_2_reg_1973_pp0_iter2_reg;
reg   [31:0] data_2_reg_1973_pp0_iter3_reg;
reg   [31:0] data_2_reg_1973_pp0_iter4_reg;
reg   [31:0] data_2_reg_1973_pp0_iter5_reg;
wire   [30:0] trunc_ln313_1_fu_531_p1;
reg   [30:0] trunc_ln313_1_reg_1978;
wire   [0:0] icmp_ln16_2_fu_549_p2;
reg   [0:0] icmp_ln16_2_reg_1983;
wire   [0:0] icmp_ln16_3_fu_555_p2;
reg   [0:0] icmp_ln16_3_reg_1988;
reg   [31:0] data_3_reg_1993;
reg   [31:0] data_3_reg_1993_pp0_iter1_reg;
reg   [31:0] data_3_reg_1993_pp0_iter2_reg;
reg   [31:0] data_3_reg_1993_pp0_iter3_reg;
reg   [31:0] data_3_reg_1993_pp0_iter4_reg;
reg   [31:0] data_3_reg_1993_pp0_iter5_reg;
wire   [30:0] trunc_ln313_2_fu_561_p1;
reg   [30:0] trunc_ln313_2_reg_1998;
wire   [0:0] icmp_ln16_6_fu_579_p2;
reg   [0:0] icmp_ln16_6_reg_2003;
reg   [0:0] icmp_ln16_6_reg_2003_pp0_iter1_reg;
wire   [0:0] icmp_ln16_7_fu_585_p2;
reg   [0:0] icmp_ln16_7_reg_2008;
reg   [0:0] icmp_ln16_7_reg_2008_pp0_iter1_reg;
reg   [31:0] data_7_reg_2013;
reg   [31:0] data_7_reg_2013_pp0_iter1_reg;
reg   [31:0] data_7_reg_2013_pp0_iter2_reg;
reg   [31:0] data_7_reg_2013_pp0_iter3_reg;
reg   [31:0] data_7_reg_2013_pp0_iter4_reg;
reg   [31:0] data_7_reg_2013_pp0_iter5_reg;
wire   [31:0] abs_val_3_fu_607_p1;
reg   [31:0] abs_val_3_reg_2018;
wire   [0:0] grp_fu_450_p2;
reg   [0:0] icmp_ln16_10_reg_2024;
wire   [0:0] icmp_ln16_11_fu_612_p2;
reg   [0:0] icmp_ln16_11_reg_2029;
reg   [31:0] data_8_reg_2034;
reg   [31:0] data_8_reg_2034_pp0_iter1_reg;
reg   [31:0] data_8_reg_2034_pp0_iter2_reg;
reg   [31:0] data_8_reg_2034_pp0_iter3_reg;
reg   [31:0] data_8_reg_2034_pp0_iter4_reg;
reg   [31:0] data_8_reg_2034_pp0_iter5_reg;
wire   [30:0] trunc_ln313_4_fu_618_p1;
reg   [30:0] trunc_ln313_4_reg_2039;
wire   [0:0] grp_fu_466_p2;
reg   [0:0] icmp_ln16_12_reg_2044;
wire   [0:0] icmp_ln16_13_fu_626_p2;
reg   [0:0] icmp_ln16_13_reg_2049;
reg   [31:0] data_9_reg_2054;
reg   [31:0] data_9_reg_2054_pp0_iter1_reg;
reg   [31:0] data_9_reg_2054_pp0_iter2_reg;
reg   [31:0] data_9_reg_2054_pp0_iter3_reg;
reg   [31:0] data_9_reg_2054_pp0_iter4_reg;
reg   [31:0] data_9_reg_2054_pp0_iter5_reg;
reg   [31:0] data_9_reg_2054_pp0_iter6_reg;
wire   [30:0] trunc_ln313_5_fu_632_p1;
reg   [30:0] trunc_ln313_5_reg_2059;
wire   [0:0] grp_fu_482_p2;
reg   [0:0] icmp_ln16_16_reg_2064;
reg   [0:0] icmp_ln16_16_reg_2064_pp0_iter1_reg;
wire   [0:0] icmp_ln16_17_fu_640_p2;
reg   [0:0] icmp_ln16_17_reg_2069;
reg   [0:0] icmp_ln16_17_reg_2069_pp0_iter1_reg;
wire   [31:0] max_val_2_fu_656_p3;
reg   [31:0] max_val_2_reg_2089;
wire   [31:0] abs_val_1_fu_671_p1;
reg   [31:0] abs_val_1_reg_2096;
wire   [31:0] max_val_18_fu_686_p3;
reg   [31:0] max_val_18_reg_2102;
wire   [31:0] abs_val_4_fu_701_p1;
reg   [31:0] abs_val_4_reg_2109;
reg   [31:0] data_13_reg_2115;
reg   [31:0] data_13_reg_2115_pp0_iter2_reg;
reg   [31:0] data_13_reg_2115_pp0_iter3_reg;
reg   [31:0] data_13_reg_2115_pp0_iter4_reg;
reg   [31:0] data_13_reg_2115_pp0_iter5_reg;
reg   [31:0] data_13_reg_2115_pp0_iter6_reg;
wire   [31:0] abs_val_6_fu_722_p1;
reg   [31:0] abs_val_6_reg_2120;
reg   [0:0] icmp_ln16_20_reg_2126;
wire   [0:0] icmp_ln16_21_fu_727_p2;
reg   [0:0] icmp_ln16_21_reg_2131;
reg   [31:0] data_14_reg_2136;
reg   [31:0] data_14_reg_2136_pp0_iter2_reg;
reg   [31:0] data_14_reg_2136_pp0_iter3_reg;
reg   [31:0] data_14_reg_2136_pp0_iter4_reg;
reg   [31:0] data_14_reg_2136_pp0_iter5_reg;
reg   [31:0] data_14_reg_2136_pp0_iter6_reg;
wire   [30:0] trunc_ln313_7_fu_733_p1;
reg   [30:0] trunc_ln313_7_reg_2141;
reg   [0:0] icmp_ln16_22_reg_2146;
wire   [0:0] icmp_ln16_23_fu_741_p2;
reg   [0:0] icmp_ln16_23_reg_2151;
reg   [31:0] data_15_reg_2156;
reg   [31:0] data_15_reg_2156_pp0_iter2_reg;
reg   [31:0] data_15_reg_2156_pp0_iter3_reg;
reg   [31:0] data_15_reg_2156_pp0_iter4_reg;
reg   [31:0] data_15_reg_2156_pp0_iter5_reg;
reg   [31:0] data_15_reg_2156_pp0_iter6_reg;
wire   [30:0] trunc_ln313_8_fu_747_p1;
reg   [30:0] trunc_ln313_8_reg_2161;
reg   [0:0] icmp_ln16_26_reg_2166;
reg   [0:0] icmp_ln16_26_reg_2166_pp0_iter2_reg;
wire   [0:0] icmp_ln16_27_fu_755_p2;
reg   [0:0] icmp_ln16_27_reg_2171;
reg   [0:0] icmp_ln16_27_reg_2171_pp0_iter2_reg;
wire   [31:0] max_val_4_fu_812_p3;
reg   [31:0] max_val_4_reg_2176;
wire   [31:0] abs_val_2_fu_826_p1;
reg   [31:0] abs_val_2_reg_2183;
wire   [31:0] max_val_19_fu_882_p3;
reg   [31:0] max_val_19_reg_2189;
wire   [31:0] abs_val_5_fu_896_p1;
reg   [31:0] abs_val_5_reg_2196;
wire   [31:0] max_val_21_fu_911_p3;
reg   [31:0] max_val_21_reg_2202;
wire   [31:0] abs_val_7_fu_926_p1;
reg   [31:0] abs_val_7_reg_2209;
wire   [31:0] max_val_6_fu_982_p3;
reg   [31:0] max_val_6_reg_2215;
wire   [31:0] max_val_20_fu_1040_p3;
reg   [31:0] max_val_20_reg_2222;
wire   [31:0] max_val_22_fu_1098_p3;
reg   [31:0] max_val_22_reg_2229;
wire   [31:0] abs_val_8_fu_1112_p1;
reg   [31:0] abs_val_8_reg_2236;
wire   [31:0] select_ln25_fu_1158_p3;
reg   [31:0] select_ln25_reg_2242;
wire   [31:0] select_ln25_1_fu_1206_p3;
reg   [31:0] select_ln25_1_reg_2247;
wire   [31:0] max_val_fu_1264_p3;
reg   [31:0] max_val_reg_2252;
wire   [31:0] select_ln25_2_fu_1312_p3;
reg   [31:0] select_ln25_2_reg_2259;
wire   [31:0] grp_fu_384_p2;
reg   [31:0] scale_reg_2264;
reg   [31:0] scale_reg_2264_pp0_iter7_reg;
wire   [31:0] grp_fu_389_p2;
reg   [31:0] scale_1_reg_2274;
reg   [31:0] scale_1_reg_2274_pp0_iter7_reg;
reg   [31:0] scale_1_reg_2274_pp0_iter8_reg;
wire   [31:0] dc_fu_1319_p1;
wire   [31:0] dc_1_fu_1323_p1;
wire   [31:0] dc_2_fu_1327_p1;
wire   [31:0] dc_3_fu_1331_p1;
reg   [31:0] scale_2_reg_2309;
reg   [31:0] scale_2_reg_2309_pp0_iter7_reg;
wire   [31:0] dc_5_fu_1339_p1;
wire   [31:0] dc_6_fu_1343_p1;
wire   [31:0] dc_7_fu_1347_p1;
wire   [31:0] dc_8_fu_1351_p1;
wire   [31:0] res_18_fu_1405_p3;
reg   [31:0] res_18_reg_2339;
wire   [31:0] res_19_fu_1463_p3;
reg   [31:0] res_19_reg_2344;
wire   [31:0] res_20_fu_1521_p3;
reg   [31:0] res_20_reg_2349;
wire   [31:0] clamped_val_fu_1579_p3;
reg   [31:0] clamped_val_reg_2354;
wire   [31:0] clamped_val_9_fu_1637_p3;
reg   [31:0] clamped_val_9_reg_2359;
wire   [31:0] clamped_val_10_fu_1695_p3;
reg   [31:0] clamped_val_10_reg_2364;
wire   [31:0] res_21_fu_1753_p3;
reg   [31:0] res_21_reg_2369;
wire   [31:0] res_22_fu_1811_p3;
reg   [31:0] res_22_reg_2374;
wire   [31:0] res_23_fu_1869_p3;
reg   [31:0] res_23_reg_2379;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_generic_round_float_s_fu_284_ap_start;
wire    grp_generic_round_float_s_fu_284_ap_done;
wire    grp_generic_round_float_s_fu_284_ap_idle;
wire    grp_generic_round_float_s_fu_284_ap_ready;
wire   [31:0] grp_generic_round_float_s_fu_284_ap_return;
wire    grp_generic_round_float_s_fu_293_ap_start;
wire    grp_generic_round_float_s_fu_293_ap_done;
wire    grp_generic_round_float_s_fu_293_ap_idle;
wire    grp_generic_round_float_s_fu_293_ap_ready;
wire   [31:0] grp_generic_round_float_s_fu_293_ap_return;
wire    grp_generic_round_float_s_fu_302_ap_start;
wire    grp_generic_round_float_s_fu_302_ap_done;
wire    grp_generic_round_float_s_fu_302_ap_idle;
wire    grp_generic_round_float_s_fu_302_ap_ready;
wire   [31:0] grp_generic_round_float_s_fu_302_ap_return;
wire    grp_generic_round_float_s_fu_311_ap_start;
wire    grp_generic_round_float_s_fu_311_ap_done;
wire    grp_generic_round_float_s_fu_311_ap_idle;
wire    grp_generic_round_float_s_fu_311_ap_ready;
wire   [31:0] grp_generic_round_float_s_fu_311_ap_return;
wire    grp_generic_round_float_s_fu_320_ap_start;
wire    grp_generic_round_float_s_fu_320_ap_done;
wire    grp_generic_round_float_s_fu_320_ap_idle;
wire    grp_generic_round_float_s_fu_320_ap_ready;
wire   [31:0] grp_generic_round_float_s_fu_320_ap_return;
wire    grp_generic_fmax_float_s_fu_329_ap_ready;
wire   [31:0] grp_generic_fmax_float_s_fu_329_ap_return;
wire    grp_generic_fmax_float_s_fu_335_ap_ready;
wire   [31:0] grp_generic_fmax_float_s_fu_335_ap_return;
wire    grp_generic_fmax_float_s_fu_341_ap_ready;
wire   [31:0] grp_generic_fmax_float_s_fu_341_ap_return;
wire    grp_generic_fmax_float_s_fu_347_ap_ready;
wire   [31:0] grp_generic_fmax_float_s_fu_347_ap_return;
wire    x_assign_s_generic_fmax_float_s_fu_353_ap_ready;
wire   [31:0] x_assign_s_generic_fmax_float_s_fu_353_ap_return;
reg    grp_generic_round_float_s_fu_284_ap_start_reg;
wire   [31:0] grp_fu_359_p2;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg    grp_generic_round_float_s_fu_293_ap_start_reg;
wire   [31:0] grp_fu_364_p2;
reg    grp_generic_round_float_s_fu_302_ap_start_reg;
wire   [31:0] grp_fu_369_p2;
reg    grp_generic_round_float_s_fu_311_ap_start_reg;
wire   [31:0] grp_fu_374_p2;
reg    grp_generic_round_float_s_fu_320_ap_start_reg;
wire   [31:0] grp_fu_379_p2;
wire   [31:0] bitcast_ln30_1_fu_1882_p1;
wire   [31:0] bitcast_ln30_2_fu_1897_p1;
wire   [31:0] bitcast_ln30_3_fu_1887_p1;
wire   [31:0] bitcast_ln30_5_fu_1907_p1;
wire   [31:0] bitcast_ln30_6_fu_1892_p1;
wire   [31:0] bitcast_ln30_8_fu_1917_p1;
reg   [31:0] grp_fu_359_p0;
reg   [31:0] grp_fu_359_p1;
reg   [31:0] grp_fu_364_p0;
reg   [31:0] grp_fu_364_p1;
reg   [31:0] grp_fu_369_p0;
reg   [31:0] grp_fu_369_p1;
reg   [31:0] grp_fu_374_p0;
reg   [31:0] grp_fu_374_p1;
wire   [31:0] grp_fu_379_p0;
reg   [31:0] grp_fu_384_p1;
reg   [31:0] grp_fu_389_p0;
reg   [31:0] grp_fu_389_p1;
reg   [31:0] grp_fu_394_p0;
reg   [31:0] grp_fu_394_p1;
reg   [31:0] grp_fu_398_p0;
reg   [31:0] grp_fu_398_p1;
reg   [31:0] grp_fu_402_p0;
reg   [31:0] grp_fu_402_p1;
reg   [31:0] grp_fu_406_p0;
reg   [31:0] grp_fu_406_p1;
reg   [31:0] grp_fu_410_p0;
reg   [31:0] grp_fu_410_p1;
reg   [31:0] grp_fu_415_p0;
reg   [31:0] grp_fu_415_p1;
reg   [31:0] grp_fu_420_p0;
reg   [31:0] grp_fu_420_p1;
reg   [31:0] grp_fu_425_p0;
reg   [31:0] grp_fu_425_p1;
reg   [31:0] grp_fu_429_p0;
reg   [31:0] grp_fu_429_p1;
reg   [31:0] grp_fu_435_p0;
reg   [31:0] grp_fu_435_p1;
wire   [7:0] grp_fu_440_p4;
wire   [7:0] grp_fu_456_p4;
wire   [7:0] grp_fu_472_p4;
wire   [30:0] trunc_ln313_fu_488_p1;
wire   [31:0] t_17_fu_496_p3;
wire   [7:0] tmp_1_fu_509_p4;
wire   [22:0] trunc_ln16_fu_492_p1;
wire   [7:0] tmp_4_fu_539_p4;
wire   [22:0] trunc_ln16_1_fu_535_p1;
wire   [7:0] tmp_8_fu_569_p4;
wire   [22:0] trunc_ln16_3_fu_565_p1;
wire   [30:0] trunc_ln313_3_fu_591_p1;
wire   [31:0] t_fu_599_p3;
wire   [22:0] trunc_ln16_5_fu_595_p1;
wire   [22:0] trunc_ln16_6_fu_622_p1;
wire   [22:0] trunc_ln16_8_fu_636_p1;
wire   [0:0] or_ln16_fu_646_p2;
wire   [0:0] grp_fu_410_p2;
wire   [0:0] and_ln16_fu_650_p2;
wire   [31:0] t_18_fu_664_p3;
wire   [0:0] or_ln16_5_fu_676_p2;
wire   [0:0] grp_fu_415_p2;
wire   [0:0] and_ln16_5_fu_680_p2;
wire   [31:0] t_20_fu_694_p3;
wire   [30:0] trunc_ln313_6_fu_706_p1;
wire   [31:0] t_22_fu_714_p3;
wire   [22:0] trunc_ln16_10_fu_710_p1;
wire   [22:0] trunc_ln16_11_fu_737_p1;
wire   [22:0] trunc_ln16_13_fu_751_p1;
wire   [31:0] bitcast_ln16_fu_761_p1;
wire   [7:0] tmp_5_fu_764_p4;
wire   [22:0] trunc_ln16_2_fu_774_p1;
wire   [0:0] icmp_ln16_5_fu_788_p2;
wire   [0:0] icmp_ln16_4_fu_782_p2;
wire   [0:0] or_ln16_1_fu_778_p2;
wire   [0:0] or_ln16_2_fu_794_p2;
wire   [0:0] and_ln16_1_fu_800_p2;
wire   [0:0] and_ln16_2_fu_806_p2;
wire   [31:0] t_19_fu_819_p3;
wire   [31:0] bitcast_ln16_2_fu_831_p1;
wire   [7:0] tmp_13_fu_834_p4;
wire   [22:0] trunc_ln16_7_fu_844_p1;
wire   [0:0] icmp_ln16_15_fu_858_p2;
wire   [0:0] icmp_ln16_14_fu_852_p2;
wire   [0:0] or_ln16_6_fu_848_p2;
wire   [0:0] or_ln16_7_fu_864_p2;
wire   [0:0] and_ln16_6_fu_870_p2;
wire   [0:0] and_ln16_7_fu_876_p2;
wire   [31:0] t_21_fu_889_p3;
wire   [0:0] or_ln16_10_fu_901_p2;
wire   [0:0] grp_fu_420_p2;
wire   [0:0] and_ln16_10_fu_905_p2;
wire   [31:0] t_23_fu_919_p3;
wire   [31:0] bitcast_ln16_1_fu_931_p1;
wire   [7:0] tmp_9_fu_934_p4;
wire   [22:0] trunc_ln16_4_fu_944_p1;
wire   [0:0] icmp_ln16_9_fu_958_p2;
wire   [0:0] icmp_ln16_8_fu_952_p2;
wire   [0:0] or_ln16_3_fu_948_p2;
wire   [0:0] or_ln16_4_fu_964_p2;
wire   [0:0] and_ln16_3_fu_970_p2;
wire   [0:0] and_ln16_4_fu_976_p2;
wire   [31:0] bitcast_ln16_3_fu_989_p1;
wire   [7:0] tmp_16_fu_992_p4;
wire   [22:0] trunc_ln16_9_fu_1002_p1;
wire   [0:0] icmp_ln16_19_fu_1016_p2;
wire   [0:0] icmp_ln16_18_fu_1010_p2;
wire   [0:0] or_ln16_8_fu_1006_p2;
wire   [0:0] or_ln16_9_fu_1022_p2;
wire   [0:0] and_ln16_8_fu_1028_p2;
wire   [0:0] grp_fu_425_p2;
wire   [0:0] and_ln16_9_fu_1034_p2;
wire   [31:0] bitcast_ln16_4_fu_1047_p1;
wire   [7:0] tmp_23_fu_1050_p4;
wire   [22:0] trunc_ln16_12_fu_1060_p1;
wire   [0:0] icmp_ln16_25_fu_1074_p2;
wire   [0:0] icmp_ln16_24_fu_1068_p2;
wire   [0:0] or_ln16_11_fu_1064_p2;
wire   [0:0] or_ln16_12_fu_1080_p2;
wire   [0:0] and_ln16_11_fu_1086_p2;
wire   [0:0] grp_fu_429_p2;
wire   [0:0] and_ln16_12_fu_1092_p2;
wire   [31:0] t_24_fu_1105_p3;
wire   [31:0] bitcast_ln25_fu_1117_p1;
wire   [7:0] tmp_3_fu_1120_p4;
wire   [22:0] trunc_ln25_fu_1130_p1;
wire   [0:0] icmp_ln25_1_fu_1140_p2;
wire   [0:0] icmp_ln25_fu_1134_p2;
wire   [0:0] or_ln25_fu_1146_p2;
wire   [0:0] and_ln25_fu_1152_p2;
wire   [31:0] bitcast_ln25_1_fu_1165_p1;
wire   [7:0] tmp_18_fu_1168_p4;
wire   [22:0] trunc_ln25_1_fu_1178_p1;
wire   [0:0] icmp_ln25_3_fu_1188_p2;
wire   [0:0] icmp_ln25_2_fu_1182_p2;
wire   [0:0] or_ln25_1_fu_1194_p2;
wire   [0:0] and_ln25_1_fu_1200_p2;
wire   [31:0] bitcast_ln16_5_fu_1213_p1;
wire   [7:0] tmp_26_fu_1216_p4;
wire   [22:0] trunc_ln16_14_fu_1226_p1;
wire   [0:0] icmp_ln16_29_fu_1240_p2;
wire   [0:0] icmp_ln16_28_fu_1234_p2;
wire   [0:0] or_ln16_13_fu_1230_p2;
wire   [0:0] or_ln16_14_fu_1246_p2;
wire   [0:0] and_ln16_13_fu_1252_p2;
wire   [0:0] grp_fu_435_p2;
wire   [0:0] and_ln16_14_fu_1258_p2;
wire   [31:0] bitcast_ln25_2_fu_1271_p1;
wire   [7:0] tmp_28_fu_1274_p4;
wire   [22:0] trunc_ln25_2_fu_1284_p1;
wire   [0:0] icmp_ln25_5_fu_1294_p2;
wire   [0:0] icmp_ln25_4_fu_1288_p2;
wire   [0:0] or_ln25_2_fu_1300_p2;
wire   [0:0] and_ln25_2_fu_1306_p2;
wire   [31:0] data_19_fu_1355_p1;
wire   [7:0] x_fp_exp_fu_1359_p4;
wire   [22:0] x_fp_sig_fu_1369_p1;
wire   [0:0] icmp_ln18_fu_1373_p2;
wire   [0:0] icmp_ln18_2_fu_1379_p2;
wire   [0:0] ymaggreater_fu_1391_p2;
wire   [0:0] and_ln18_fu_1385_p2;
wire   [31:0] res_fu_1397_p3;
wire   [31:0] data_20_fu_1413_p1;
wire   [7:0] x_fp_exp_1_fu_1417_p4;
wire   [22:0] x_fp_sig_1_fu_1427_p1;
wire   [0:0] icmp_ln18_3_fu_1431_p2;
wire   [0:0] icmp_ln18_4_fu_1437_p2;
wire   [0:0] ymaggreater_2_fu_1449_p2;
wire   [0:0] and_ln18_1_fu_1443_p2;
wire   [31:0] res_2_fu_1455_p3;
wire   [31:0] data_21_fu_1471_p1;
wire   [7:0] x_fp_exp_2_fu_1475_p4;
wire   [22:0] x_fp_sig_2_fu_1485_p1;
wire   [0:0] icmp_ln18_5_fu_1489_p2;
wire   [0:0] icmp_ln18_6_fu_1495_p2;
wire   [0:0] ymaggreater_3_fu_1507_p2;
wire   [0:0] and_ln18_2_fu_1501_p2;
wire   [31:0] res_4_fu_1513_p3;
wire   [31:0] data_22_fu_1529_p1;
wire   [7:0] x_fp_exp_3_fu_1533_p4;
wire   [22:0] x_fp_sig_3_fu_1543_p1;
wire   [0:0] icmp_ln18_7_fu_1547_p2;
wire   [0:0] icmp_ln18_8_fu_1553_p2;
wire   [0:0] ymaggreater_4_fu_1565_p2;
wire   [0:0] and_ln18_3_fu_1559_p2;
wire   [31:0] res_6_fu_1571_p3;
wire   [31:0] data_23_fu_1587_p1;
wire   [7:0] x_fp_exp_4_fu_1591_p4;
wire   [22:0] x_fp_sig_4_fu_1601_p1;
wire   [0:0] icmp_ln18_9_fu_1605_p2;
wire   [0:0] icmp_ln18_10_fu_1611_p2;
wire   [0:0] ymaggreater_5_fu_1623_p2;
wire   [0:0] and_ln18_4_fu_1617_p2;
wire   [31:0] res_8_fu_1629_p3;
wire   [31:0] data_24_fu_1645_p1;
wire   [7:0] x_fp_exp_5_fu_1649_p4;
wire   [22:0] x_fp_sig_5_fu_1659_p1;
wire   [0:0] icmp_ln18_11_fu_1663_p2;
wire   [0:0] icmp_ln18_12_fu_1669_p2;
wire   [0:0] ymaggreater_6_fu_1681_p2;
wire   [0:0] and_ln18_5_fu_1675_p2;
wire   [31:0] res_10_fu_1687_p3;
wire   [31:0] data_25_fu_1703_p1;
wire   [7:0] x_fp_exp_6_fu_1707_p4;
wire   [22:0] x_fp_sig_6_fu_1717_p1;
wire   [0:0] icmp_ln18_13_fu_1721_p2;
wire   [0:0] icmp_ln18_14_fu_1727_p2;
wire   [0:0] ymaggreater_7_fu_1739_p2;
wire   [0:0] and_ln18_6_fu_1733_p2;
wire   [31:0] res_12_fu_1745_p3;
wire   [31:0] data_26_fu_1761_p1;
wire   [7:0] x_fp_exp_7_fu_1765_p4;
wire   [22:0] x_fp_sig_7_fu_1775_p1;
wire   [0:0] icmp_ln18_15_fu_1779_p2;
wire   [0:0] icmp_ln18_16_fu_1785_p2;
wire   [0:0] ymaggreater_8_fu_1797_p2;
wire   [0:0] and_ln18_7_fu_1791_p2;
wire   [31:0] res_14_fu_1803_p3;
wire   [31:0] data_27_fu_1819_p1;
wire   [7:0] x_fp_exp_8_fu_1823_p4;
wire   [22:0] x_fp_sig_8_fu_1833_p1;
wire   [0:0] icmp_ln18_17_fu_1837_p2;
wire   [0:0] icmp_ln18_18_fu_1843_p2;
wire   [0:0] ymaggreater_9_fu_1855_p2;
wire   [0:0] and_ln18_8_fu_1849_p2;
wire   [31:0] res_16_fu_1861_p3;
wire   [31:0] grp_fu_394_p2;
wire   [31:0] grp_fu_406_p2;
wire   [31:0] grp_fu_398_p2;
wire   [31:0] grp_fu_402_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg   [4:0] grp_fu_425_opcode;
reg   [4:0] grp_fu_429_opcode;
reg   [4:0] grp_fu_435_opcode;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to11;
reg    ap_idle_pp0_0to10;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_generic_round_float_s_fu_284_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_293_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_302_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_311_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_320_ap_start_reg = 1'b0;
end

activation_quant_generic_round_float_s grp_generic_round_float_s_fu_284(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_284_ap_start),
    .ap_done(grp_generic_round_float_s_fu_284_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_284_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_284_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_359_p2),
    .ap_return(grp_generic_round_float_s_fu_284_ap_return)
);

activation_quant_generic_round_float_s grp_generic_round_float_s_fu_293(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_293_ap_start),
    .ap_done(grp_generic_round_float_s_fu_293_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_293_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_293_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_364_p2),
    .ap_return(grp_generic_round_float_s_fu_293_ap_return)
);

activation_quant_generic_round_float_s grp_generic_round_float_s_fu_302(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_302_ap_start),
    .ap_done(grp_generic_round_float_s_fu_302_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_302_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_302_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_369_p2),
    .ap_return(grp_generic_round_float_s_fu_302_ap_return)
);

activation_quant_generic_round_float_s grp_generic_round_float_s_fu_311(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_311_ap_start),
    .ap_done(grp_generic_round_float_s_fu_311_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_311_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_311_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_374_p2),
    .ap_return(grp_generic_round_float_s_fu_311_ap_return)
);

activation_quant_generic_round_float_s grp_generic_round_float_s_fu_320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_320_ap_start),
    .ap_done(grp_generic_round_float_s_fu_320_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_320_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_320_ap_ready),
    .ap_ce(1'b1),
    .x(grp_fu_379_p2),
    .ap_return(grp_generic_round_float_s_fu_320_ap_return)
);

activation_quant_generic_fmax_float_s grp_generic_fmax_float_s_fu_329(
    .ap_ready(grp_generic_fmax_float_s_fu_329_ap_ready),
    .x(grp_generic_round_float_s_fu_284_ap_return),
    .ap_return(grp_generic_fmax_float_s_fu_329_ap_return)
);

activation_quant_generic_fmax_float_s grp_generic_fmax_float_s_fu_335(
    .ap_ready(grp_generic_fmax_float_s_fu_335_ap_ready),
    .x(grp_generic_round_float_s_fu_293_ap_return),
    .ap_return(grp_generic_fmax_float_s_fu_335_ap_return)
);

activation_quant_generic_fmax_float_s grp_generic_fmax_float_s_fu_341(
    .ap_ready(grp_generic_fmax_float_s_fu_341_ap_ready),
    .x(grp_generic_round_float_s_fu_302_ap_return),
    .ap_return(grp_generic_fmax_float_s_fu_341_ap_return)
);

activation_quant_generic_fmax_float_s grp_generic_fmax_float_s_fu_347(
    .ap_ready(grp_generic_fmax_float_s_fu_347_ap_ready),
    .x(grp_generic_round_float_s_fu_311_ap_return),
    .ap_return(grp_generic_fmax_float_s_fu_347_ap_return)
);

activation_quant_generic_fmax_float_s x_assign_s_generic_fmax_float_s_fu_353(
    .ap_ready(x_assign_s_generic_fmax_float_s_fu_353_ap_ready),
    .x(grp_generic_round_float_s_fu_320_ap_return),
    .ap_return(x_assign_s_generic_fmax_float_s_fu_353_ap_return)
);

activation_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_359_p0),
    .din1(grp_fu_359_p1),
    .ce(1'b1),
    .dout(grp_fu_359_p2)
);

activation_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_364_p0),
    .din1(grp_fu_364_p1),
    .ce(1'b1),
    .dout(grp_fu_364_p2)
);

activation_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_369_p0),
    .din1(grp_fu_369_p1),
    .ce(1'b1),
    .dout(grp_fu_369_p2)
);

activation_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_374_p0),
    .din1(grp_fu_374_p1),
    .ce(1'b1),
    .dout(grp_fu_374_p2)
);

activation_quant_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_379_p0),
    .din1(scale_1_reg_2274),
    .ce(1'b1),
    .dout(grp_fu_379_p2)
);

activation_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1123942400),
    .din1(grp_fu_384_p1),
    .ce(1'b1),
    .dout(grp_fu_384_p2)
);

activation_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_389_p0),
    .din1(grp_fu_389_p1),
    .ce(1'b1),
    .dout(grp_fu_389_p2)
);

activation_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_394_p0),
    .din1(grp_fu_394_p1),
    .ce(1'b1),
    .dout(grp_fu_394_p2)
);

activation_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_398_p0),
    .din1(grp_fu_398_p1),
    .ce(1'b1),
    .dout(grp_fu_398_p2)
);

activation_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_402_p0),
    .din1(grp_fu_402_p1),
    .ce(1'b1),
    .dout(grp_fu_402_p2)
);

activation_quant_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_406_p0),
    .din1(grp_fu_406_p1),
    .ce(1'b1),
    .dout(grp_fu_406_p2)
);

activation_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_410_p0),
    .din1(grp_fu_410_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_410_p2)
);

activation_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_415_p0),
    .din1(grp_fu_415_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_415_p2)
);

activation_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_420_p0),
    .din1(grp_fu_420_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_420_p2)
);

activation_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_425_p0),
    .din1(grp_fu_425_p1),
    .ce(1'b1),
    .opcode(grp_fu_425_opcode),
    .dout(grp_fu_425_p2)
);

activation_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_429_p0),
    .din1(grp_fu_429_p1),
    .ce(1'b1),
    .opcode(grp_fu_429_opcode),
    .dout(grp_fu_429_p2)
);

activation_quant_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_435_p0),
    .din1(grp_fu_435_p1),
    .ce(1'b1),
    .opcode(grp_fu_435_opcode),
    .dout(grp_fu_435_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_284_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            grp_generic_round_float_s_fu_284_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_284_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_284_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_293_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            grp_generic_round_float_s_fu_293_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_293_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_293_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_302_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            grp_generic_round_float_s_fu_302_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_302_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_302_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_311_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            grp_generic_round_float_s_fu_311_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_311_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_311_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_320_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_generic_round_float_s_fu_320_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_320_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        abs_val_1_reg_2096[30 : 0] <= abs_val_1_fu_671_p1[30 : 0];
        abs_val_4_reg_2109[30 : 0] <= abs_val_4_fu_701_p1[30 : 0];
        abs_val_6_reg_2120[30 : 0] <= abs_val_6_fu_722_p1[30 : 0];
        abs_val_8_reg_2236[30 : 0] <= abs_val_8_fu_1112_p1[30 : 0];
        clamped_val_10_reg_2364 <= clamped_val_10_fu_1695_p3;
        data_13_reg_2115_pp0_iter2_reg <= data_13_reg_2115;
        data_13_reg_2115_pp0_iter3_reg <= data_13_reg_2115_pp0_iter2_reg;
        data_13_reg_2115_pp0_iter4_reg <= data_13_reg_2115_pp0_iter3_reg;
        data_13_reg_2115_pp0_iter5_reg <= data_13_reg_2115_pp0_iter4_reg;
        data_13_reg_2115_pp0_iter6_reg <= data_13_reg_2115_pp0_iter5_reg;
        data_14_reg_2136_pp0_iter2_reg <= data_14_reg_2136;
        data_14_reg_2136_pp0_iter3_reg <= data_14_reg_2136_pp0_iter2_reg;
        data_14_reg_2136_pp0_iter4_reg <= data_14_reg_2136_pp0_iter3_reg;
        data_14_reg_2136_pp0_iter5_reg <= data_14_reg_2136_pp0_iter4_reg;
        data_14_reg_2136_pp0_iter6_reg <= data_14_reg_2136_pp0_iter5_reg;
        data_15_reg_2156_pp0_iter2_reg <= data_15_reg_2156;
        data_15_reg_2156_pp0_iter3_reg <= data_15_reg_2156_pp0_iter2_reg;
        data_15_reg_2156_pp0_iter4_reg <= data_15_reg_2156_pp0_iter3_reg;
        data_15_reg_2156_pp0_iter5_reg <= data_15_reg_2156_pp0_iter4_reg;
        data_15_reg_2156_pp0_iter6_reg <= data_15_reg_2156_pp0_iter5_reg;
        icmp_ln16_21_reg_2131 <= icmp_ln16_21_fu_727_p2;
        icmp_ln16_23_reg_2151 <= icmp_ln16_23_fu_741_p2;
        icmp_ln16_26_reg_2166_pp0_iter2_reg <= icmp_ln16_26_reg_2166;
        icmp_ln16_27_reg_2171 <= icmp_ln16_27_fu_755_p2;
        icmp_ln16_27_reg_2171_pp0_iter2_reg <= icmp_ln16_27_reg_2171;
        max_val_18_reg_2102[30 : 0] <= max_val_18_fu_686_p3[30 : 0];
        max_val_20_reg_2222[30 : 0] <= max_val_20_fu_1040_p3[30 : 0];
        max_val_22_reg_2229[30 : 0] <= max_val_22_fu_1098_p3[30 : 0];
        max_val_2_reg_2089[30 : 0] <= max_val_2_fu_656_p3[30 : 0];
        max_val_6_reg_2215[30 : 0] <= max_val_6_fu_982_p3[30 : 0];
        res_21_reg_2369 <= res_21_fu_1753_p3;
        res_22_reg_2374 <= res_22_fu_1811_p3;
        res_23_reg_2379 <= res_23_fu_1869_p3;
        scale_1_reg_2274_pp0_iter7_reg <= scale_1_reg_2274;
        scale_1_reg_2274_pp0_iter8_reg <= scale_1_reg_2274_pp0_iter7_reg;
        scale_reg_2264_pp0_iter7_reg <= scale_reg_2264;
        select_ln25_2_reg_2259[30 : 0] <= select_ln25_2_fu_1312_p3[30 : 0];
        trunc_ln313_7_reg_2141 <= trunc_ln313_7_fu_733_p1;
        trunc_ln313_8_reg_2161 <= trunc_ln313_8_fu_747_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        abs_val_2_reg_2183[30 : 0] <= abs_val_2_fu_826_p1[30 : 0];
        abs_val_3_reg_2018[30 : 0] <= abs_val_3_fu_607_p1[30 : 0];
        abs_val_5_reg_2196[30 : 0] <= abs_val_5_fu_896_p1[30 : 0];
        abs_val_7_reg_2209[30 : 0] <= abs_val_7_fu_926_p1[30 : 0];
        abs_val_reg_1957[30 : 0] <= abs_val_fu_504_p1[30 : 0];
        clamped_val_9_reg_2359 <= clamped_val_9_fu_1637_p3;
        clamped_val_reg_2354 <= clamped_val_fu_1579_p3;
        data_2_reg_1973_pp0_iter1_reg <= data_2_reg_1973;
        data_2_reg_1973_pp0_iter2_reg <= data_2_reg_1973_pp0_iter1_reg;
        data_2_reg_1973_pp0_iter3_reg <= data_2_reg_1973_pp0_iter2_reg;
        data_2_reg_1973_pp0_iter4_reg <= data_2_reg_1973_pp0_iter3_reg;
        data_2_reg_1973_pp0_iter5_reg <= data_2_reg_1973_pp0_iter4_reg;
        data_3_reg_1993_pp0_iter1_reg <= data_3_reg_1993;
        data_3_reg_1993_pp0_iter2_reg <= data_3_reg_1993_pp0_iter1_reg;
        data_3_reg_1993_pp0_iter3_reg <= data_3_reg_1993_pp0_iter2_reg;
        data_3_reg_1993_pp0_iter4_reg <= data_3_reg_1993_pp0_iter3_reg;
        data_3_reg_1993_pp0_iter5_reg <= data_3_reg_1993_pp0_iter4_reg;
        data_7_reg_2013_pp0_iter1_reg <= data_7_reg_2013;
        data_7_reg_2013_pp0_iter2_reg <= data_7_reg_2013_pp0_iter1_reg;
        data_7_reg_2013_pp0_iter3_reg <= data_7_reg_2013_pp0_iter2_reg;
        data_7_reg_2013_pp0_iter4_reg <= data_7_reg_2013_pp0_iter3_reg;
        data_7_reg_2013_pp0_iter5_reg <= data_7_reg_2013_pp0_iter4_reg;
        data_8_reg_2034_pp0_iter1_reg <= data_8_reg_2034;
        data_8_reg_2034_pp0_iter2_reg <= data_8_reg_2034_pp0_iter1_reg;
        data_8_reg_2034_pp0_iter3_reg <= data_8_reg_2034_pp0_iter2_reg;
        data_8_reg_2034_pp0_iter4_reg <= data_8_reg_2034_pp0_iter3_reg;
        data_8_reg_2034_pp0_iter5_reg <= data_8_reg_2034_pp0_iter4_reg;
        data_9_reg_2054_pp0_iter1_reg <= data_9_reg_2054;
        data_9_reg_2054_pp0_iter2_reg <= data_9_reg_2054_pp0_iter1_reg;
        data_9_reg_2054_pp0_iter3_reg <= data_9_reg_2054_pp0_iter2_reg;
        data_9_reg_2054_pp0_iter4_reg <= data_9_reg_2054_pp0_iter3_reg;
        data_9_reg_2054_pp0_iter5_reg <= data_9_reg_2054_pp0_iter4_reg;
        data_9_reg_2054_pp0_iter6_reg <= data_9_reg_2054_pp0_iter5_reg;
        data_reg_1952_pp0_iter1_reg <= data_reg_1952;
        data_reg_1952_pp0_iter2_reg <= data_reg_1952_pp0_iter1_reg;
        data_reg_1952_pp0_iter3_reg <= data_reg_1952_pp0_iter2_reg;
        data_reg_1952_pp0_iter4_reg <= data_reg_1952_pp0_iter3_reg;
        data_reg_1952_pp0_iter5_reg <= data_reg_1952_pp0_iter4_reg;
        icmp_ln16_11_reg_2029 <= icmp_ln16_11_fu_612_p2;
        icmp_ln16_13_reg_2049 <= icmp_ln16_13_fu_626_p2;
        icmp_ln16_16_reg_2064_pp0_iter1_reg <= icmp_ln16_16_reg_2064;
        icmp_ln16_17_reg_2069 <= icmp_ln16_17_fu_640_p2;
        icmp_ln16_17_reg_2069_pp0_iter1_reg <= icmp_ln16_17_reg_2069;
        icmp_ln16_1_reg_1968 <= icmp_ln16_1_fu_525_p2;
        icmp_ln16_2_reg_1983 <= icmp_ln16_2_fu_549_p2;
        icmp_ln16_3_reg_1988 <= icmp_ln16_3_fu_555_p2;
        icmp_ln16_6_reg_2003 <= icmp_ln16_6_fu_579_p2;
        icmp_ln16_6_reg_2003_pp0_iter1_reg <= icmp_ln16_6_reg_2003;
        icmp_ln16_7_reg_2008 <= icmp_ln16_7_fu_585_p2;
        icmp_ln16_7_reg_2008_pp0_iter1_reg <= icmp_ln16_7_reg_2008;
        icmp_ln16_reg_1963 <= icmp_ln16_fu_519_p2;
        max_val_19_reg_2189[30 : 0] <= max_val_19_fu_882_p3[30 : 0];
        max_val_21_reg_2202[30 : 0] <= max_val_21_fu_911_p3[30 : 0];
        max_val_4_reg_2176[30 : 0] <= max_val_4_fu_812_p3[30 : 0];
        max_val_reg_2252[30 : 0] <= max_val_fu_1264_p3[30 : 0];
        res_18_reg_2339 <= res_18_fu_1405_p3;
        res_19_reg_2344 <= res_19_fu_1463_p3;
        res_20_reg_2349 <= res_20_fu_1521_p3;
        scale_2_reg_2309_pp0_iter7_reg <= scale_2_reg_2309;
        select_ln25_1_reg_2247[30 : 0] <= select_ln25_1_fu_1206_p3[30 : 0];
        select_ln25_reg_2242[30 : 0] <= select_ln25_fu_1158_p3[30 : 0];
        trunc_ln313_1_reg_1978 <= trunc_ln313_1_fu_531_p1;
        trunc_ln313_2_reg_1998 <= trunc_ln313_2_fu_561_p1;
        trunc_ln313_4_reg_2039 <= trunc_ln313_4_fu_618_p1;
        trunc_ln313_5_reg_2059 <= trunc_ln313_5_fu_632_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_13_reg_2115 <= input_0_q0;
        data_14_reg_2136 <= input_1_q0;
        data_15_reg_2156 <= input_2_q0;
        icmp_ln16_20_reg_2126 <= grp_fu_450_p2;
        icmp_ln16_22_reg_2146 <= grp_fu_466_p2;
        icmp_ln16_26_reg_2166 <= grp_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_2_reg_1973 <= input_1_q1;
        data_3_reg_1993 <= input_2_q1;
        data_7_reg_2013 <= input_0_q0;
        data_8_reg_2034 <= input_1_q0;
        data_9_reg_2054 <= input_2_q0;
        data_reg_1952 <= input_0_q1;
        icmp_ln16_10_reg_2024 <= grp_fu_450_p2;
        icmp_ln16_12_reg_2044 <= grp_fu_466_p2;
        icmp_ln16_16_reg_2064 <= grp_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scale_1_reg_2274 <= grp_fu_389_p2;
        scale_reg_2264 <= grp_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        scale_2_reg_2309 <= grp_fu_384_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to10 = 1'b1;
    end else begin
        ap_idle_pp0_0to10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to10 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_359_p0 = dc_5_fu_1339_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_359_p0 = dc_fu_1319_p1;
    end else begin
        grp_fu_359_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_359_p1 = scale_1_reg_2274;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_359_p1 = scale_reg_2264;
    end else begin
        grp_fu_359_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_364_p0 = dc_6_fu_1343_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_364_p0 = dc_1_fu_1323_p1;
    end else begin
        grp_fu_364_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_364_p1 = scale_2_reg_2309;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_364_p1 = scale_reg_2264;
    end else begin
        grp_fu_364_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_369_p0 = dc_7_fu_1347_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_369_p0 = dc_2_fu_1327_p1;
    end else begin
        grp_fu_369_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_369_p1 = scale_2_reg_2309;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_369_p1 = scale_reg_2264;
    end else begin
        grp_fu_369_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_374_p0 = dc_8_fu_1351_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_374_p0 = dc_3_fu_1331_p1;
    end else begin
        grp_fu_374_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_374_p1 = scale_2_reg_2309;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_374_p1 = scale_1_reg_2274;
    end else begin
        grp_fu_374_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_384_p1 = select_ln25_2_reg_2259;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_384_p1 = select_ln25_reg_2242;
        end else begin
            grp_fu_384_p1 = 'bx;
        end
    end else begin
        grp_fu_384_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_389_p0 = clamped_val_9_reg_2359;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_389_p0 = 32'd1123942400;
    end else begin
        grp_fu_389_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_389_p1 = scale_1_reg_2274_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_389_p1 = select_ln25_1_reg_2247;
    end else begin
        grp_fu_389_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_394_p0 = clamped_val_10_reg_2364;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_394_p0 = res_18_reg_2339;
        end else begin
            grp_fu_394_p0 = 'bx;
        end
    end else begin
        grp_fu_394_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_394_p1 = scale_1_reg_2274_pp0_iter8_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_394_p1 = scale_reg_2264_pp0_iter7_reg;
        end else begin
            grp_fu_394_p1 = 'bx;
        end
    end else begin
        grp_fu_394_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_398_p0 = res_21_reg_2369;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_398_p0 = res_19_reg_2344;
        end else begin
            grp_fu_398_p0 = 'bx;
        end
    end else begin
        grp_fu_398_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_398_p1 = scale_2_reg_2309_pp0_iter7_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_398_p1 = scale_reg_2264_pp0_iter7_reg;
        end else begin
            grp_fu_398_p1 = 'bx;
        end
    end else begin
        grp_fu_398_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_402_p0 = res_22_reg_2374;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_402_p0 = res_20_reg_2349;
        end else begin
            grp_fu_402_p0 = 'bx;
        end
    end else begin
        grp_fu_402_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_402_p1 = scale_2_reg_2309_pp0_iter7_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_402_p1 = scale_reg_2264_pp0_iter7_reg;
        end else begin
            grp_fu_402_p1 = 'bx;
        end
    end else begin
        grp_fu_402_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_406_p0 = res_23_reg_2379;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_406_p0 = clamped_val_reg_2354;
        end else begin
            grp_fu_406_p0 = 'bx;
        end
    end else begin
        grp_fu_406_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_406_p1 = scale_2_reg_2309_pp0_iter7_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_406_p1 = scale_1_reg_2274_pp0_iter7_reg;
        end else begin
            grp_fu_406_p1 = 'bx;
        end
    end else begin
        grp_fu_406_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_410_p0 = abs_val_1_fu_671_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_410_p0 = abs_val_fu_504_p1;
    end else begin
        grp_fu_410_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_410_p1 = max_val_2_fu_656_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_410_p1 = 32'd0;
    end else begin
        grp_fu_410_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_415_p0 = abs_val_4_fu_701_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_415_p0 = abs_val_3_fu_607_p1;
    end else begin
        grp_fu_415_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_415_p1 = max_val_18_fu_686_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_415_p1 = 32'd0;
    end else begin
        grp_fu_415_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_420_p0 = abs_val_2_fu_826_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_420_p0 = abs_val_6_fu_722_p1;
        end else begin
            grp_fu_420_p0 = 'bx;
        end
    end else begin
        grp_fu_420_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_420_p1 = max_val_4_fu_812_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_420_p1 = 32'd0;
        end else begin
            grp_fu_420_p1 = 'bx;
        end
    end else begin
        grp_fu_420_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_425_opcode = 5'd4;
    end else if (((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_425_opcode = 5'd2;
    end else begin
        grp_fu_425_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_425_p0 = max_val_6_fu_982_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_425_p0 = abs_val_5_fu_896_p1;
    end else begin
        grp_fu_425_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_425_p1 = 32'd925353388;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_425_p1 = max_val_19_fu_882_p3;
    end else begin
        grp_fu_425_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_429_opcode = 5'd4;
    end else if (((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_429_opcode = 5'd2;
    end else begin
        grp_fu_429_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_429_p0 = max_val_20_fu_1040_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_429_p0 = abs_val_7_fu_926_p1;
    end else begin
        grp_fu_429_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_429_p1 = 32'd925353388;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_429_p1 = max_val_21_fu_911_p3;
    end else begin
        grp_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1_00001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_435_opcode = 5'd4;
        end else if (((1'b0 == ap_block_pp0_stage0_00001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_435_opcode = 5'd2;
        end else begin
            grp_fu_435_opcode = 'bx;
        end
    end else begin
        grp_fu_435_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_435_p0 = max_val_fu_1264_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_435_p0 = abs_val_8_fu_1112_p1;
        end else begin
            grp_fu_435_p0 = 'bx;
        end
    end else begin
        grp_fu_435_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_435_p1 = 32'd925353388;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_435_p1 = max_val_22_fu_1098_p3;
        end else begin
            grp_fu_435_p1 = 'bx;
        end
    end else begin
        grp_fu_435_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_0_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_0_address0 = 64'd1;
        end else begin
            input_0_address0 = 'bx;
        end
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_1_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_1_address0 = 64'd1;
        end else begin
            input_1_address0 = 'bx;
        end
    end else begin
        input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_ce1 = 1'b1;
    end else begin
        input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_2_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_2_address0 = 64'd1;
        end else begin
            input_2_address0 = 'bx;
        end
    end else begin
        input_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_2_ce0 = 1'b1;
    end else begin
        input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_2_ce1 = 1'b1;
    end else begin
        input_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter11 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            output_0_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            output_0_address0 = 64'd1;
        end else begin
            output_0_address0 = 'bx;
        end
    end else begin
        output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_0_ce1 = 1'b1;
    end else begin
        output_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter11 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            output_0_d0 = bitcast_ln30_2_fu_1897_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            output_0_d0 = bitcast_ln30_1_fu_1882_p1;
        end else begin
            output_0_d0 = 'bx;
        end
    end else begin
        output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_0_we1 = 1'b1;
    end else begin
        output_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter11 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            output_1_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            output_1_address0 = 64'd0;
        end else begin
            output_1_address0 = 'bx;
        end
    end else begin
        output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_1_ce1 = 1'b1;
    end else begin
        output_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter11 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            output_1_d0 = bitcast_ln30_5_fu_1907_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            output_1_d0 = bitcast_ln30_3_fu_1887_p1;
        end else begin
            output_1_d0 = 'bx;
        end
    end else begin
        output_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_1_we0 = 1'b1;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_1_we1 = 1'b1;
    end else begin
        output_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter11 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            output_2_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            output_2_address0 = 64'd0;
        end else begin
            output_2_address0 = 'bx;
        end
    end else begin
        output_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_2_ce0 = 1'b1;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_2_ce1 = 1'b1;
    end else begin
        output_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter11 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            output_2_d0 = bitcast_ln30_8_fu_1917_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            output_2_d0 = bitcast_ln30_6_fu_1892_p1;
        end else begin
            output_2_d0 = 'bx;
        end
    end else begin
        output_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_2_we0 = 1'b1;
    end else begin
        output_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_2_we1 = 1'b1;
    end else begin
        output_2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abs_val_1_fu_671_p1 = t_18_fu_664_p3;

assign abs_val_2_fu_826_p1 = t_19_fu_819_p3;

assign abs_val_3_fu_607_p1 = t_fu_599_p3;

assign abs_val_4_fu_701_p1 = t_20_fu_694_p3;

assign abs_val_5_fu_896_p1 = t_21_fu_889_p3;

assign abs_val_6_fu_722_p1 = t_22_fu_714_p3;

assign abs_val_7_fu_926_p1 = t_23_fu_919_p3;

assign abs_val_8_fu_1112_p1 = t_24_fu_1105_p3;

assign abs_val_fu_504_p1 = t_17_fu_496_p3;

assign and_ln16_10_fu_905_p2 = (or_ln16_10_fu_901_p2 & grp_fu_420_p2);

assign and_ln16_11_fu_1086_p2 = (or_ln16_12_fu_1080_p2 & or_ln16_11_fu_1064_p2);

assign and_ln16_12_fu_1092_p2 = (grp_fu_429_p2 & and_ln16_11_fu_1086_p2);

assign and_ln16_13_fu_1252_p2 = (or_ln16_14_fu_1246_p2 & or_ln16_13_fu_1230_p2);

assign and_ln16_14_fu_1258_p2 = (grp_fu_435_p2 & and_ln16_13_fu_1252_p2);

assign and_ln16_1_fu_800_p2 = (or_ln16_2_fu_794_p2 & or_ln16_1_fu_778_p2);

assign and_ln16_2_fu_806_p2 = (grp_fu_410_p2 & and_ln16_1_fu_800_p2);

assign and_ln16_3_fu_970_p2 = (or_ln16_4_fu_964_p2 & or_ln16_3_fu_948_p2);

assign and_ln16_4_fu_976_p2 = (grp_fu_420_p2 & and_ln16_3_fu_970_p2);

assign and_ln16_5_fu_680_p2 = (or_ln16_5_fu_676_p2 & grp_fu_415_p2);

assign and_ln16_6_fu_870_p2 = (or_ln16_7_fu_864_p2 & or_ln16_6_fu_848_p2);

assign and_ln16_7_fu_876_p2 = (grp_fu_415_p2 & and_ln16_6_fu_870_p2);

assign and_ln16_8_fu_1028_p2 = (or_ln16_9_fu_1022_p2 & or_ln16_8_fu_1006_p2);

assign and_ln16_9_fu_1034_p2 = (grp_fu_425_p2 & and_ln16_8_fu_1028_p2);

assign and_ln16_fu_650_p2 = (or_ln16_fu_646_p2 & grp_fu_410_p2);

assign and_ln18_1_fu_1443_p2 = (icmp_ln18_4_fu_1437_p2 & icmp_ln18_3_fu_1431_p2);

assign and_ln18_2_fu_1501_p2 = (icmp_ln18_6_fu_1495_p2 & icmp_ln18_5_fu_1489_p2);

assign and_ln18_3_fu_1559_p2 = (icmp_ln18_8_fu_1553_p2 & icmp_ln18_7_fu_1547_p2);

assign and_ln18_4_fu_1617_p2 = (icmp_ln18_9_fu_1605_p2 & icmp_ln18_10_fu_1611_p2);

assign and_ln18_5_fu_1675_p2 = (icmp_ln18_12_fu_1669_p2 & icmp_ln18_11_fu_1663_p2);

assign and_ln18_6_fu_1733_p2 = (icmp_ln18_14_fu_1727_p2 & icmp_ln18_13_fu_1721_p2);

assign and_ln18_7_fu_1791_p2 = (icmp_ln18_16_fu_1785_p2 & icmp_ln18_15_fu_1779_p2);

assign and_ln18_8_fu_1849_p2 = (icmp_ln18_18_fu_1843_p2 & icmp_ln18_17_fu_1837_p2);

assign and_ln18_fu_1385_p2 = (icmp_ln18_fu_1373_p2 & icmp_ln18_2_fu_1379_p2);

assign and_ln25_1_fu_1200_p2 = (or_ln25_1_fu_1194_p2 & grp_fu_429_p2);

assign and_ln25_2_fu_1306_p2 = (or_ln25_2_fu_1300_p2 & grp_fu_435_p2);

assign and_ln25_fu_1152_p2 = (or_ln25_fu_1146_p2 & grp_fu_425_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln16_1_fu_931_p1 = max_val_4_reg_2176;

assign bitcast_ln16_2_fu_831_p1 = max_val_18_reg_2102;

assign bitcast_ln16_3_fu_989_p1 = max_val_19_reg_2189;

assign bitcast_ln16_4_fu_1047_p1 = max_val_21_reg_2202;

assign bitcast_ln16_5_fu_1213_p1 = max_val_22_reg_2229;

assign bitcast_ln16_fu_761_p1 = max_val_2_reg_2089;

assign bitcast_ln25_1_fu_1165_p1 = max_val_20_reg_2222;

assign bitcast_ln25_2_fu_1271_p1 = max_val_reg_2252;

assign bitcast_ln25_fu_1117_p1 = max_val_6_reg_2215;

assign bitcast_ln30_1_fu_1882_p1 = grp_fu_406_p2;

assign bitcast_ln30_2_fu_1897_p1 = grp_fu_398_p2;

assign bitcast_ln30_3_fu_1887_p1 = grp_fu_398_p2;

assign bitcast_ln30_5_fu_1907_p1 = grp_fu_402_p2;

assign bitcast_ln30_6_fu_1892_p1 = grp_fu_402_p2;

assign bitcast_ln30_8_fu_1917_p1 = grp_fu_406_p2;

assign clamped_val_10_fu_1695_p3 = ((and_ln18_5_fu_1675_p2[0:0] == 1'b1) ? 32'd1123942400 : res_10_fu_1687_p3);

assign clamped_val_9_fu_1637_p3 = ((and_ln18_4_fu_1617_p2[0:0] == 1'b1) ? 32'd1123942400 : res_8_fu_1629_p3);

assign clamped_val_fu_1579_p3 = ((and_ln18_3_fu_1559_p2[0:0] == 1'b1) ? 32'd1123942400 : res_6_fu_1571_p3);

assign data_19_fu_1355_p1 = grp_generic_fmax_float_s_fu_329_ap_return;

assign data_20_fu_1413_p1 = grp_generic_fmax_float_s_fu_335_ap_return;

assign data_21_fu_1471_p1 = grp_generic_fmax_float_s_fu_341_ap_return;

assign data_22_fu_1529_p1 = grp_generic_fmax_float_s_fu_347_ap_return;

assign data_23_fu_1587_p1 = x_assign_s_generic_fmax_float_s_fu_353_ap_return;

assign data_24_fu_1645_p1 = grp_generic_fmax_float_s_fu_329_ap_return;

assign data_25_fu_1703_p1 = grp_generic_fmax_float_s_fu_335_ap_return;

assign data_26_fu_1761_p1 = grp_generic_fmax_float_s_fu_341_ap_return;

assign data_27_fu_1819_p1 = grp_generic_fmax_float_s_fu_347_ap_return;

assign dc_1_fu_1323_p1 = data_2_reg_1973_pp0_iter5_reg;

assign dc_2_fu_1327_p1 = data_3_reg_1993_pp0_iter5_reg;

assign dc_3_fu_1331_p1 = data_7_reg_2013_pp0_iter5_reg;

assign dc_5_fu_1339_p1 = data_9_reg_2054_pp0_iter6_reg;

assign dc_6_fu_1343_p1 = data_13_reg_2115_pp0_iter6_reg;

assign dc_7_fu_1347_p1 = data_14_reg_2136_pp0_iter6_reg;

assign dc_8_fu_1351_p1 = data_15_reg_2156_pp0_iter6_reg;

assign dc_fu_1319_p1 = data_reg_1952_pp0_iter5_reg;

assign grp_fu_379_p0 = data_8_reg_2034_pp0_iter5_reg;

assign grp_fu_440_p4 = {{input_0_q0[30:23]}};

assign grp_fu_450_p2 = ((grp_fu_440_p4 != 8'd255) ? 1'b1 : 1'b0);

assign grp_fu_456_p4 = {{input_1_q0[30:23]}};

assign grp_fu_466_p2 = ((grp_fu_456_p4 != 8'd255) ? 1'b1 : 1'b0);

assign grp_fu_472_p4 = {{input_2_q0[30:23]}};

assign grp_fu_482_p2 = ((grp_fu_472_p4 != 8'd255) ? 1'b1 : 1'b0);

assign grp_generic_round_float_s_fu_284_ap_start = grp_generic_round_float_s_fu_284_ap_start_reg;

assign grp_generic_round_float_s_fu_293_ap_start = grp_generic_round_float_s_fu_293_ap_start_reg;

assign grp_generic_round_float_s_fu_302_ap_start = grp_generic_round_float_s_fu_302_ap_start_reg;

assign grp_generic_round_float_s_fu_311_ap_start = grp_generic_round_float_s_fu_311_ap_start_reg;

assign grp_generic_round_float_s_fu_320_ap_start = grp_generic_round_float_s_fu_320_ap_start_reg;

assign icmp_ln16_11_fu_612_p2 = ((trunc_ln16_5_fu_595_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_13_fu_626_p2 = ((trunc_ln16_6_fu_622_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_14_fu_852_p2 = ((tmp_13_fu_834_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_15_fu_858_p2 = ((trunc_ln16_7_fu_844_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_17_fu_640_p2 = ((trunc_ln16_8_fu_636_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_18_fu_1010_p2 = ((tmp_16_fu_992_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_19_fu_1016_p2 = ((trunc_ln16_9_fu_1002_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_1_fu_525_p2 = ((trunc_ln16_fu_492_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_21_fu_727_p2 = ((trunc_ln16_10_fu_710_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_23_fu_741_p2 = ((trunc_ln16_11_fu_737_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_24_fu_1068_p2 = ((tmp_23_fu_1050_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_25_fu_1074_p2 = ((trunc_ln16_12_fu_1060_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_27_fu_755_p2 = ((trunc_ln16_13_fu_751_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_28_fu_1234_p2 = ((tmp_26_fu_1216_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_29_fu_1240_p2 = ((trunc_ln16_14_fu_1226_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_2_fu_549_p2 = ((tmp_4_fu_539_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_3_fu_555_p2 = ((trunc_ln16_1_fu_535_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_4_fu_782_p2 = ((tmp_5_fu_764_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_5_fu_788_p2 = ((trunc_ln16_2_fu_774_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_6_fu_579_p2 = ((tmp_8_fu_569_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_7_fu_585_p2 = ((trunc_ln16_3_fu_565_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_8_fu_952_p2 = ((tmp_9_fu_934_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln16_9_fu_958_p2 = ((trunc_ln16_4_fu_944_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_519_p2 = ((tmp_1_fu_509_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_10_fu_1611_p2 = ((x_fp_sig_4_fu_1601_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_11_fu_1663_p2 = ((x_fp_exp_5_fu_1649_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_12_fu_1669_p2 = ((x_fp_sig_5_fu_1659_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_13_fu_1721_p2 = ((x_fp_exp_6_fu_1707_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_14_fu_1727_p2 = ((x_fp_sig_6_fu_1717_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_15_fu_1779_p2 = ((x_fp_exp_7_fu_1765_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_16_fu_1785_p2 = ((x_fp_sig_7_fu_1775_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_17_fu_1837_p2 = ((x_fp_exp_8_fu_1823_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_18_fu_1843_p2 = ((x_fp_sig_8_fu_1833_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_2_fu_1379_p2 = ((x_fp_sig_fu_1369_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_3_fu_1431_p2 = ((x_fp_exp_1_fu_1417_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_4_fu_1437_p2 = ((x_fp_sig_1_fu_1427_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_5_fu_1489_p2 = ((x_fp_exp_2_fu_1475_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_6_fu_1495_p2 = ((x_fp_sig_2_fu_1485_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_7_fu_1547_p2 = ((x_fp_exp_3_fu_1533_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_8_fu_1553_p2 = ((x_fp_sig_3_fu_1543_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_9_fu_1605_p2 = ((x_fp_exp_4_fu_1591_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_1373_p2 = ((x_fp_exp_fu_1359_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln25_1_fu_1140_p2 = ((trunc_ln25_fu_1130_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_2_fu_1182_p2 = ((tmp_18_fu_1168_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln25_3_fu_1188_p2 = ((trunc_ln25_1_fu_1178_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_4_fu_1288_p2 = ((tmp_28_fu_1274_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln25_5_fu_1294_p2 = ((trunc_ln25_2_fu_1284_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1134_p2 = ((tmp_3_fu_1120_p4 != 8'd255) ? 1'b1 : 1'b0);

assign input_0_address1 = 64'd0;

assign input_1_address1 = 64'd0;

assign input_2_address1 = 64'd0;

assign max_val_18_fu_686_p3 = ((and_ln16_5_fu_680_p2[0:0] == 1'b1) ? abs_val_3_reg_2018 : 32'd0);

assign max_val_19_fu_882_p3 = ((and_ln16_7_fu_876_p2[0:0] == 1'b1) ? abs_val_4_reg_2109 : max_val_18_reg_2102);

assign max_val_20_fu_1040_p3 = ((and_ln16_9_fu_1034_p2[0:0] == 1'b1) ? abs_val_5_reg_2196 : max_val_19_reg_2189);

assign max_val_21_fu_911_p3 = ((and_ln16_10_fu_905_p2[0:0] == 1'b1) ? abs_val_6_reg_2120 : 32'd0);

assign max_val_22_fu_1098_p3 = ((and_ln16_12_fu_1092_p2[0:0] == 1'b1) ? abs_val_7_reg_2209 : max_val_21_reg_2202);

assign max_val_2_fu_656_p3 = ((and_ln16_fu_650_p2[0:0] == 1'b1) ? abs_val_reg_1957 : 32'd0);

assign max_val_4_fu_812_p3 = ((and_ln16_2_fu_806_p2[0:0] == 1'b1) ? abs_val_1_reg_2096 : max_val_2_reg_2089);

assign max_val_6_fu_982_p3 = ((and_ln16_4_fu_976_p2[0:0] == 1'b1) ? abs_val_2_reg_2183 : max_val_4_reg_2176);

assign max_val_fu_1264_p3 = ((and_ln16_14_fu_1258_p2[0:0] == 1'b1) ? abs_val_8_reg_2236 : max_val_22_reg_2229);

assign or_ln16_10_fu_901_p2 = (icmp_ln16_21_reg_2131 | icmp_ln16_20_reg_2126);

assign or_ln16_11_fu_1064_p2 = (icmp_ln16_23_reg_2151 | icmp_ln16_22_reg_2146);

assign or_ln16_12_fu_1080_p2 = (icmp_ln16_25_fu_1074_p2 | icmp_ln16_24_fu_1068_p2);

assign or_ln16_13_fu_1230_p2 = (icmp_ln16_27_reg_2171_pp0_iter2_reg | icmp_ln16_26_reg_2166_pp0_iter2_reg);

assign or_ln16_14_fu_1246_p2 = (icmp_ln16_29_fu_1240_p2 | icmp_ln16_28_fu_1234_p2);

assign or_ln16_1_fu_778_p2 = (icmp_ln16_3_reg_1988 | icmp_ln16_2_reg_1983);

assign or_ln16_2_fu_794_p2 = (icmp_ln16_5_fu_788_p2 | icmp_ln16_4_fu_782_p2);

assign or_ln16_3_fu_948_p2 = (icmp_ln16_7_reg_2008_pp0_iter1_reg | icmp_ln16_6_reg_2003_pp0_iter1_reg);

assign or_ln16_4_fu_964_p2 = (icmp_ln16_9_fu_958_p2 | icmp_ln16_8_fu_952_p2);

assign or_ln16_5_fu_676_p2 = (icmp_ln16_11_reg_2029 | icmp_ln16_10_reg_2024);

assign or_ln16_6_fu_848_p2 = (icmp_ln16_13_reg_2049 | icmp_ln16_12_reg_2044);

assign or_ln16_7_fu_864_p2 = (icmp_ln16_15_fu_858_p2 | icmp_ln16_14_fu_852_p2);

assign or_ln16_8_fu_1006_p2 = (icmp_ln16_17_reg_2069_pp0_iter1_reg | icmp_ln16_16_reg_2064_pp0_iter1_reg);

assign or_ln16_9_fu_1022_p2 = (icmp_ln16_19_fu_1016_p2 | icmp_ln16_18_fu_1010_p2);

assign or_ln16_fu_646_p2 = (icmp_ln16_reg_1963 | icmp_ln16_1_reg_1968);

assign or_ln25_1_fu_1194_p2 = (icmp_ln25_3_fu_1188_p2 | icmp_ln25_2_fu_1182_p2);

assign or_ln25_2_fu_1300_p2 = (icmp_ln25_5_fu_1294_p2 | icmp_ln25_4_fu_1288_p2);

assign or_ln25_fu_1146_p2 = (icmp_ln25_fu_1134_p2 | icmp_ln25_1_fu_1140_p2);

assign output_0_address1 = 64'd0;

assign output_0_d1 = grp_fu_394_p2;

assign output_1_address1 = 64'd1;

assign output_1_d1 = grp_fu_389_p2;

assign output_2_address1 = 64'd1;

assign output_2_d1 = grp_fu_394_p2;

assign res_10_fu_1687_p3 = ((ymaggreater_6_fu_1681_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_329_ap_return : 32'd1123942400);

assign res_12_fu_1745_p3 = ((ymaggreater_7_fu_1739_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_335_ap_return : 32'd1123942400);

assign res_14_fu_1803_p3 = ((ymaggreater_8_fu_1797_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_341_ap_return : 32'd1123942400);

assign res_16_fu_1861_p3 = ((ymaggreater_9_fu_1855_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_347_ap_return : 32'd1123942400);

assign res_18_fu_1405_p3 = ((and_ln18_fu_1385_p2[0:0] == 1'b1) ? 32'd1123942400 : res_fu_1397_p3);

assign res_19_fu_1463_p3 = ((and_ln18_1_fu_1443_p2[0:0] == 1'b1) ? 32'd1123942400 : res_2_fu_1455_p3);

assign res_20_fu_1521_p3 = ((and_ln18_2_fu_1501_p2[0:0] == 1'b1) ? 32'd1123942400 : res_4_fu_1513_p3);

assign res_21_fu_1753_p3 = ((and_ln18_6_fu_1733_p2[0:0] == 1'b1) ? 32'd1123942400 : res_12_fu_1745_p3);

assign res_22_fu_1811_p3 = ((and_ln18_7_fu_1791_p2[0:0] == 1'b1) ? 32'd1123942400 : res_14_fu_1803_p3);

assign res_23_fu_1869_p3 = ((and_ln18_8_fu_1849_p2[0:0] == 1'b1) ? 32'd1123942400 : res_16_fu_1861_p3);

assign res_2_fu_1455_p3 = ((ymaggreater_2_fu_1449_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_335_ap_return : 32'd1123942400);

assign res_4_fu_1513_p3 = ((ymaggreater_3_fu_1507_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_341_ap_return : 32'd1123942400);

assign res_6_fu_1571_p3 = ((ymaggreater_4_fu_1565_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_347_ap_return : 32'd1123942400);

assign res_8_fu_1629_p3 = ((ymaggreater_5_fu_1623_p2[0:0] == 1'b1) ? x_assign_s_generic_fmax_float_s_fu_353_ap_return : 32'd1123942400);

assign res_fu_1397_p3 = ((ymaggreater_fu_1391_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_329_ap_return : 32'd1123942400);

assign select_ln25_1_fu_1206_p3 = ((and_ln25_1_fu_1200_p2[0:0] == 1'b1) ? 32'd925353388 : max_val_20_reg_2222);

assign select_ln25_2_fu_1312_p3 = ((and_ln25_2_fu_1306_p2[0:0] == 1'b1) ? 32'd925353388 : max_val_reg_2252);

assign select_ln25_fu_1158_p3 = ((and_ln25_fu_1152_p2[0:0] == 1'b1) ? 32'd925353388 : max_val_6_reg_2215);

assign t_17_fu_496_p3 = {{1'd0}, {trunc_ln313_fu_488_p1}};

assign t_18_fu_664_p3 = {{1'd0}, {trunc_ln313_1_reg_1978}};

assign t_19_fu_819_p3 = {{1'd0}, {trunc_ln313_2_reg_1998}};

assign t_20_fu_694_p3 = {{1'd0}, {trunc_ln313_4_reg_2039}};

assign t_21_fu_889_p3 = {{1'd0}, {trunc_ln313_5_reg_2059}};

assign t_22_fu_714_p3 = {{1'd0}, {trunc_ln313_6_fu_706_p1}};

assign t_23_fu_919_p3 = {{1'd0}, {trunc_ln313_7_reg_2141}};

assign t_24_fu_1105_p3 = {{1'd0}, {trunc_ln313_8_reg_2161}};

assign t_fu_599_p3 = {{1'd0}, {trunc_ln313_3_fu_591_p1}};

assign tmp_13_fu_834_p4 = {{bitcast_ln16_2_fu_831_p1[30:23]}};

assign tmp_16_fu_992_p4 = {{bitcast_ln16_3_fu_989_p1[30:23]}};

assign tmp_18_fu_1168_p4 = {{bitcast_ln25_1_fu_1165_p1[30:23]}};

assign tmp_1_fu_509_p4 = {{input_0_q1[30:23]}};

assign tmp_23_fu_1050_p4 = {{bitcast_ln16_4_fu_1047_p1[30:23]}};

assign tmp_26_fu_1216_p4 = {{bitcast_ln16_5_fu_1213_p1[30:23]}};

assign tmp_28_fu_1274_p4 = {{bitcast_ln25_2_fu_1271_p1[30:23]}};

assign tmp_3_fu_1120_p4 = {{bitcast_ln25_fu_1117_p1[30:23]}};

assign tmp_4_fu_539_p4 = {{input_1_q1[30:23]}};

assign tmp_5_fu_764_p4 = {{bitcast_ln16_fu_761_p1[30:23]}};

assign tmp_8_fu_569_p4 = {{input_2_q1[30:23]}};

assign tmp_9_fu_934_p4 = {{bitcast_ln16_1_fu_931_p1[30:23]}};

assign trunc_ln16_10_fu_710_p1 = input_0_q0[22:0];

assign trunc_ln16_11_fu_737_p1 = input_1_q0[22:0];

assign trunc_ln16_12_fu_1060_p1 = bitcast_ln16_4_fu_1047_p1[22:0];

assign trunc_ln16_13_fu_751_p1 = input_2_q0[22:0];

assign trunc_ln16_14_fu_1226_p1 = bitcast_ln16_5_fu_1213_p1[22:0];

assign trunc_ln16_1_fu_535_p1 = input_1_q1[22:0];

assign trunc_ln16_2_fu_774_p1 = bitcast_ln16_fu_761_p1[22:0];

assign trunc_ln16_3_fu_565_p1 = input_2_q1[22:0];

assign trunc_ln16_4_fu_944_p1 = bitcast_ln16_1_fu_931_p1[22:0];

assign trunc_ln16_5_fu_595_p1 = input_0_q0[22:0];

assign trunc_ln16_6_fu_622_p1 = input_1_q0[22:0];

assign trunc_ln16_7_fu_844_p1 = bitcast_ln16_2_fu_831_p1[22:0];

assign trunc_ln16_8_fu_636_p1 = input_2_q0[22:0];

assign trunc_ln16_9_fu_1002_p1 = bitcast_ln16_3_fu_989_p1[22:0];

assign trunc_ln16_fu_492_p1 = input_0_q1[22:0];

assign trunc_ln25_1_fu_1178_p1 = bitcast_ln25_1_fu_1165_p1[22:0];

assign trunc_ln25_2_fu_1284_p1 = bitcast_ln25_2_fu_1271_p1[22:0];

assign trunc_ln25_fu_1130_p1 = bitcast_ln25_fu_1117_p1[22:0];

assign trunc_ln313_1_fu_531_p1 = input_1_q1[30:0];

assign trunc_ln313_2_fu_561_p1 = input_2_q1[30:0];

assign trunc_ln313_3_fu_591_p1 = input_0_q0[30:0];

assign trunc_ln313_4_fu_618_p1 = input_1_q0[30:0];

assign trunc_ln313_5_fu_632_p1 = input_2_q0[30:0];

assign trunc_ln313_6_fu_706_p1 = input_0_q0[30:0];

assign trunc_ln313_7_fu_733_p1 = input_1_q0[30:0];

assign trunc_ln313_8_fu_747_p1 = input_2_q0[30:0];

assign trunc_ln313_fu_488_p1 = input_0_q1[30:0];

assign x_fp_exp_1_fu_1417_p4 = {{data_20_fu_1413_p1[30:23]}};

assign x_fp_exp_2_fu_1475_p4 = {{data_21_fu_1471_p1[30:23]}};

assign x_fp_exp_3_fu_1533_p4 = {{data_22_fu_1529_p1[30:23]}};

assign x_fp_exp_4_fu_1591_p4 = {{data_23_fu_1587_p1[30:23]}};

assign x_fp_exp_5_fu_1649_p4 = {{data_24_fu_1645_p1[30:23]}};

assign x_fp_exp_6_fu_1707_p4 = {{data_25_fu_1703_p1[30:23]}};

assign x_fp_exp_7_fu_1765_p4 = {{data_26_fu_1761_p1[30:23]}};

assign x_fp_exp_8_fu_1823_p4 = {{data_27_fu_1819_p1[30:23]}};

assign x_fp_exp_fu_1359_p4 = {{data_19_fu_1355_p1[30:23]}};

assign x_fp_sig_1_fu_1427_p1 = data_20_fu_1413_p1[22:0];

assign x_fp_sig_2_fu_1485_p1 = data_21_fu_1471_p1[22:0];

assign x_fp_sig_3_fu_1543_p1 = data_22_fu_1529_p1[22:0];

assign x_fp_sig_4_fu_1601_p1 = data_23_fu_1587_p1[22:0];

assign x_fp_sig_5_fu_1659_p1 = data_24_fu_1645_p1[22:0];

assign x_fp_sig_6_fu_1717_p1 = data_25_fu_1703_p1[22:0];

assign x_fp_sig_7_fu_1775_p1 = data_26_fu_1761_p1[22:0];

assign x_fp_sig_8_fu_1833_p1 = data_27_fu_1819_p1[22:0];

assign x_fp_sig_fu_1369_p1 = data_19_fu_1355_p1[22:0];

assign ymaggreater_2_fu_1449_p2 = (($signed(data_20_fu_1413_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_3_fu_1507_p2 = (($signed(data_21_fu_1471_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_4_fu_1565_p2 = (($signed(data_22_fu_1529_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_5_fu_1623_p2 = (($signed(data_23_fu_1587_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_6_fu_1681_p2 = (($signed(data_24_fu_1645_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_7_fu_1739_p2 = (($signed(data_25_fu_1703_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_8_fu_1797_p2 = (($signed(data_26_fu_1761_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_9_fu_1855_p2 = (($signed(data_27_fu_1819_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_fu_1391_p2 = (($signed(data_19_fu_1355_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    abs_val_reg_1957[31] <= 1'b0;
    abs_val_3_reg_2018[31] <= 1'b0;
    max_val_2_reg_2089[31] <= 1'b0;
    abs_val_1_reg_2096[31] <= 1'b0;
    max_val_18_reg_2102[31] <= 1'b0;
    abs_val_4_reg_2109[31] <= 1'b0;
    abs_val_6_reg_2120[31] <= 1'b0;
    max_val_4_reg_2176[31] <= 1'b0;
    abs_val_2_reg_2183[31] <= 1'b0;
    max_val_19_reg_2189[31] <= 1'b0;
    abs_val_5_reg_2196[31] <= 1'b0;
    max_val_21_reg_2202[31] <= 1'b0;
    abs_val_7_reg_2209[31] <= 1'b0;
    max_val_6_reg_2215[31] <= 1'b0;
    max_val_20_reg_2222[31] <= 1'b0;
    max_val_22_reg_2229[31] <= 1'b0;
    abs_val_8_reg_2236[31] <= 1'b0;
    select_ln25_reg_2242[31] <= 1'b0;
    select_ln25_1_reg_2247[31] <= 1'b0;
    max_val_reg_2252[31] <= 1'b0;
    select_ln25_2_reg_2259[31] <= 1'b0;
end

endmodule //activation_quant
