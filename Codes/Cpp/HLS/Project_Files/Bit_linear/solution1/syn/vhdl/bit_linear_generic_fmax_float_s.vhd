-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bit_linear_generic_fmax_float_s is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of bit_linear_generic_fmax_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_C3000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000011000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal data_fu_30_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_fu_42_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_fu_52_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_fu_56_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_fu_62_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_fu_34_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln39_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_68_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_1_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_fu_94_p2 : STD_LOGIC_VECTOR (0 downto 0);


begin



    and_ln18_fu_68_p2 <= (icmp_ln18_fu_56_p2 and icmp_ln18_1_fu_62_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        ap_const_lv32_C3000000 when (or_ln18_fu_94_p2(0) = '1') else 
        x;
    data_fu_30_p1 <= x;
    icmp_ln18_1_fu_62_p2 <= "0" when (x_fp_sig_fu_52_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_fu_56_p2 <= "1" when (x_fp_exp_fu_42_p4 = ap_const_lv8_FF) else "0";
    or_ln18_fu_94_p2 <= (ymaggreater_1_fu_86_p3 or and_ln18_fu_68_p2);
    x_fp_exp_fu_42_p4 <= data_fu_30_p1(30 downto 23);
    x_fp_sig_fu_52_p1 <= data_fu_30_p1(23 - 1 downto 0);
    x_fp_sign_fu_34_p3 <= data_fu_30_p1(31 downto 31);
    xor_ln39_fu_80_p2 <= (ymaggreater_fu_74_p2 xor ap_const_lv1_1);
    ymaggreater_1_fu_86_p3 <= 
        xor_ln39_fu_80_p2 when (x_fp_sign_fu_34_p3(0) = '1') else 
        ymaggreater_fu_74_p2;
    ymaggreater_fu_74_p2 <= "1" when (signed(data_fu_30_p1) < signed(ap_const_lv32_C3000000)) else "0";
end behav;
