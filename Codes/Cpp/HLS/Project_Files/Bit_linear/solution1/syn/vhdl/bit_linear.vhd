-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bit_linear is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_0_ce0 : OUT STD_LOGIC;
    input_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_0_ce1 : OUT STD_LOGIC;
    input_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_1_ce0 : OUT STD_LOGIC;
    input_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_1_ce1 : OUT STD_LOGIC;
    input_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_2_ce0 : OUT STD_LOGIC;
    input_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_2_ce1 : OUT STD_LOGIC;
    input_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_3_ce0 : OUT STD_LOGIC;
    input_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_3_ce1 : OUT STD_LOGIC;
    input_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weight_0_ce0 : OUT STD_LOGIC;
    weight_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weight_0_ce1 : OUT STD_LOGIC;
    weight_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weight_1_ce0 : OUT STD_LOGIC;
    weight_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weight_1_ce1 : OUT STD_LOGIC;
    weight_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_0_ce0 : OUT STD_LOGIC;
    output_0_we0 : OUT STD_LOGIC;
    output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_0_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_0_ce1 : OUT STD_LOGIC;
    output_0_we1 : OUT STD_LOGIC;
    output_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_1_ce0 : OUT STD_LOGIC;
    output_1_we0 : OUT STD_LOGIC;
    output_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_1_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_1_ce1 : OUT STD_LOGIC;
    output_1_we1 : OUT STD_LOGIC;
    output_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of bit_linear is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "bit_linear_bit_linear,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=72,HLS_SYN_TPT=3,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=10839,HLS_SYN_LUT=9935,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv32_3E000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111110000000000000000000000000";
    constant ap_const_lv32_42FE0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000010111111100000000000000000";
    constant ap_const_lv32_3727C5AC : STD_LOGIC_VECTOR (31 downto 0) := "00110111001001111100010110101100";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_BF800000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111100000000000000000000000";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv64_3EE4F8B580000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011100100111110001011010110000000000000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal grp_find_max_abs_fu_338_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_597 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal grp_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_602 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal grp_generic_round_float_s_fu_373_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_364_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_618 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_382_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_626 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_634_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_2070 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_2070_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_2070_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_2070_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_2070_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_0_load_1_reg_2076 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_7_fu_639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_7_reg_2081 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_7_reg_2081_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_7_reg_2081_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_7_reg_2081_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_7_reg_2081_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_1_load_1_reg_2087 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_9_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_9_reg_2092 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_9_reg_2092_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_9_reg_2092_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_9_reg_2092_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_9_reg_2092_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_2_load_1_reg_2098 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_fu_649_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_reg_2103 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_reg_2103_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_reg_2103_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_reg_2103_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_reg_2103_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_3_load_1_reg_2109 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_2114_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_fu_654_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_reg_2119 : STD_LOGIC_VECTOR (30 downto 0);
    signal data_13_reg_2124 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_13_reg_2124_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_4_fu_658_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_4_reg_2129 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_4_reg_2129_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal data_14_reg_2134 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_14_reg_2134_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_5_fu_662_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_5_reg_2139 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_5_reg_2139_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_5_reg_2139_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal data_15_reg_2144 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_15_reg_2144_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_6_fu_666_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_6_reg_2149 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_6_reg_2149_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_6_reg_2149_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_6_reg_2149_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_6_fu_670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_6_reg_2174 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_6_reg_2174_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_6_reg_2174_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_6_reg_2174_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_6_reg_2174_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_8_fu_674_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_8_reg_2180 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_8_reg_2180_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_8_reg_2180_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_8_reg_2180_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_8_reg_2180_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_fu_678_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_reg_2186 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_reg_2186_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_reg_2186_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_reg_2186_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_reg_2186_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_fu_682_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_reg_2192 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_reg_2192_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_reg_2192_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_reg_2192_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_reg_2192_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_fu_693_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_16_reg_2203_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_7_fu_698_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_7_reg_2208 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_7_reg_2208_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_7_reg_2208_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_7_reg_2208_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal data_17_reg_2213 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_17_reg_2213_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_8_fu_702_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_8_reg_2218 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_8_reg_2218_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_8_reg_2218_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_8_reg_2218_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_8_reg_2218_pp0_iter4_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal data_18_reg_2223 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_18_reg_2223_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_9_fu_706_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_9_reg_2228 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_9_reg_2228_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_9_reg_2228_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_9_reg_2228_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_9_reg_2228_pp0_iter4_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_9_reg_2228_pp0_iter5_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal data_19_reg_2233 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_19_reg_2233_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_10_fu_710_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_10_reg_2238 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_10_reg_2238_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_10_reg_2238_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_10_reg_2238_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_10_reg_2238_pp0_iter4_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_10_reg_2238_pp0_iter5_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln313_10_reg_2238_pp0_iter6_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_419_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_2243 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_1_fu_721_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln47_fu_768_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln47_reg_2253 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_reg_2258 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln47_1_fu_818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln47_1_reg_2263 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_2_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_428_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_reg_2273 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_3_fu_845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_432_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_reg_2283 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_reg_2288 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_reg_2288_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_4_fu_857_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_1_reg_2303 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_1_reg_2303_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_val_2_reg_2314 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_reg_2319 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_16_fu_912_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_16_reg_2324 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_17_fu_970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_17_reg_2329 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_val_7_reg_2334 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_5_fu_985_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_18_fu_1040_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_18_reg_2344 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_20_fu_1098_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_20_reg_2349 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_21_fu_1156_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_21_reg_2354 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_19_fu_1214_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_19_reg_2359 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_22_fu_1272_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_22_reg_2364 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_fmax_float_s_fu_412_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_6_reg_2369 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_440_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_5_reg_2375 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_23_fu_1328_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_23_reg_2380 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_6_fu_1343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_444_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_6_reg_2390 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln327_7_fu_1355_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_513_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_reg_2400_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_1_reg_2406_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_2_reg_2412_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_4_reg_2418_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_5_reg_2424_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_reg_2430 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_3_reg_2435_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_6_reg_2441_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input_quant_7_reg_2447_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln47_4_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_4_reg_2453 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_5_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_5_reg_2458 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_2463 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln75_fu_1400_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln75_reg_2468 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_592_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal div_i8_reg_2473 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_2_reg_2478 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_2_reg_2478_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_2_reg_2478_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_fu_1407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_1_fu_1411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_2_fu_1415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_3_fu_1419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_4_fu_1423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_5_fu_1427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_6_fu_1431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_7_fu_1435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_assign_2_reg_2533 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_assign_3_reg_2538 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_500_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_assign_4_reg_2543 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_504_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_assign_5_reg_2548 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_391_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_6_reg_2553 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_1_fu_1501_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_1_reg_2561 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_3_fu_1571_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_3_reg_2566 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_5_fu_1641_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_5_reg_2571 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2576 : STD_LOGIC_VECTOR (0 downto 0);
    signal scaled_10_reg_2581 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_7_fu_1709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_7_reg_2589 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_9_fu_1778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_9_reg_2594 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_11_fu_1847_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_11_reg_2599 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_13_fu_1916_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_13_reg_2604 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_15_fu_1986_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaled_15_reg_2609 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_reg_2614 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_1_reg_2620 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_2_reg_2626 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_3_reg_2632 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_4_reg_2638 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_5_reg_2644 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_6_reg_2650 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_quantized_7_reg_2656 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_460_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i_reg_2662 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_124_i_reg_2667 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_124_i_reg_2667_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_470_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_i_reg_2672 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_i_reg_2677 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_110_i_reg_2682 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_110_i_reg_2682_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_i_reg_2687 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_i_reg_2692 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_i_reg_2692_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_i_reg_2692_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_1_i_reg_2697 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_2_i_reg_2702 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_2_i_reg_2702_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_2_i_reg_2702_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_i_reg_2707 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_i_reg_2707_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_i_reg_2707_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_1_i_reg_2712 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_2_i_reg_2717 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_2_i_reg_2717_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_2_i_reg_2717_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_i_reg_2722 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_i_reg_2727 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_i_reg_2727_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_i_reg_2727_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_120_i_reg_2732 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_3_i_reg_2737 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_3_i_reg_2737_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_119_3_i_reg_2737_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_i_reg_2742 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_3_i_reg_2747 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_3_i_reg_2747_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_3_i_reg_2747_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_1_i_reg_2752 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_3_i_reg_2757 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_3_i_reg_2757_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_3_i_reg_2757_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_125_i_reg_2762 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_120_1_i_reg_2767 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_111_i_reg_2772 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_1_1_i_reg_2777 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_2_i_reg_2782 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_120_2_i_reg_2787 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_2_i_reg_2792 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_1_2_i_reg_2797 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_3_i_reg_2802 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_120_3_i_reg_2807 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_3_i_reg_2812 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_1_1_3_i_reg_2817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_find_max_abs_fu_338_arr_0_val : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_find_max_abs_fu_338_arr_1_val : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_find_max_abs_fu_338_arr_2_val : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_find_max_abs_fu_338_arr_3_val : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_find_max_abs_fu_338_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage1_11001_ignoreCallOp110 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp131 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp144 : BOOLEAN;
    signal grp_generic_round_float_s_fu_346_ap_start : STD_LOGIC;
    signal grp_generic_round_float_s_fu_346_ap_done : STD_LOGIC;
    signal grp_generic_round_float_s_fu_346_ap_idle : STD_LOGIC;
    signal grp_generic_round_float_s_fu_346_ap_ready : STD_LOGIC;
    signal grp_generic_round_float_s_fu_346_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_346_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_355_ap_start : STD_LOGIC;
    signal grp_generic_round_float_s_fu_355_ap_done : STD_LOGIC;
    signal grp_generic_round_float_s_fu_355_ap_idle : STD_LOGIC;
    signal grp_generic_round_float_s_fu_355_ap_ready : STD_LOGIC;
    signal grp_generic_round_float_s_fu_355_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_355_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_364_ap_start : STD_LOGIC;
    signal grp_generic_round_float_s_fu_364_ap_done : STD_LOGIC;
    signal grp_generic_round_float_s_fu_364_ap_idle : STD_LOGIC;
    signal grp_generic_round_float_s_fu_364_ap_ready : STD_LOGIC;
    signal grp_generic_round_float_s_fu_364_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_373_ap_start : STD_LOGIC;
    signal grp_generic_round_float_s_fu_373_ap_done : STD_LOGIC;
    signal grp_generic_round_float_s_fu_373_ap_idle : STD_LOGIC;
    signal grp_generic_round_float_s_fu_373_ap_ready : STD_LOGIC;
    signal grp_generic_round_float_s_fu_373_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_382_ap_start : STD_LOGIC;
    signal grp_generic_round_float_s_fu_382_ap_done : STD_LOGIC;
    signal grp_generic_round_float_s_fu_382_ap_idle : STD_LOGIC;
    signal grp_generic_round_float_s_fu_382_ap_ready : STD_LOGIC;
    signal grp_generic_round_float_s_fu_382_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_round_float_s_fu_391_ap_start : STD_LOGIC;
    signal grp_generic_round_float_s_fu_391_ap_done : STD_LOGIC;
    signal grp_generic_round_float_s_fu_391_ap_idle : STD_LOGIC;
    signal grp_generic_round_float_s_fu_391_ap_ready : STD_LOGIC;
    signal grp_generic_round_float_s_fu_391_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_fmax_float_s_fu_400_ap_ready : STD_LOGIC;
    signal grp_generic_fmax_float_s_fu_400_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_fmax_float_s_fu_406_ap_ready : STD_LOGIC;
    signal grp_generic_fmax_float_s_fu_406_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_fmax_float_s_fu_406_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_fmax_float_s_fu_412_ap_ready : STD_LOGIC;
    signal grp_generic_fmax_float_s_fu_412_x : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal grp_generic_round_float_s_fu_346_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_generic_round_float_s_fu_355_ap_start_reg : STD_LOGIC := '0';
    signal grp_generic_round_float_s_fu_364_ap_start_reg : STD_LOGIC := '0';
    signal grp_generic_round_float_s_fu_373_ap_start_reg : STD_LOGIC := '0';
    signal grp_generic_round_float_s_fu_382_ap_start_reg : STD_LOGIC := '0';
    signal grp_generic_round_float_s_fu_391_ap_start_reg : STD_LOGIC := '0';
    signal grp_fu_419_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_424_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_428_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_428_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_432_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_440_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_444_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_448_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_455_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_460_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_460_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_470_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_475_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_482_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_487_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_487_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_496_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_496_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_500_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_500_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_504_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_504_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_508_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_513_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_517_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_521_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_521_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_525_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_529_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_539_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_545_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_545_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_554_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_560_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_566_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_572_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_fu_686_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_14_fu_714_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln47_fu_726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_730_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_fu_740_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln47_1_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln47_1_fu_776_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_780_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_1_fu_790_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln47_3_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_2_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_1_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_1_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_15_fu_826_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_16_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_17_fu_850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_20_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_fu_866_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_fu_876_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_2_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_fu_904_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_21_fu_920_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_1_fu_924_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_1_fu_934_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_3_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_2_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_2_fu_962_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_18_fu_978_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_22_fu_990_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_2_fu_994_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_2_fu_1004_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_5_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_6_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_3_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_2_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_4_fu_1032_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_24_fu_1048_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_4_fu_1052_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_4_fu_1062_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_9_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_10_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_5_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_4_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_8_fu_1090_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_25_fu_1106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_5_fu_1110_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_5_fu_1120_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_11_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_12_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_6_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_5_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_10_fu_1148_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_23_fu_1164_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_3_fu_1168_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_3_fu_1178_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_7_fu_1182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_8_fu_1188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_4_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_3_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_6_fu_1206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_26_fu_1222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_6_fu_1226_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_6_fu_1236_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_13_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_14_fu_1246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_7_fu_1258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_6_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_12_fu_1264_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_27_fu_1280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fp_exp_7_fu_1283_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fp_sig_7_fu_1293_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln18_15_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_16_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_8_fu_1315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_7_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_14_fu_1321_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_19_fu_1336_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_20_fu_1348_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln47_2_fu_1360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1364_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_2_fu_1374_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln47_2_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_2_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln86_fu_1439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1443_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_fu_1453_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_1_fu_1463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_8_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_1_fu_1481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_fu_1487_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_1_fu_1509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1513_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_1_fu_1523_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_3_fu_1533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_fu_1527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_9_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_2_fu_1545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_3_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_1_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_2_fu_1557_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_2_fu_1579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1583_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_2_fu_1593_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_5_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_4_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_10_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_4_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_5_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_2_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_4_fu_1627_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_3_fu_1649_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1652_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_3_fu_1662_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_7_fu_1672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_6_fu_1666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_11_fu_1678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_6_fu_1684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_7_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_3_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_6_fu_1695_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_4_fu_1716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1720_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_4_fu_1730_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_9_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_8_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_12_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_8_fu_1752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_9_fu_1758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_4_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_8_fu_1764_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_5_fu_1786_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1789_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_5_fu_1799_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_11_fu_1809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_10_fu_1803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_13_fu_1815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_10_fu_1821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_11_fu_1827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_5_fu_1841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_10_fu_1833_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_6_fu_1854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_1858_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_6_fu_1868_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_13_fu_1878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_12_fu_1872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_14_fu_1884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_12_fu_1890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_13_fu_1896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_6_fu_1910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_12_fu_1902_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_7_fu_1924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_1928_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_7_fu_1938_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln86_15_fu_1948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_14_fu_1942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_15_fu_1954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_14_fu_1960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_15_fu_1966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_7_fu_1980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_14_fu_1972_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_539_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0_0to23 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to24 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bit_linear_find_max_abs IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        arr_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        arr_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        arr_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        arr_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component bit_linear_generic_round_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bit_linear_generic_fmax_float_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bit_linear_fptrunc_64ns_32_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bit_linear_fpext_32ns_64_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component bit_linear_ddiv_64ns_64ns_64_13_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_find_max_abs_fu_338 : component bit_linear_find_max_abs
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        arr_0_val => grp_find_max_abs_fu_338_arr_0_val,
        arr_1_val => grp_find_max_abs_fu_338_arr_1_val,
        arr_2_val => grp_find_max_abs_fu_338_arr_2_val,
        arr_3_val => grp_find_max_abs_fu_338_arr_3_val,
        ap_return => grp_find_max_abs_fu_338_ap_return,
        ap_ce => grp_find_max_abs_fu_338_ap_ce);

    grp_generic_round_float_s_fu_346 : component bit_linear_generic_round_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_round_float_s_fu_346_ap_start,
        ap_done => grp_generic_round_float_s_fu_346_ap_done,
        ap_idle => grp_generic_round_float_s_fu_346_ap_idle,
        ap_ready => grp_generic_round_float_s_fu_346_ap_ready,
        ap_ce => ap_const_logic_1,
        x => grp_generic_round_float_s_fu_346_x,
        ap_return => grp_generic_round_float_s_fu_346_ap_return);

    grp_generic_round_float_s_fu_355 : component bit_linear_generic_round_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_round_float_s_fu_355_ap_start,
        ap_done => grp_generic_round_float_s_fu_355_ap_done,
        ap_idle => grp_generic_round_float_s_fu_355_ap_idle,
        ap_ready => grp_generic_round_float_s_fu_355_ap_ready,
        ap_ce => ap_const_logic_1,
        x => grp_generic_round_float_s_fu_355_x,
        ap_return => grp_generic_round_float_s_fu_355_ap_return);

    grp_generic_round_float_s_fu_364 : component bit_linear_generic_round_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_round_float_s_fu_364_ap_start,
        ap_done => grp_generic_round_float_s_fu_364_ap_done,
        ap_idle => grp_generic_round_float_s_fu_364_ap_idle,
        ap_ready => grp_generic_round_float_s_fu_364_ap_ready,
        ap_ce => ap_const_logic_1,
        x => grp_generic_round_float_s_fu_364_x,
        ap_return => grp_generic_round_float_s_fu_364_ap_return);

    grp_generic_round_float_s_fu_373 : component bit_linear_generic_round_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_round_float_s_fu_373_ap_start,
        ap_done => grp_generic_round_float_s_fu_373_ap_done,
        ap_idle => grp_generic_round_float_s_fu_373_ap_idle,
        ap_ready => grp_generic_round_float_s_fu_373_ap_ready,
        ap_ce => ap_const_logic_1,
        x => grp_generic_round_float_s_fu_373_x,
        ap_return => grp_generic_round_float_s_fu_373_ap_return);

    grp_generic_round_float_s_fu_382 : component bit_linear_generic_round_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_round_float_s_fu_382_ap_start,
        ap_done => grp_generic_round_float_s_fu_382_ap_done,
        ap_idle => grp_generic_round_float_s_fu_382_ap_idle,
        ap_ready => grp_generic_round_float_s_fu_382_ap_ready,
        ap_ce => ap_const_logic_1,
        x => grp_generic_round_float_s_fu_382_x,
        ap_return => grp_generic_round_float_s_fu_382_ap_return);

    grp_generic_round_float_s_fu_391 : component bit_linear_generic_round_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_round_float_s_fu_391_ap_start,
        ap_done => grp_generic_round_float_s_fu_391_ap_done,
        ap_idle => grp_generic_round_float_s_fu_391_ap_idle,
        ap_ready => grp_generic_round_float_s_fu_391_ap_ready,
        ap_ce => ap_const_logic_1,
        x => grp_generic_round_float_s_fu_391_x,
        ap_return => grp_generic_round_float_s_fu_391_ap_return);

    grp_generic_fmax_float_s_fu_400 : component bit_linear_generic_fmax_float_s
    port map (
        ap_ready => grp_generic_fmax_float_s_fu_400_ap_ready,
        x => grp_generic_round_float_s_fu_346_ap_return,
        ap_return => grp_generic_fmax_float_s_fu_400_ap_return);

    grp_generic_fmax_float_s_fu_406 : component bit_linear_generic_fmax_float_s
    port map (
        ap_ready => grp_generic_fmax_float_s_fu_406_ap_ready,
        x => grp_generic_fmax_float_s_fu_406_x,
        ap_return => grp_generic_fmax_float_s_fu_406_ap_return);

    grp_generic_fmax_float_s_fu_412 : component bit_linear_generic_fmax_float_s
    port map (
        ap_ready => grp_generic_fmax_float_s_fu_412_ap_ready,
        x => grp_generic_fmax_float_s_fu_412_x,
        ap_return => grp_generic_fmax_float_s_fu_412_ap_return);

    fadd_32ns_32ns_32_3_full_dsp_1_U14 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_419_p0,
        din1 => grp_fu_419_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_419_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U15 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_424_p0,
        din1 => grp_fu_424_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_424_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U16 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_428_p0,
        din1 => grp_fu_428_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_428_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U17 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_432_p0,
        din1 => grp_fu_432_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_432_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U18 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_436_p0,
        din1 => grp_fu_436_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_436_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U19 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_440_p0,
        din1 => grp_fu_440_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_440_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U20 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_444_p0,
        din1 => grp_fu_444_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_444_p2);

    fadd_32ns_32ns_32_3_full_dsp_1_U21 : component bit_linear_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_448_p0,
        din1 => grp_fu_448_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_448_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U22 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_455_p0,
        din1 => grp_fu_455_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_455_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U23 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_460_p0,
        din1 => grp_fu_460_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_460_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U24 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_465_p0,
        din1 => grp_fu_465_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_465_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U25 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_470_p0,
        din1 => grp_fu_470_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_470_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U26 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_475_p0,
        din1 => grp_fu_475_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_475_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U27 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_482_p0,
        din1 => grp_fu_482_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_482_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U28 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_487_p0,
        din1 => grp_fu_487_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_487_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U29 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_492_p0,
        din1 => grp_fu_492_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_492_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U30 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_496_p0,
        din1 => grp_fu_496_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_496_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U31 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_500_p0,
        din1 => grp_fu_500_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_500_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U32 : component bit_linear_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_504_p0,
        din1 => grp_fu_504_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_504_p2);

    fdiv_32ns_32ns_32_7_no_dsp_1_U33 : component bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_508_p0,
        din1 => grp_fu_508_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_508_p2);

    fdiv_32ns_32ns_32_7_no_dsp_1_U34 : component bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_513_p0,
        din1 => grp_fu_513_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_513_p2);

    fdiv_32ns_32ns_32_7_no_dsp_1_U35 : component bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_517_p0,
        din1 => grp_fu_517_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_517_p2);

    fdiv_32ns_32ns_32_7_no_dsp_1_U36 : component bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_521_p0,
        din1 => grp_fu_521_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_521_p2);

    fdiv_32ns_32ns_32_7_no_dsp_1_U37 : component bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_525_p0,
        din1 => grp_fu_525_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_525_p2);

    fdiv_32ns_32ns_32_7_no_dsp_1_U38 : component bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_529_p0,
        din1 => grp_fu_529_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_529_p2);

    fptrunc_64ns_32_2_no_dsp_1_U39 : component bit_linear_fptrunc_64ns_32_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => div_i8_reg_2473,
        ce => ap_const_logic_1,
        dout => grp_fu_533_p1);

    fpext_32ns_64_1_no_dsp_1_U40 : component bit_linear_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => reg_602,
        dout => tmp_7_fu_536_p1);

    fcmp_32ns_32ns_1_2_no_dsp_0_U41 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_539_p0,
        din1 => grp_fu_539_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_539_opcode,
        dout => grp_fu_539_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U42 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_545_p0,
        din1 => grp_fu_545_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_545_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U43 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_554_p0,
        din1 => ap_const_lv32_3F800000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_554_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U44 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_560_p0,
        din1 => ap_const_lv32_BF800000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_560_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U45 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_566_p0,
        din1 => ap_const_lv32_3F800000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_566_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U46 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_572_p0,
        din1 => ap_const_lv32_BF800000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_572_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U47 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_generic_round_float_s_fu_391_ap_return,
        din1 => ap_const_lv32_3F800000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_578_p2);

    ddiv_64ns_64ns_64_13_no_dsp_1_U48 : component bit_linear_ddiv_64ns_64ns_64_13_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_3FF0000000000000,
        din1 => select_ln75_reg_2468,
        ce => ap_const_logic_1,
        dout => grp_fu_592_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_round_float_s_fu_346_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_round_float_s_fu_346_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_generic_round_float_s_fu_346_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_round_float_s_fu_346_ap_ready = ap_const_logic_1)) then 
                    grp_generic_round_float_s_fu_346_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_round_float_s_fu_355_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_round_float_s_fu_355_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_generic_round_float_s_fu_355_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_round_float_s_fu_355_ap_ready = ap_const_logic_1)) then 
                    grp_generic_round_float_s_fu_355_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_round_float_s_fu_364_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_round_float_s_fu_364_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
                    grp_generic_round_float_s_fu_364_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_round_float_s_fu_364_ap_ready = ap_const_logic_1)) then 
                    grp_generic_round_float_s_fu_364_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_round_float_s_fu_373_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_round_float_s_fu_373_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
                    grp_generic_round_float_s_fu_373_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_round_float_s_fu_373_ap_ready = ap_const_logic_1)) then 
                    grp_generic_round_float_s_fu_373_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_round_float_s_fu_382_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_round_float_s_fu_382_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_generic_round_float_s_fu_382_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_round_float_s_fu_382_ap_ready = ap_const_logic_1)) then 
                    grp_generic_round_float_s_fu_382_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_round_float_s_fu_391_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_round_float_s_fu_391_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_generic_round_float_s_fu_391_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_round_float_s_fu_391_ap_ready = ap_const_logic_1)) then 
                    grp_generic_round_float_s_fu_391_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_120_1_i_reg_2767 <= grp_fu_440_p2;
                add_125_i_reg_2762 <= grp_fu_436_p2;
                add_1_111_i_reg_2772 <= grp_fu_444_p2;
                add_1_1_1_i_reg_2777 <= grp_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_120_2_i_reg_2787 <= grp_fu_424_p2;
                add_1_1_2_i_reg_2797 <= grp_fu_432_p2;
                add_1_2_i_reg_2792 <= grp_fu_428_p2;
                add_2_i_reg_2782 <= grp_fu_419_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_120_3_i_reg_2807 <= grp_fu_440_p2;
                add_1_1_3_i_reg_2817 <= grp_fu_448_p2;
                add_1_3_i_reg_2812 <= grp_fu_444_p2;
                add_3_i_reg_2802 <= grp_fu_436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_120_i_reg_2732 <= grp_fu_424_p2;
                add_1_1_i_reg_2752 <= grp_fu_432_p2;
                add_1_i_reg_2742 <= grp_fu_428_p2;
                add_i_reg_2722 <= grp_fu_419_p2;
                mul_119_3_i_reg_2737 <= grp_fu_496_p2;
                mul_1_1_3_i_reg_2757 <= grp_fu_504_p2;
                mul_1_3_i_reg_2747 <= grp_fu_500_p2;
                mul_3_i_reg_2727 <= grp_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                data_13_reg_2124 <= weight_1_q1;
                data_14_reg_2134 <= weight_0_q0;
                data_15_reg_2144 <= weight_1_q0;
                data_reg_2114 <= weight_0_q1;
                input_0_load_1_reg_2076 <= input_0_q0;
                input_1_load_1_reg_2087 <= input_1_q0;
                input_2_load_1_reg_2098 <= input_2_q0;
                input_3_load_1_reg_2109 <= input_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                data_13_reg_2124_pp0_iter10_reg <= data_13_reg_2124_pp0_iter9_reg;
                data_13_reg_2124_pp0_iter11_reg <= data_13_reg_2124_pp0_iter10_reg;
                data_13_reg_2124_pp0_iter12_reg <= data_13_reg_2124_pp0_iter11_reg;
                data_13_reg_2124_pp0_iter13_reg <= data_13_reg_2124_pp0_iter12_reg;
                data_13_reg_2124_pp0_iter14_reg <= data_13_reg_2124_pp0_iter13_reg;
                data_13_reg_2124_pp0_iter1_reg <= data_13_reg_2124;
                data_13_reg_2124_pp0_iter2_reg <= data_13_reg_2124_pp0_iter1_reg;
                data_13_reg_2124_pp0_iter3_reg <= data_13_reg_2124_pp0_iter2_reg;
                data_13_reg_2124_pp0_iter4_reg <= data_13_reg_2124_pp0_iter3_reg;
                data_13_reg_2124_pp0_iter5_reg <= data_13_reg_2124_pp0_iter4_reg;
                data_13_reg_2124_pp0_iter6_reg <= data_13_reg_2124_pp0_iter5_reg;
                data_13_reg_2124_pp0_iter7_reg <= data_13_reg_2124_pp0_iter6_reg;
                data_13_reg_2124_pp0_iter8_reg <= data_13_reg_2124_pp0_iter7_reg;
                data_13_reg_2124_pp0_iter9_reg <= data_13_reg_2124_pp0_iter8_reg;
                data_14_reg_2134_pp0_iter10_reg <= data_14_reg_2134_pp0_iter9_reg;
                data_14_reg_2134_pp0_iter11_reg <= data_14_reg_2134_pp0_iter10_reg;
                data_14_reg_2134_pp0_iter12_reg <= data_14_reg_2134_pp0_iter11_reg;
                data_14_reg_2134_pp0_iter13_reg <= data_14_reg_2134_pp0_iter12_reg;
                data_14_reg_2134_pp0_iter14_reg <= data_14_reg_2134_pp0_iter13_reg;
                data_14_reg_2134_pp0_iter1_reg <= data_14_reg_2134;
                data_14_reg_2134_pp0_iter2_reg <= data_14_reg_2134_pp0_iter1_reg;
                data_14_reg_2134_pp0_iter3_reg <= data_14_reg_2134_pp0_iter2_reg;
                data_14_reg_2134_pp0_iter4_reg <= data_14_reg_2134_pp0_iter3_reg;
                data_14_reg_2134_pp0_iter5_reg <= data_14_reg_2134_pp0_iter4_reg;
                data_14_reg_2134_pp0_iter6_reg <= data_14_reg_2134_pp0_iter5_reg;
                data_14_reg_2134_pp0_iter7_reg <= data_14_reg_2134_pp0_iter6_reg;
                data_14_reg_2134_pp0_iter8_reg <= data_14_reg_2134_pp0_iter7_reg;
                data_14_reg_2134_pp0_iter9_reg <= data_14_reg_2134_pp0_iter8_reg;
                data_15_reg_2144_pp0_iter10_reg <= data_15_reg_2144_pp0_iter9_reg;
                data_15_reg_2144_pp0_iter11_reg <= data_15_reg_2144_pp0_iter10_reg;
                data_15_reg_2144_pp0_iter12_reg <= data_15_reg_2144_pp0_iter11_reg;
                data_15_reg_2144_pp0_iter13_reg <= data_15_reg_2144_pp0_iter12_reg;
                data_15_reg_2144_pp0_iter14_reg <= data_15_reg_2144_pp0_iter13_reg;
                data_15_reg_2144_pp0_iter1_reg <= data_15_reg_2144;
                data_15_reg_2144_pp0_iter2_reg <= data_15_reg_2144_pp0_iter1_reg;
                data_15_reg_2144_pp0_iter3_reg <= data_15_reg_2144_pp0_iter2_reg;
                data_15_reg_2144_pp0_iter4_reg <= data_15_reg_2144_pp0_iter3_reg;
                data_15_reg_2144_pp0_iter5_reg <= data_15_reg_2144_pp0_iter4_reg;
                data_15_reg_2144_pp0_iter6_reg <= data_15_reg_2144_pp0_iter5_reg;
                data_15_reg_2144_pp0_iter7_reg <= data_15_reg_2144_pp0_iter6_reg;
                data_15_reg_2144_pp0_iter8_reg <= data_15_reg_2144_pp0_iter7_reg;
                data_15_reg_2144_pp0_iter9_reg <= data_15_reg_2144_pp0_iter8_reg;
                data_reg_2114_pp0_iter10_reg <= data_reg_2114_pp0_iter9_reg;
                data_reg_2114_pp0_iter11_reg <= data_reg_2114_pp0_iter10_reg;
                data_reg_2114_pp0_iter12_reg <= data_reg_2114_pp0_iter11_reg;
                data_reg_2114_pp0_iter13_reg <= data_reg_2114_pp0_iter12_reg;
                data_reg_2114_pp0_iter14_reg <= data_reg_2114_pp0_iter13_reg;
                data_reg_2114_pp0_iter1_reg <= data_reg_2114;
                data_reg_2114_pp0_iter2_reg <= data_reg_2114_pp0_iter1_reg;
                data_reg_2114_pp0_iter3_reg <= data_reg_2114_pp0_iter2_reg;
                data_reg_2114_pp0_iter4_reg <= data_reg_2114_pp0_iter3_reg;
                data_reg_2114_pp0_iter5_reg <= data_reg_2114_pp0_iter4_reg;
                data_reg_2114_pp0_iter6_reg <= data_reg_2114_pp0_iter5_reg;
                data_reg_2114_pp0_iter7_reg <= data_reg_2114_pp0_iter6_reg;
                data_reg_2114_pp0_iter8_reg <= data_reg_2114_pp0_iter7_reg;
                data_reg_2114_pp0_iter9_reg <= data_reg_2114_pp0_iter8_reg;
                empty_11_reg_2103 <= empty_11_fu_649_p1;
                empty_11_reg_2103_pp0_iter1_reg <= empty_11_reg_2103;
                empty_11_reg_2103_pp0_iter2_reg <= empty_11_reg_2103_pp0_iter1_reg;
                empty_11_reg_2103_pp0_iter3_reg <= empty_11_reg_2103_pp0_iter2_reg;
                empty_11_reg_2103_pp0_iter4_reg <= empty_11_reg_2103_pp0_iter3_reg;
                empty_7_reg_2081 <= empty_7_fu_639_p1;
                empty_7_reg_2081_pp0_iter1_reg <= empty_7_reg_2081;
                empty_7_reg_2081_pp0_iter2_reg <= empty_7_reg_2081_pp0_iter1_reg;
                empty_7_reg_2081_pp0_iter3_reg <= empty_7_reg_2081_pp0_iter2_reg;
                empty_7_reg_2081_pp0_iter4_reg <= empty_7_reg_2081_pp0_iter3_reg;
                empty_9_reg_2092 <= empty_9_fu_644_p1;
                empty_9_reg_2092_pp0_iter1_reg <= empty_9_reg_2092;
                empty_9_reg_2092_pp0_iter2_reg <= empty_9_reg_2092_pp0_iter1_reg;
                empty_9_reg_2092_pp0_iter3_reg <= empty_9_reg_2092_pp0_iter2_reg;
                empty_9_reg_2092_pp0_iter4_reg <= empty_9_reg_2092_pp0_iter3_reg;
                empty_reg_2070 <= empty_fu_634_p1;
                empty_reg_2070_pp0_iter1_reg <= empty_reg_2070;
                empty_reg_2070_pp0_iter2_reg <= empty_reg_2070_pp0_iter1_reg;
                empty_reg_2070_pp0_iter3_reg <= empty_reg_2070_pp0_iter2_reg;
                empty_reg_2070_pp0_iter4_reg <= empty_reg_2070_pp0_iter3_reg;
                icmp_ln47_4_reg_2453 <= icmp_ln47_4_fu_1378_p2;
                icmp_ln47_5_reg_2458 <= icmp_ln47_5_fu_1384_p2;
                input_quant_2_reg_2412_pp0_iter10_reg <= input_quant_2_reg_2412_pp0_iter9_reg;
                input_quant_2_reg_2412_pp0_iter11_reg <= input_quant_2_reg_2412_pp0_iter10_reg;
                input_quant_2_reg_2412_pp0_iter12_reg <= input_quant_2_reg_2412_pp0_iter11_reg;
                input_quant_2_reg_2412_pp0_iter13_reg <= input_quant_2_reg_2412_pp0_iter12_reg;
                input_quant_2_reg_2412_pp0_iter14_reg <= input_quant_2_reg_2412_pp0_iter13_reg;
                input_quant_2_reg_2412_pp0_iter15_reg <= input_quant_2_reg_2412_pp0_iter14_reg;
                input_quant_2_reg_2412_pp0_iter16_reg <= input_quant_2_reg_2412_pp0_iter15_reg;
                input_quant_2_reg_2412_pp0_iter17_reg <= input_quant_2_reg_2412_pp0_iter16_reg;
                input_quant_2_reg_2412_pp0_iter18_reg <= input_quant_2_reg_2412_pp0_iter17_reg;
                input_quant_2_reg_2412_pp0_iter9_reg <= input_quant_2_reg_2412;
                input_quant_4_reg_2418_pp0_iter10_reg <= input_quant_4_reg_2418_pp0_iter9_reg;
                input_quant_4_reg_2418_pp0_iter11_reg <= input_quant_4_reg_2418_pp0_iter10_reg;
                input_quant_4_reg_2418_pp0_iter12_reg <= input_quant_4_reg_2418_pp0_iter11_reg;
                input_quant_4_reg_2418_pp0_iter13_reg <= input_quant_4_reg_2418_pp0_iter12_reg;
                input_quant_4_reg_2418_pp0_iter14_reg <= input_quant_4_reg_2418_pp0_iter13_reg;
                input_quant_4_reg_2418_pp0_iter15_reg <= input_quant_4_reg_2418_pp0_iter14_reg;
                input_quant_4_reg_2418_pp0_iter16_reg <= input_quant_4_reg_2418_pp0_iter15_reg;
                input_quant_4_reg_2418_pp0_iter17_reg <= input_quant_4_reg_2418_pp0_iter16_reg;
                input_quant_4_reg_2418_pp0_iter18_reg <= input_quant_4_reg_2418_pp0_iter17_reg;
                input_quant_4_reg_2418_pp0_iter9_reg <= input_quant_4_reg_2418;
                input_quant_5_reg_2424_pp0_iter10_reg <= input_quant_5_reg_2424_pp0_iter9_reg;
                input_quant_5_reg_2424_pp0_iter11_reg <= input_quant_5_reg_2424_pp0_iter10_reg;
                input_quant_5_reg_2424_pp0_iter12_reg <= input_quant_5_reg_2424_pp0_iter11_reg;
                input_quant_5_reg_2424_pp0_iter13_reg <= input_quant_5_reg_2424_pp0_iter12_reg;
                input_quant_5_reg_2424_pp0_iter14_reg <= input_quant_5_reg_2424_pp0_iter13_reg;
                input_quant_5_reg_2424_pp0_iter15_reg <= input_quant_5_reg_2424_pp0_iter14_reg;
                input_quant_5_reg_2424_pp0_iter16_reg <= input_quant_5_reg_2424_pp0_iter15_reg;
                input_quant_5_reg_2424_pp0_iter17_reg <= input_quant_5_reg_2424_pp0_iter16_reg;
                input_quant_5_reg_2424_pp0_iter18_reg <= input_quant_5_reg_2424_pp0_iter17_reg;
                input_quant_5_reg_2424_pp0_iter9_reg <= input_quant_5_reg_2424;
                res_19_reg_2359 <= res_19_fu_1214_p3;
                res_22_reg_2364 <= res_22_fu_1272_p3;
                scaled_11_reg_2599 <= scaled_11_fu_1847_p3;
                scaled_7_reg_2589 <= scaled_7_fu_1709_p3;
                scaled_9_reg_2594 <= scaled_9_fu_1778_p3;
                select_ln47_reg_2253 <= select_ln47_fu_768_p3;
                tmp_7_reg_2463 <= tmp_7_fu_536_p1;
                trunc_ln313_4_reg_2129 <= trunc_ln313_4_fu_658_p1;
                trunc_ln313_4_reg_2129_pp0_iter1_reg <= trunc_ln313_4_reg_2129;
                trunc_ln313_5_reg_2139 <= trunc_ln313_5_fu_662_p1;
                trunc_ln313_5_reg_2139_pp0_iter1_reg <= trunc_ln313_5_reg_2139;
                trunc_ln313_5_reg_2139_pp0_iter2_reg <= trunc_ln313_5_reg_2139_pp0_iter1_reg;
                trunc_ln313_6_reg_2149 <= trunc_ln313_6_fu_666_p1;
                trunc_ln313_6_reg_2149_pp0_iter1_reg <= trunc_ln313_6_reg_2149;
                trunc_ln313_6_reg_2149_pp0_iter2_reg <= trunc_ln313_6_reg_2149_pp0_iter1_reg;
                trunc_ln313_6_reg_2149_pp0_iter3_reg <= trunc_ln313_6_reg_2149_pp0_iter2_reg;
                trunc_ln313_reg_2119 <= trunc_ln313_fu_654_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                data_16_reg_2203 <= weight_0_q1;
                data_17_reg_2213 <= weight_1_q1;
                data_18_reg_2223 <= weight_0_q0;
                data_19_reg_2233 <= weight_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                data_16_reg_2203_pp0_iter10_reg <= data_16_reg_2203_pp0_iter9_reg;
                data_16_reg_2203_pp0_iter11_reg <= data_16_reg_2203_pp0_iter10_reg;
                data_16_reg_2203_pp0_iter12_reg <= data_16_reg_2203_pp0_iter11_reg;
                data_16_reg_2203_pp0_iter13_reg <= data_16_reg_2203_pp0_iter12_reg;
                data_16_reg_2203_pp0_iter14_reg <= data_16_reg_2203_pp0_iter13_reg;
                data_16_reg_2203_pp0_iter1_reg <= data_16_reg_2203;
                data_16_reg_2203_pp0_iter2_reg <= data_16_reg_2203_pp0_iter1_reg;
                data_16_reg_2203_pp0_iter3_reg <= data_16_reg_2203_pp0_iter2_reg;
                data_16_reg_2203_pp0_iter4_reg <= data_16_reg_2203_pp0_iter3_reg;
                data_16_reg_2203_pp0_iter5_reg <= data_16_reg_2203_pp0_iter4_reg;
                data_16_reg_2203_pp0_iter6_reg <= data_16_reg_2203_pp0_iter5_reg;
                data_16_reg_2203_pp0_iter7_reg <= data_16_reg_2203_pp0_iter6_reg;
                data_16_reg_2203_pp0_iter8_reg <= data_16_reg_2203_pp0_iter7_reg;
                data_16_reg_2203_pp0_iter9_reg <= data_16_reg_2203_pp0_iter8_reg;
                data_17_reg_2213_pp0_iter10_reg <= data_17_reg_2213_pp0_iter9_reg;
                data_17_reg_2213_pp0_iter11_reg <= data_17_reg_2213_pp0_iter10_reg;
                data_17_reg_2213_pp0_iter12_reg <= data_17_reg_2213_pp0_iter11_reg;
                data_17_reg_2213_pp0_iter13_reg <= data_17_reg_2213_pp0_iter12_reg;
                data_17_reg_2213_pp0_iter14_reg <= data_17_reg_2213_pp0_iter13_reg;
                data_17_reg_2213_pp0_iter1_reg <= data_17_reg_2213;
                data_17_reg_2213_pp0_iter2_reg <= data_17_reg_2213_pp0_iter1_reg;
                data_17_reg_2213_pp0_iter3_reg <= data_17_reg_2213_pp0_iter2_reg;
                data_17_reg_2213_pp0_iter4_reg <= data_17_reg_2213_pp0_iter3_reg;
                data_17_reg_2213_pp0_iter5_reg <= data_17_reg_2213_pp0_iter4_reg;
                data_17_reg_2213_pp0_iter6_reg <= data_17_reg_2213_pp0_iter5_reg;
                data_17_reg_2213_pp0_iter7_reg <= data_17_reg_2213_pp0_iter6_reg;
                data_17_reg_2213_pp0_iter8_reg <= data_17_reg_2213_pp0_iter7_reg;
                data_17_reg_2213_pp0_iter9_reg <= data_17_reg_2213_pp0_iter8_reg;
                data_18_reg_2223_pp0_iter10_reg <= data_18_reg_2223_pp0_iter9_reg;
                data_18_reg_2223_pp0_iter11_reg <= data_18_reg_2223_pp0_iter10_reg;
                data_18_reg_2223_pp0_iter12_reg <= data_18_reg_2223_pp0_iter11_reg;
                data_18_reg_2223_pp0_iter13_reg <= data_18_reg_2223_pp0_iter12_reg;
                data_18_reg_2223_pp0_iter14_reg <= data_18_reg_2223_pp0_iter13_reg;
                data_18_reg_2223_pp0_iter1_reg <= data_18_reg_2223;
                data_18_reg_2223_pp0_iter2_reg <= data_18_reg_2223_pp0_iter1_reg;
                data_18_reg_2223_pp0_iter3_reg <= data_18_reg_2223_pp0_iter2_reg;
                data_18_reg_2223_pp0_iter4_reg <= data_18_reg_2223_pp0_iter3_reg;
                data_18_reg_2223_pp0_iter5_reg <= data_18_reg_2223_pp0_iter4_reg;
                data_18_reg_2223_pp0_iter6_reg <= data_18_reg_2223_pp0_iter5_reg;
                data_18_reg_2223_pp0_iter7_reg <= data_18_reg_2223_pp0_iter6_reg;
                data_18_reg_2223_pp0_iter8_reg <= data_18_reg_2223_pp0_iter7_reg;
                data_18_reg_2223_pp0_iter9_reg <= data_18_reg_2223_pp0_iter8_reg;
                data_19_reg_2233_pp0_iter10_reg <= data_19_reg_2233_pp0_iter9_reg;
                data_19_reg_2233_pp0_iter11_reg <= data_19_reg_2233_pp0_iter10_reg;
                data_19_reg_2233_pp0_iter12_reg <= data_19_reg_2233_pp0_iter11_reg;
                data_19_reg_2233_pp0_iter13_reg <= data_19_reg_2233_pp0_iter12_reg;
                data_19_reg_2233_pp0_iter14_reg <= data_19_reg_2233_pp0_iter13_reg;
                data_19_reg_2233_pp0_iter1_reg <= data_19_reg_2233;
                data_19_reg_2233_pp0_iter2_reg <= data_19_reg_2233_pp0_iter1_reg;
                data_19_reg_2233_pp0_iter3_reg <= data_19_reg_2233_pp0_iter2_reg;
                data_19_reg_2233_pp0_iter4_reg <= data_19_reg_2233_pp0_iter3_reg;
                data_19_reg_2233_pp0_iter5_reg <= data_19_reg_2233_pp0_iter4_reg;
                data_19_reg_2233_pp0_iter6_reg <= data_19_reg_2233_pp0_iter5_reg;
                data_19_reg_2233_pp0_iter7_reg <= data_19_reg_2233_pp0_iter6_reg;
                data_19_reg_2233_pp0_iter8_reg <= data_19_reg_2233_pp0_iter7_reg;
                data_19_reg_2233_pp0_iter9_reg <= data_19_reg_2233_pp0_iter8_reg;
                empty_10_reg_2186 <= empty_10_fu_678_p1;
                empty_10_reg_2186_pp0_iter1_reg <= empty_10_reg_2186;
                empty_10_reg_2186_pp0_iter2_reg <= empty_10_reg_2186_pp0_iter1_reg;
                empty_10_reg_2186_pp0_iter3_reg <= empty_10_reg_2186_pp0_iter2_reg;
                empty_10_reg_2186_pp0_iter4_reg <= empty_10_reg_2186_pp0_iter3_reg;
                empty_12_reg_2192 <= empty_12_fu_682_p1;
                empty_12_reg_2192_pp0_iter1_reg <= empty_12_reg_2192;
                empty_12_reg_2192_pp0_iter2_reg <= empty_12_reg_2192_pp0_iter1_reg;
                empty_12_reg_2192_pp0_iter3_reg <= empty_12_reg_2192_pp0_iter2_reg;
                empty_12_reg_2192_pp0_iter4_reg <= empty_12_reg_2192_pp0_iter3_reg;
                empty_6_reg_2174 <= empty_6_fu_670_p1;
                empty_6_reg_2174_pp0_iter1_reg <= empty_6_reg_2174;
                empty_6_reg_2174_pp0_iter2_reg <= empty_6_reg_2174_pp0_iter1_reg;
                empty_6_reg_2174_pp0_iter3_reg <= empty_6_reg_2174_pp0_iter2_reg;
                empty_6_reg_2174_pp0_iter4_reg <= empty_6_reg_2174_pp0_iter3_reg;
                empty_8_reg_2180 <= empty_8_fu_674_p1;
                empty_8_reg_2180_pp0_iter1_reg <= empty_8_reg_2180;
                empty_8_reg_2180_pp0_iter2_reg <= empty_8_reg_2180_pp0_iter1_reg;
                empty_8_reg_2180_pp0_iter3_reg <= empty_8_reg_2180_pp0_iter2_reg;
                empty_8_reg_2180_pp0_iter4_reg <= empty_8_reg_2180_pp0_iter3_reg;
                input_quant_3_reg_2435_pp0_iter10_reg <= input_quant_3_reg_2435_pp0_iter9_reg;
                input_quant_3_reg_2435_pp0_iter11_reg <= input_quant_3_reg_2435_pp0_iter10_reg;
                input_quant_3_reg_2435_pp0_iter12_reg <= input_quant_3_reg_2435_pp0_iter11_reg;
                input_quant_3_reg_2435_pp0_iter13_reg <= input_quant_3_reg_2435_pp0_iter12_reg;
                input_quant_3_reg_2435_pp0_iter14_reg <= input_quant_3_reg_2435_pp0_iter13_reg;
                input_quant_3_reg_2435_pp0_iter15_reg <= input_quant_3_reg_2435_pp0_iter14_reg;
                input_quant_3_reg_2435_pp0_iter16_reg <= input_quant_3_reg_2435_pp0_iter15_reg;
                input_quant_3_reg_2435_pp0_iter17_reg <= input_quant_3_reg_2435_pp0_iter16_reg;
                input_quant_3_reg_2435_pp0_iter18_reg <= input_quant_3_reg_2435_pp0_iter17_reg;
                input_quant_3_reg_2435_pp0_iter9_reg <= input_quant_3_reg_2435;
                input_quant_6_reg_2441_pp0_iter10_reg <= input_quant_6_reg_2441_pp0_iter9_reg;
                input_quant_6_reg_2441_pp0_iter11_reg <= input_quant_6_reg_2441_pp0_iter10_reg;
                input_quant_6_reg_2441_pp0_iter12_reg <= input_quant_6_reg_2441_pp0_iter11_reg;
                input_quant_6_reg_2441_pp0_iter13_reg <= input_quant_6_reg_2441_pp0_iter12_reg;
                input_quant_6_reg_2441_pp0_iter14_reg <= input_quant_6_reg_2441_pp0_iter13_reg;
                input_quant_6_reg_2441_pp0_iter15_reg <= input_quant_6_reg_2441_pp0_iter14_reg;
                input_quant_6_reg_2441_pp0_iter16_reg <= input_quant_6_reg_2441_pp0_iter15_reg;
                input_quant_6_reg_2441_pp0_iter17_reg <= input_quant_6_reg_2441_pp0_iter16_reg;
                input_quant_6_reg_2441_pp0_iter18_reg <= input_quant_6_reg_2441_pp0_iter17_reg;
                input_quant_6_reg_2441_pp0_iter9_reg <= input_quant_6_reg_2441;
                mul_119_2_i_reg_2702_pp0_iter20_reg <= mul_119_2_i_reg_2702;
                mul_119_2_i_reg_2702_pp0_iter21_reg <= mul_119_2_i_reg_2702_pp0_iter20_reg;
                mul_1_1_2_i_reg_2717_pp0_iter20_reg <= mul_1_1_2_i_reg_2717;
                mul_1_1_2_i_reg_2717_pp0_iter21_reg <= mul_1_1_2_i_reg_2717_pp0_iter20_reg;
                mul_1_2_i_reg_2707_pp0_iter20_reg <= mul_1_2_i_reg_2707;
                mul_1_2_i_reg_2707_pp0_iter21_reg <= mul_1_2_i_reg_2707_pp0_iter20_reg;
                mul_2_i_reg_2692_pp0_iter20_reg <= mul_2_i_reg_2692;
                mul_2_i_reg_2692_pp0_iter21_reg <= mul_2_i_reg_2692_pp0_iter20_reg;
                res_16_reg_2324 <= res_16_fu_912_p3;
                res_17_reg_2329 <= res_17_fu_970_p3;
                res_23_reg_2380 <= res_23_fu_1328_p3;
                scale_2_reg_2478 <= grp_fu_533_p1;
                scale_2_reg_2478_pp0_iter15_reg <= scale_2_reg_2478;
                scale_2_reg_2478_pp0_iter16_reg <= scale_2_reg_2478_pp0_iter15_reg;
                scale_reg_2288_pp0_iter5_reg <= scale_reg_2288;
                scaled_13_reg_2604 <= scaled_13_fu_1916_p3;
                scaled_15_reg_2609 <= scaled_15_fu_1986_p3;
                select_ln47_1_reg_2263 <= select_ln47_1_fu_818_p3;
                select_ln75_reg_2468 <= select_ln75_fu_1400_p3;
                trunc_ln313_10_reg_2238 <= trunc_ln313_10_fu_710_p1;
                trunc_ln313_10_reg_2238_pp0_iter1_reg <= trunc_ln313_10_reg_2238;
                trunc_ln313_10_reg_2238_pp0_iter2_reg <= trunc_ln313_10_reg_2238_pp0_iter1_reg;
                trunc_ln313_10_reg_2238_pp0_iter3_reg <= trunc_ln313_10_reg_2238_pp0_iter2_reg;
                trunc_ln313_10_reg_2238_pp0_iter4_reg <= trunc_ln313_10_reg_2238_pp0_iter3_reg;
                trunc_ln313_10_reg_2238_pp0_iter5_reg <= trunc_ln313_10_reg_2238_pp0_iter4_reg;
                trunc_ln313_10_reg_2238_pp0_iter6_reg <= trunc_ln313_10_reg_2238_pp0_iter5_reg;
                trunc_ln313_7_reg_2208 <= trunc_ln313_7_fu_698_p1;
                trunc_ln313_7_reg_2208_pp0_iter1_reg <= trunc_ln313_7_reg_2208;
                trunc_ln313_7_reg_2208_pp0_iter2_reg <= trunc_ln313_7_reg_2208_pp0_iter1_reg;
                trunc_ln313_7_reg_2208_pp0_iter3_reg <= trunc_ln313_7_reg_2208_pp0_iter2_reg;
                trunc_ln313_8_reg_2218 <= trunc_ln313_8_fu_702_p1;
                trunc_ln313_8_reg_2218_pp0_iter1_reg <= trunc_ln313_8_reg_2218;
                trunc_ln313_8_reg_2218_pp0_iter2_reg <= trunc_ln313_8_reg_2218_pp0_iter1_reg;
                trunc_ln313_8_reg_2218_pp0_iter3_reg <= trunc_ln313_8_reg_2218_pp0_iter2_reg;
                trunc_ln313_8_reg_2218_pp0_iter4_reg <= trunc_ln313_8_reg_2218_pp0_iter3_reg;
                trunc_ln313_9_reg_2228 <= trunc_ln313_9_fu_706_p1;
                trunc_ln313_9_reg_2228_pp0_iter1_reg <= trunc_ln313_9_reg_2228;
                trunc_ln313_9_reg_2228_pp0_iter2_reg <= trunc_ln313_9_reg_2228_pp0_iter1_reg;
                trunc_ln313_9_reg_2228_pp0_iter3_reg <= trunc_ln313_9_reg_2228_pp0_iter2_reg;
                trunc_ln313_9_reg_2228_pp0_iter4_reg <= trunc_ln313_9_reg_2228_pp0_iter3_reg;
                trunc_ln313_9_reg_2228_pp0_iter5_reg <= trunc_ln313_9_reg_2228_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                div_i8_reg_2473 <= grp_fu_592_p2;
                input_quant_1_reg_2406_pp0_iter10_reg <= input_quant_1_reg_2406_pp0_iter9_reg;
                input_quant_1_reg_2406_pp0_iter11_reg <= input_quant_1_reg_2406_pp0_iter10_reg;
                input_quant_1_reg_2406_pp0_iter12_reg <= input_quant_1_reg_2406_pp0_iter11_reg;
                input_quant_1_reg_2406_pp0_iter13_reg <= input_quant_1_reg_2406_pp0_iter12_reg;
                input_quant_1_reg_2406_pp0_iter14_reg <= input_quant_1_reg_2406_pp0_iter13_reg;
                input_quant_1_reg_2406_pp0_iter15_reg <= input_quant_1_reg_2406_pp0_iter14_reg;
                input_quant_1_reg_2406_pp0_iter16_reg <= input_quant_1_reg_2406_pp0_iter15_reg;
                input_quant_1_reg_2406_pp0_iter17_reg <= input_quant_1_reg_2406_pp0_iter16_reg;
                input_quant_1_reg_2406_pp0_iter18_reg <= input_quant_1_reg_2406_pp0_iter17_reg;
                input_quant_1_reg_2406_pp0_iter19_reg <= input_quant_1_reg_2406_pp0_iter18_reg;
                input_quant_1_reg_2406_pp0_iter9_reg <= input_quant_1_reg_2406;
                input_quant_7_reg_2447_pp0_iter10_reg <= input_quant_7_reg_2447;
                input_quant_7_reg_2447_pp0_iter11_reg <= input_quant_7_reg_2447_pp0_iter10_reg;
                input_quant_7_reg_2447_pp0_iter12_reg <= input_quant_7_reg_2447_pp0_iter11_reg;
                input_quant_7_reg_2447_pp0_iter13_reg <= input_quant_7_reg_2447_pp0_iter12_reg;
                input_quant_7_reg_2447_pp0_iter14_reg <= input_quant_7_reg_2447_pp0_iter13_reg;
                input_quant_7_reg_2447_pp0_iter15_reg <= input_quant_7_reg_2447_pp0_iter14_reg;
                input_quant_7_reg_2447_pp0_iter16_reg <= input_quant_7_reg_2447_pp0_iter15_reg;
                input_quant_7_reg_2447_pp0_iter17_reg <= input_quant_7_reg_2447_pp0_iter16_reg;
                input_quant_7_reg_2447_pp0_iter18_reg <= input_quant_7_reg_2447_pp0_iter17_reg;
                input_quant_7_reg_2447_pp0_iter19_reg <= input_quant_7_reg_2447_pp0_iter18_reg;
                input_quant_reg_2400_pp0_iter10_reg <= input_quant_reg_2400_pp0_iter9_reg;
                input_quant_reg_2400_pp0_iter11_reg <= input_quant_reg_2400_pp0_iter10_reg;
                input_quant_reg_2400_pp0_iter12_reg <= input_quant_reg_2400_pp0_iter11_reg;
                input_quant_reg_2400_pp0_iter13_reg <= input_quant_reg_2400_pp0_iter12_reg;
                input_quant_reg_2400_pp0_iter14_reg <= input_quant_reg_2400_pp0_iter13_reg;
                input_quant_reg_2400_pp0_iter15_reg <= input_quant_reg_2400_pp0_iter14_reg;
                input_quant_reg_2400_pp0_iter16_reg <= input_quant_reg_2400_pp0_iter15_reg;
                input_quant_reg_2400_pp0_iter17_reg <= input_quant_reg_2400_pp0_iter16_reg;
                input_quant_reg_2400_pp0_iter18_reg <= input_quant_reg_2400_pp0_iter17_reg;
                input_quant_reg_2400_pp0_iter9_reg <= input_quant_reg_2400;
                mul_119_3_i_reg_2737_pp0_iter21_reg <= mul_119_3_i_reg_2737;
                mul_119_3_i_reg_2737_pp0_iter22_reg <= mul_119_3_i_reg_2737_pp0_iter21_reg;
                mul_124_i_reg_2667_pp0_iter20_reg <= mul_124_i_reg_2667;
                mul_1_110_i_reg_2682_pp0_iter20_reg <= mul_1_110_i_reg_2682;
                mul_1_1_3_i_reg_2757_pp0_iter21_reg <= mul_1_1_3_i_reg_2757;
                mul_1_1_3_i_reg_2757_pp0_iter22_reg <= mul_1_1_3_i_reg_2757_pp0_iter21_reg;
                mul_1_3_i_reg_2747_pp0_iter21_reg <= mul_1_3_i_reg_2747;
                mul_1_3_i_reg_2747_pp0_iter22_reg <= mul_1_3_i_reg_2747_pp0_iter21_reg;
                mul_3_i_reg_2727_pp0_iter21_reg <= mul_3_i_reg_2727;
                mul_3_i_reg_2727_pp0_iter22_reg <= mul_3_i_reg_2727_pp0_iter21_reg;
                res_18_reg_2344 <= res_18_fu_1040_p3;
                res_20_reg_2349 <= res_20_fu_1098_p3;
                res_21_reg_2354 <= res_21_fu_1156_p3;
                scale_1_reg_2303_pp0_iter6_reg <= scale_1_reg_2303;
                scaled_1_reg_2561 <= scaled_1_fu_1501_p3;
                scaled_3_reg_2566 <= scaled_3_fu_1571_p3;
                scaled_5_reg_2571 <= scaled_5_fu_1641_p3;
                tmp_25_reg_2576 <= grp_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                input_quant_1_reg_2406 <= grp_fu_517_p2;
                input_quant_reg_2400 <= grp_fu_513_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                input_quant_2_reg_2412 <= grp_fu_508_p2;
                input_quant_4_reg_2418 <= grp_fu_513_p2;
                input_quant_5_reg_2424 <= grp_fu_517_p2;
                sum_7_reg_2430 <= grp_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                input_quant_3_reg_2435 <= grp_fu_513_p2;
                input_quant_6_reg_2441 <= grp_fu_517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                input_quant_7_reg_2447 <= grp_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_119_1_i_reg_2697 <= grp_fu_487_p2;
                mul_119_2_i_reg_2702 <= grp_fu_492_p2;
                mul_1_1_1_i_reg_2712 <= grp_fu_500_p2;
                mul_1_1_2_i_reg_2717 <= grp_fu_504_p2;
                mul_1_2_i_reg_2707 <= grp_fu_496_p2;
                mul_2_i_reg_2692 <= grp_fu_482_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_119_i_reg_2672 <= grp_fu_470_p2;
                mul_124_i_reg_2667 <= grp_fu_465_p2;
                mul_1_110_i_reg_2682 <= grp_fu_482_p2;
                mul_1_1_i_reg_2687 <= grp_fu_487_p2;
                mul_1_i_reg_2677 <= grp_fu_475_p2;
                mul_i_reg_2662 <= grp_fu_460_p2;
                weight_quantized_6_reg_2650 <= grp_fu_525_p2;
                weight_quantized_7_reg_2656 <= grp_fu_529_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                p_x_assign_2_reg_2533 <= grp_fu_492_p2;
                p_x_assign_3_reg_2538 <= grp_fu_496_p2;
                p_x_assign_4_reg_2543 <= grp_fu_500_p2;
                p_x_assign_5_reg_2548 <= grp_fu_504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_597 <= grp_find_max_abs_fu_338_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_602 <= grp_fu_455_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_609 <= grp_generic_round_float_s_fu_373_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_618 <= grp_generic_round_float_s_fu_364_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_626 <= grp_generic_round_float_s_fu_382_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                scale_1_reg_2303 <= grp_fu_508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                scale_reg_2288 <= grp_fu_508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                scaled_10_reg_2581 <= grp_generic_round_float_s_fu_391_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                scaled_6_reg_2553 <= grp_generic_round_float_s_fu_391_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                scaled_val_2_reg_2314 <= grp_fu_465_p2;
                sum_4_reg_2319 <= grp_fu_436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                scaled_val_7_reg_2334 <= grp_fu_475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sum_1_reg_2258 <= grp_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sum_2_reg_2273 <= grp_fu_428_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sum_3_reg_2283 <= grp_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sum_5_reg_2375 <= grp_fu_440_p2;
                x_assign_6_reg_2369 <= grp_generic_fmax_float_s_fu_412_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sum_6_reg_2390 <= grp_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sum_reg_2243 <= grp_fu_419_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                weight_quantized_1_reg_2620 <= grp_fu_525_p2;
                weight_quantized_2_reg_2626 <= grp_fu_529_p2;
                weight_quantized_reg_2614 <= grp_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                weight_quantized_3_reg_2632 <= grp_fu_521_p2;
                weight_quantized_4_reg_2638 <= grp_fu_525_p2;
                weight_quantized_5_reg_2644 <= grp_fu_529_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to24, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to24 = ap_const_logic_1))) and (ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    and_ln18_1_fu_950_p2 <= (icmp_ln18_4_fu_944_p2 and icmp_ln18_3_fu_938_p2);
    and_ln18_2_fu_1020_p2 <= (icmp_ln18_6_fu_1014_p2 and icmp_ln18_5_fu_1008_p2);
    and_ln18_3_fu_1194_p2 <= (icmp_ln18_8_fu_1188_p2 and icmp_ln18_7_fu_1182_p2);
    and_ln18_4_fu_1078_p2 <= (icmp_ln18_9_fu_1066_p2 and icmp_ln18_10_fu_1072_p2);
    and_ln18_5_fu_1136_p2 <= (icmp_ln18_12_fu_1130_p2 and icmp_ln18_11_fu_1124_p2);
    and_ln18_6_fu_1252_p2 <= (icmp_ln18_14_fu_1246_p2 and icmp_ln18_13_fu_1240_p2);
    and_ln18_7_fu_1309_p2 <= (icmp_ln18_16_fu_1303_p2 and icmp_ln18_15_fu_1297_p2);
    and_ln18_fu_892_p2 <= (icmp_ln18_fu_880_p2 and icmp_ln18_2_fu_886_p2);
    and_ln47_1_fu_812_p2 <= (or_ln47_1_fu_806_p2 and grp_fu_539_p2);
    and_ln47_2_fu_1394_p2 <= (or_ln47_2_fu_1390_p2 and grp_fu_545_p2);
    and_ln47_fu_762_p2 <= (or_ln47_fu_756_p2 and grp_fu_539_p2);
    and_ln86_10_fu_1821_p2 <= (or_ln86_13_fu_1815_p2 and grp_fu_566_p2);
    and_ln86_11_fu_1827_p2 <= (or_ln86_13_fu_1815_p2 and grp_fu_572_p2);
    and_ln86_12_fu_1890_p2 <= (or_ln86_14_fu_1884_p2 and grp_fu_554_p2);
    and_ln86_13_fu_1896_p2 <= (or_ln86_14_fu_1884_p2 and grp_fu_560_p2);
    and_ln86_14_fu_1960_p2 <= (or_ln86_15_fu_1954_p2 and grp_fu_566_p2);
    and_ln86_15_fu_1966_p2 <= (or_ln86_15_fu_1954_p2 and grp_fu_572_p2);
    and_ln86_1_fu_1481_p2 <= (or_ln86_8_fu_1469_p2 and grp_fu_545_p2);
    and_ln86_2_fu_1545_p2 <= (or_ln86_9_fu_1539_p2 and grp_fu_554_p2);
    and_ln86_3_fu_1551_p2 <= (or_ln86_9_fu_1539_p2 and grp_fu_560_p2);
    and_ln86_4_fu_1615_p2 <= (or_ln86_10_fu_1609_p2 and grp_fu_566_p2);
    and_ln86_5_fu_1621_p2 <= (or_ln86_10_fu_1609_p2 and grp_fu_572_p2);
    and_ln86_6_fu_1684_p2 <= (tmp_25_reg_2576 and or_ln86_11_fu_1678_p2);
    and_ln86_7_fu_1689_p2 <= (or_ln86_11_fu_1678_p2 and grp_fu_545_p2);
    and_ln86_8_fu_1752_p2 <= (or_ln86_12_fu_1746_p2 and grp_fu_554_p2);
    and_ln86_9_fu_1758_p2 <= (or_ln86_12_fu_1746_p2 and grp_fu_560_p2);
    and_ln86_fu_1475_p2 <= (or_ln86_8_fu_1469_p2 and grp_fu_539_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) 
    and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to23_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) 
    and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to23 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to24_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) 
    and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to24 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to23)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to23 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln327_1_fu_721_p1 <= t_14_fu_714_p3;
    bitcast_ln327_2_fu_833_p1 <= t_15_fu_826_p3;
    bitcast_ln327_3_fu_845_p1 <= t_16_fu_838_p3;
    bitcast_ln327_4_fu_857_p1 <= t_17_fu_850_p3;
    bitcast_ln327_5_fu_985_p1 <= t_18_fu_978_p3;
    bitcast_ln327_6_fu_1343_p1 <= t_19_fu_1336_p3;
    bitcast_ln327_7_fu_1355_p1 <= t_20_fu_1348_p3;
    bitcast_ln327_fu_693_p1 <= t_fu_686_p3;
    bitcast_ln47_1_fu_776_p1 <= reg_597;
    bitcast_ln47_2_fu_1360_p1 <= reg_602;
    bitcast_ln47_fu_726_p1 <= reg_597;
    bitcast_ln86_1_fu_1509_p1 <= reg_609;
    bitcast_ln86_2_fu_1579_p1 <= reg_626;
    bitcast_ln86_3_fu_1649_p1 <= scaled_6_reg_2553;
    bitcast_ln86_4_fu_1716_p1 <= reg_626;
    bitcast_ln86_5_fu_1786_p1 <= scaled_10_reg_2581;
    bitcast_ln86_6_fu_1854_p1 <= reg_618;
    bitcast_ln86_7_fu_1924_p1 <= reg_609;
    bitcast_ln86_fu_1439_p1 <= reg_618;
    data_20_fu_862_p1 <= grp_generic_fmax_float_s_fu_400_ap_return;
    data_21_fu_920_p1 <= grp_generic_fmax_float_s_fu_406_ap_return;
    data_22_fu_990_p1 <= grp_generic_fmax_float_s_fu_400_ap_return;
    data_23_fu_1164_p1 <= grp_generic_fmax_float_s_fu_400_ap_return;
    data_24_fu_1048_p1 <= grp_generic_fmax_float_s_fu_406_ap_return;
    data_25_fu_1106_p1 <= grp_generic_fmax_float_s_fu_412_ap_return;
    data_26_fu_1222_p1 <= grp_generic_fmax_float_s_fu_406_ap_return;
    data_27_fu_1280_p1 <= x_assign_6_reg_2369;
    dc_1_fu_1411_p1 <= data_13_reg_2124_pp0_iter14_reg;
    dc_2_fu_1415_p1 <= data_14_reg_2134_pp0_iter14_reg;
    dc_3_fu_1419_p1 <= data_15_reg_2144_pp0_iter14_reg;
    dc_4_fu_1423_p1 <= data_16_reg_2203_pp0_iter14_reg;
    dc_5_fu_1427_p1 <= data_17_reg_2213_pp0_iter14_reg;
    dc_6_fu_1431_p1 <= data_18_reg_2223_pp0_iter14_reg;
    dc_7_fu_1435_p1 <= data_19_reg_2233_pp0_iter14_reg;
    dc_fu_1407_p1 <= data_reg_2114_pp0_iter14_reg;
    empty_10_fu_678_p1 <= input_2_load_1_reg_2098;
    empty_11_fu_649_p1 <= input_3_q1;
    empty_12_fu_682_p1 <= input_3_load_1_reg_2109;
    empty_6_fu_670_p1 <= input_0_load_1_reg_2076;
    empty_7_fu_639_p1 <= input_1_q1;
    empty_8_fu_674_p1 <= input_1_load_1_reg_2087;
    empty_9_fu_644_p1 <= input_2_q1;
    empty_fu_634_p1 <= input_0_q1;

    grp_find_max_abs_fu_338_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp110, ap_block_pp0_stage2_11001_ignoreCallOp131, ap_block_pp0_stage0_11001_ignoreCallOp144)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp110)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp144)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp131)))) then 
            grp_find_max_abs_fu_338_ap_ce <= ap_const_logic_1;
        else 
            grp_find_max_abs_fu_338_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_find_max_abs_fu_338_arr_0_val_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_fu_634_p1, empty_6_fu_670_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_find_max_abs_fu_338_arr_0_val <= empty_6_fu_670_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_find_max_abs_fu_338_arr_0_val <= empty_fu_634_p1;
            else 
                grp_find_max_abs_fu_338_arr_0_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_find_max_abs_fu_338_arr_0_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_find_max_abs_fu_338_arr_1_val_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_7_fu_639_p1, empty_8_fu_674_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_find_max_abs_fu_338_arr_1_val <= empty_8_fu_674_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_find_max_abs_fu_338_arr_1_val <= empty_7_fu_639_p1;
            else 
                grp_find_max_abs_fu_338_arr_1_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_find_max_abs_fu_338_arr_1_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_find_max_abs_fu_338_arr_2_val_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_9_fu_644_p1, empty_10_fu_678_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_find_max_abs_fu_338_arr_2_val <= empty_10_fu_678_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_find_max_abs_fu_338_arr_2_val <= empty_9_fu_644_p1;
            else 
                grp_find_max_abs_fu_338_arr_2_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_find_max_abs_fu_338_arr_2_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_find_max_abs_fu_338_arr_3_val_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_11_fu_649_p1, empty_12_fu_682_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_find_max_abs_fu_338_arr_3_val <= empty_12_fu_682_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_find_max_abs_fu_338_arr_3_val <= empty_11_fu_649_p1;
            else 
                grp_find_max_abs_fu_338_arr_3_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_find_max_abs_fu_338_arr_3_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_419_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_fu_693_p1, mul_i_reg_2662, add_125_i_reg_2762, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_419_p0 <= add_125_i_reg_2762;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_419_p0 <= mul_i_reg_2662;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_419_p0 <= bitcast_ln327_fu_693_p1;
        else 
            grp_fu_419_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_419_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, mul_2_i_reg_2692_pp0_iter21_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_419_p1 <= mul_2_i_reg_2692_pp0_iter21_reg;
        elsif ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_419_p1 <= ap_const_lv32_0;
        else 
            grp_fu_419_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_424_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, sum_reg_2243, mul_119_i_reg_2672, add_120_1_i_reg_2767, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_424_p0 <= add_120_1_i_reg_2767;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_424_p0 <= mul_119_i_reg_2672;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_424_p0 <= sum_reg_2243;
        else 
            grp_fu_424_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_424_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_1_fu_721_p1, mul_119_2_i_reg_2702_pp0_iter21_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_424_p1 <= mul_119_2_i_reg_2702_pp0_iter21_reg;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_424_p1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_424_p1 <= bitcast_ln327_1_fu_721_p1;
        else 
            grp_fu_424_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_428_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, sum_1_reg_2258, mul_1_i_reg_2677, add_1_111_i_reg_2772, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_428_p0 <= add_1_111_i_reg_2772;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_428_p0 <= mul_1_i_reg_2677;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_428_p0 <= sum_1_reg_2258;
        else 
            grp_fu_428_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_428_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_2_fu_833_p1, mul_1_2_i_reg_2707_pp0_iter21_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_428_p1 <= mul_1_2_i_reg_2707_pp0_iter21_reg;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_428_p1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_428_p1 <= bitcast_ln327_2_fu_833_p1;
        else 
            grp_fu_428_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_432_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, sum_2_reg_2273, mul_1_1_i_reg_2687, add_1_1_1_i_reg_2777, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_432_p0 <= add_1_1_1_i_reg_2777;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_432_p0 <= mul_1_1_i_reg_2687;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_432_p0 <= sum_2_reg_2273;
        else 
            grp_fu_432_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_432_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter22, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_3_fu_845_p1, mul_1_1_2_i_reg_2717_pp0_iter21_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_432_p1 <= mul_1_1_2_i_reg_2717_pp0_iter21_reg;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_432_p1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_432_p1 <= bitcast_ln327_3_fu_845_p1;
        else 
            grp_fu_432_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_436_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, sum_3_reg_2283, add_i_reg_2722, add_2_i_reg_2782, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_436_p0 <= add_2_i_reg_2782;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_436_p0 <= add_i_reg_2722;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_436_p0 <= sum_3_reg_2283;
        else 
            grp_fu_436_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_436_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_4_fu_857_p1, mul_124_i_reg_2667_pp0_iter20_reg, mul_3_i_reg_2727_pp0_iter22_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_436_p1 <= mul_3_i_reg_2727_pp0_iter22_reg;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_436_p1 <= mul_124_i_reg_2667_pp0_iter20_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_436_p1 <= bitcast_ln327_4_fu_857_p1;
        else 
            grp_fu_436_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_440_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, sum_4_reg_2319, add_120_i_reg_2732, add_120_2_i_reg_2787, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_440_p0 <= add_120_2_i_reg_2787;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_440_p0 <= add_120_i_reg_2732;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_440_p0 <= sum_4_reg_2319;
        else 
            grp_fu_440_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_440_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_5_fu_985_p1, mul_119_1_i_reg_2697, mul_119_3_i_reg_2737_pp0_iter22_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_440_p1 <= mul_119_3_i_reg_2737_pp0_iter22_reg;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_440_p1 <= mul_119_1_i_reg_2697;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_440_p1 <= bitcast_ln327_5_fu_985_p1;
        else 
            grp_fu_440_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_444_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, sum_5_reg_2375, add_1_i_reg_2742, add_1_2_i_reg_2792, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_444_p0 <= add_1_2_i_reg_2792;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_444_p0 <= add_1_i_reg_2742;
        elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_444_p0 <= sum_5_reg_2375;
        else 
            grp_fu_444_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_444_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_6_fu_1343_p1, mul_1_110_i_reg_2682_pp0_iter20_reg, mul_1_3_i_reg_2747_pp0_iter22_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_444_p1 <= mul_1_3_i_reg_2747_pp0_iter22_reg;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_444_p1 <= mul_1_110_i_reg_2682_pp0_iter20_reg;
        elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_444_p1 <= bitcast_ln327_6_fu_1343_p1;
        else 
            grp_fu_444_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_448_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, sum_6_reg_2390, add_1_1_i_reg_2752, add_1_1_2_i_reg_2797, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_448_p0 <= add_1_1_2_i_reg_2797;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_448_p0 <= add_1_1_i_reg_2752;
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_448_p0 <= sum_6_reg_2390;
        else 
            grp_fu_448_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_448_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter23, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, bitcast_ln327_7_fu_1355_p1, mul_1_1_1_i_reg_2712, mul_1_1_3_i_reg_2757_pp0_iter22_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_448_p1 <= mul_1_1_3_i_reg_2757_pp0_iter22_reg;
        elsif (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_448_p1 <= mul_1_1_1_i_reg_2712;
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_448_p1 <= bitcast_ln327_7_fu_1355_p1;
        else 
            grp_fu_448_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_455_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_reg_2070_pp0_iter4_reg, empty_11_reg_2103_pp0_iter4_reg, sum_7_reg_2430, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_455_p0 <= sum_7_reg_2430;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_455_p0 <= empty_11_reg_2103_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_455_p0 <= empty_reg_2070_pp0_iter4_reg;
        else 
            grp_fu_455_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_455_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_reg_2288, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_455_p1 <= ap_const_lv32_3E000000;
        elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_455_p1 <= scale_reg_2288;
        else 
            grp_fu_455_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_460_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_7_reg_2081_pp0_iter4_reg, empty_6_reg_2174_pp0_iter4_reg, input_quant_reg_2400_pp0_iter18_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_460_p0 <= input_quant_reg_2400_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_460_p0 <= empty_6_reg_2174_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_460_p0 <= empty_7_reg_2081_pp0_iter4_reg;
        else 
            grp_fu_460_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_460_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_reg_2288, scale_1_reg_2303, weight_quantized_reg_2614, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_460_p1 <= weight_quantized_reg_2614;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_460_p1 <= scale_1_reg_2303;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_460_p1 <= scale_reg_2288;
        else 
            grp_fu_460_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_465_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_9_reg_2092_pp0_iter4_reg, empty_8_reg_2180_pp0_iter4_reg, input_quant_1_reg_2406_pp0_iter18_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_465_p0 <= input_quant_1_reg_2406_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_465_p0 <= empty_8_reg_2180_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_465_p0 <= empty_9_reg_2092_pp0_iter4_reg;
        else 
            grp_fu_465_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_465_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_reg_2288, scale_1_reg_2303, weight_quantized_2_reg_2626, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_465_p1 <= weight_quantized_2_reg_2626;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_465_p1 <= scale_1_reg_2303;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_465_p1 <= scale_reg_2288;
        else 
            grp_fu_465_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_470_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_10_reg_2186_pp0_iter4_reg, input_quant_reg_2400_pp0_iter18_reg, dc_fu_1407_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_470_p0 <= input_quant_reg_2400_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_470_p0 <= dc_fu_1407_p1;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_470_p0 <= empty_10_reg_2186_pp0_iter4_reg;
        else 
            grp_fu_470_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_470_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_1_reg_2303, scale_2_reg_2478, weight_quantized_1_reg_2620, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_470_p1 <= weight_quantized_1_reg_2620;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_470_p1 <= scale_2_reg_2478;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_470_p1 <= scale_1_reg_2303;
        else 
            grp_fu_470_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_475_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, empty_12_reg_2192_pp0_iter4_reg, input_quant_4_reg_2418_pp0_iter18_reg, dc_1_fu_1411_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_475_p0 <= input_quant_4_reg_2418_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_475_p0 <= dc_1_fu_1411_p1;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_475_p0 <= empty_12_reg_2192_pp0_iter4_reg;
        else 
            grp_fu_475_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_475_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_1_reg_2303, scale_2_reg_2478, weight_quantized_reg_2614, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_475_p1 <= weight_quantized_reg_2614;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_475_p1 <= scale_2_reg_2478;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_475_p1 <= scale_1_reg_2303;
        else 
            grp_fu_475_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_482_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, input_quant_2_reg_2412_pp0_iter18_reg, input_quant_5_reg_2424_pp0_iter18_reg, dc_2_fu_1415_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_482_p0 <= input_quant_2_reg_2412_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_482_p0 <= input_quant_5_reg_2424_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_482_p0 <= dc_2_fu_1415_p1;
        else 
            grp_fu_482_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_482_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478, weight_quantized_2_reg_2626, weight_quantized_4_reg_2638, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_482_p1 <= weight_quantized_4_reg_2638;
        elsif (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_482_p1 <= weight_quantized_2_reg_2626;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_482_p1 <= scale_2_reg_2478;
        else 
            grp_fu_482_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_487_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, input_quant_1_reg_2406_pp0_iter19_reg, input_quant_4_reg_2418_pp0_iter18_reg, dc_3_fu_1419_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_487_p0 <= input_quant_1_reg_2406_pp0_iter19_reg;
        elsif (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_487_p0 <= input_quant_4_reg_2418_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_487_p0 <= dc_3_fu_1419_p1;
        else 
            grp_fu_487_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_487_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478, weight_quantized_1_reg_2620, weight_quantized_3_reg_2632, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_487_p1 <= weight_quantized_3_reg_2632;
        elsif (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_487_p1 <= weight_quantized_1_reg_2620;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_487_p1 <= scale_2_reg_2478;
        else 
            grp_fu_487_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_492_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, input_quant_2_reg_2412_pp0_iter18_reg, input_quant_3_reg_2435_pp0_iter18_reg, dc_4_fu_1423_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_492_p0 <= input_quant_3_reg_2435_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_492_p0 <= input_quant_2_reg_2412_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_492_p0 <= dc_4_fu_1423_p1;
        else 
            grp_fu_492_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_492_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478, weight_quantized_5_reg_2644, weight_quantized_6_reg_2650, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_492_p1 <= weight_quantized_6_reg_2650;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_492_p1 <= weight_quantized_5_reg_2644;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_492_p1 <= scale_2_reg_2478;
        else 
            grp_fu_492_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_496_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, input_quant_3_reg_2435_pp0_iter18_reg, input_quant_6_reg_2441_pp0_iter18_reg, dc_5_fu_1427_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_496_p0 <= input_quant_3_reg_2435_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_496_p0 <= input_quant_6_reg_2441_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_496_p0 <= dc_5_fu_1427_p1;
        else 
            grp_fu_496_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_496_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478, weight_quantized_4_reg_2638, weight_quantized_7_reg_2656, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_496_p1 <= weight_quantized_7_reg_2656;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_496_p1 <= weight_quantized_4_reg_2638;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_496_p1 <= scale_2_reg_2478;
        else 
            grp_fu_496_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_500_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, input_quant_5_reg_2424_pp0_iter18_reg, input_quant_7_reg_2447_pp0_iter19_reg, dc_6_fu_1431_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_500_p0 <= input_quant_7_reg_2447_pp0_iter19_reg;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_500_p0 <= input_quant_5_reg_2424_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_500_p0 <= dc_6_fu_1431_p1;
        else 
            grp_fu_500_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_500_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478, weight_quantized_3_reg_2632, weight_quantized_6_reg_2650, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_500_p1 <= weight_quantized_6_reg_2650;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_500_p1 <= weight_quantized_3_reg_2632;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_500_p1 <= scale_2_reg_2478;
        else 
            grp_fu_500_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_504_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, input_quant_6_reg_2441_pp0_iter18_reg, input_quant_7_reg_2447_pp0_iter19_reg, dc_7_fu_1435_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_504_p0 <= input_quant_7_reg_2447_pp0_iter19_reg;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_504_p0 <= input_quant_6_reg_2441_pp0_iter18_reg;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_504_p0 <= dc_7_fu_1435_p1;
        else 
            grp_fu_504_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_504_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478, weight_quantized_5_reg_2644, weight_quantized_7_reg_2656, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_504_p1 <= weight_quantized_7_reg_2656;
        elsif (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_504_p1 <= weight_quantized_5_reg_2644;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_504_p1 <= scale_2_reg_2478;
        else 
            grp_fu_504_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_508_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, res_18_reg_2344, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_508_p0 <= res_18_reg_2344;
        elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_508_p0 <= ap_const_lv32_42FE0000;
        else 
            grp_fu_508_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_508_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, select_ln47_reg_2253, select_ln47_1_reg_2263, scale_reg_2288_pp0_iter5_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_508_p1 <= scale_reg_2288_pp0_iter5_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_508_p1 <= select_ln47_1_reg_2263;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_508_p1 <= select_ln47_reg_2253;
        else 
            grp_fu_508_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_513_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, res_16_reg_2324, res_20_reg_2349, res_19_reg_2359, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_fu_513_p0 <= res_19_reg_2359;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_513_p0 <= res_20_reg_2349;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_513_p0 <= res_16_reg_2324;
            else 
                grp_fu_513_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_513_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_513_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_reg_2288_pp0_iter5_reg, scale_1_reg_2303_pp0_iter6_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_513_p1 <= scale_1_reg_2303_pp0_iter6_reg;
        elsif ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_513_p1 <= scale_reg_2288_pp0_iter5_reg;
        else 
            grp_fu_513_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_517_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, res_17_reg_2329, res_21_reg_2354, res_22_reg_2364, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_fu_517_p0 <= res_22_reg_2364;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_517_p0 <= res_21_reg_2354;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_517_p0 <= res_17_reg_2329;
            else 
                grp_fu_517_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_517_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_517_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_reg_2288_pp0_iter5_reg, scale_1_reg_2303_pp0_iter6_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_517_p1 <= scale_1_reg_2303_pp0_iter6_reg;
        elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_517_p1 <= scale_reg_2288_pp0_iter5_reg;
        else 
            grp_fu_517_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_521_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, res_23_reg_2380, scaled_1_reg_2561, scaled_7_reg_2589, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_521_p0 <= scaled_7_reg_2589;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_521_p0 <= scaled_1_reg_2561;
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_521_p0 <= res_23_reg_2380;
        else 
            grp_fu_521_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_521_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_1_reg_2303_pp0_iter6_reg, scale_2_reg_2478_pp0_iter15_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_521_p1 <= scale_2_reg_2478_pp0_iter15_reg;
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_521_p1 <= scale_1_reg_2303_pp0_iter6_reg;
        else 
            grp_fu_521_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_525_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scaled_3_reg_2566, scaled_9_reg_2594, scaled_13_reg_2604, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_525_p0 <= scaled_13_reg_2604;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_525_p0 <= scaled_9_reg_2594;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_525_p0 <= scaled_3_reg_2566;
        else 
            grp_fu_525_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_525_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478_pp0_iter15_reg, scale_2_reg_2478_pp0_iter16_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_525_p1 <= scale_2_reg_2478_pp0_iter16_reg;
        elsif ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_525_p1 <= scale_2_reg_2478_pp0_iter15_reg;
        else 
            grp_fu_525_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_529_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scaled_5_reg_2571, scaled_11_reg_2599, scaled_15_reg_2609, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_529_p0 <= scaled_15_reg_2609;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_529_p0 <= scaled_11_reg_2599;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_529_p0 <= scaled_5_reg_2571;
        else 
            grp_fu_529_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_529_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scale_2_reg_2478_pp0_iter15_reg, scale_2_reg_2478_pp0_iter16_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_529_p1 <= scale_2_reg_2478_pp0_iter16_reg;
        elsif ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_529_p1 <= scale_2_reg_2478_pp0_iter15_reg;
        else 
            grp_fu_529_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_539_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage2_00001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001))) then 
            grp_fu_539_opcode <= ap_const_lv5_2;
        elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_00001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001)))) then 
            grp_fu_539_opcode <= ap_const_lv5_4;
        else 
            grp_fu_539_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_539_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, ap_CS_fsm_pp0_stage2, grp_find_max_abs_fu_338_ap_return, ap_CS_fsm_pp0_stage1, grp_generic_round_float_s_fu_364_ap_return, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_539_p0 <= grp_generic_round_float_s_fu_364_ap_return;
        elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_539_p0 <= grp_find_max_abs_fu_338_ap_return;
        else 
            grp_fu_539_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_539_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_539_p1 <= ap_const_lv32_3F800000;
        elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_539_p1 <= ap_const_lv32_3727C5AC;
        else 
            grp_fu_539_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_545_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, reg_602, grp_generic_round_float_s_fu_364_ap_return, scaled_6_reg_2553, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_545_p0 <= scaled_6_reg_2553;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_545_p0 <= grp_generic_round_float_s_fu_364_ap_return;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_545_p0 <= reg_602;
        else 
            grp_fu_545_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_545_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_545_p1 <= ap_const_lv32_BF800000;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_545_p1 <= ap_const_lv32_3727C5AC;
        else 
            grp_fu_545_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_554_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, grp_generic_round_float_s_fu_373_ap_return, grp_generic_round_float_s_fu_364_ap_return, grp_generic_round_float_s_fu_382_ap_return, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_554_p0 <= grp_generic_round_float_s_fu_364_ap_return;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_554_p0 <= grp_generic_round_float_s_fu_382_ap_return;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_554_p0 <= grp_generic_round_float_s_fu_373_ap_return;
        else 
            grp_fu_554_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_560_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, grp_generic_round_float_s_fu_373_ap_return, grp_generic_round_float_s_fu_364_ap_return, grp_generic_round_float_s_fu_382_ap_return, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_560_p0 <= grp_generic_round_float_s_fu_364_ap_return;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_560_p0 <= grp_generic_round_float_s_fu_382_ap_return;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_560_p0 <= grp_generic_round_float_s_fu_373_ap_return;
        else 
            grp_fu_560_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_566_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, grp_generic_round_float_s_fu_373_ap_return, grp_generic_round_float_s_fu_382_ap_return, grp_generic_round_float_s_fu_391_ap_return, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_566_p0 <= grp_generic_round_float_s_fu_373_ap_return;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_566_p0 <= grp_generic_round_float_s_fu_391_ap_return;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_566_p0 <= grp_generic_round_float_s_fu_382_ap_return;
        else 
            grp_fu_566_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_572_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, grp_generic_round_float_s_fu_373_ap_return, grp_generic_round_float_s_fu_382_ap_return, grp_generic_round_float_s_fu_391_ap_return, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_572_p0 <= grp_generic_round_float_s_fu_373_ap_return;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_572_p0 <= grp_generic_round_float_s_fu_391_ap_return;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_572_p0 <= grp_generic_round_float_s_fu_382_ap_return;
        else 
            grp_fu_572_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_generic_fmax_float_s_fu_406_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, reg_609, grp_generic_round_float_s_fu_355_ap_return, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_generic_fmax_float_s_fu_406_x <= reg_609;
        elsif ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_generic_fmax_float_s_fu_406_x <= grp_generic_round_float_s_fu_355_ap_return;
        else 
            grp_generic_fmax_float_s_fu_406_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_generic_fmax_float_s_fu_412_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, grp_generic_round_float_s_fu_364_ap_return, grp_generic_round_float_s_fu_355_ap_return, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_generic_fmax_float_s_fu_412_x <= grp_generic_round_float_s_fu_355_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_generic_fmax_float_s_fu_412_x <= grp_generic_round_float_s_fu_364_ap_return;
            else 
                grp_generic_fmax_float_s_fu_412_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_generic_fmax_float_s_fu_412_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_generic_round_float_s_fu_346_ap_start <= grp_generic_round_float_s_fu_346_ap_start_reg;

    grp_generic_round_float_s_fu_346_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, grp_fu_455_p2, reg_602, scaled_val_2_reg_2314, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_generic_round_float_s_fu_346_x <= reg_602;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_generic_round_float_s_fu_346_x <= scaled_val_2_reg_2314;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_generic_round_float_s_fu_346_x <= grp_fu_455_p2;
        else 
            grp_generic_round_float_s_fu_346_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_generic_round_float_s_fu_355_ap_start <= grp_generic_round_float_s_fu_355_ap_start_reg;

    grp_generic_round_float_s_fu_355_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, scaled_val_7_reg_2334, grp_fu_460_p2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_generic_round_float_s_fu_355_x <= scaled_val_7_reg_2334;
        elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_generic_round_float_s_fu_355_x <= grp_fu_460_p2;
        else 
            grp_generic_round_float_s_fu_355_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_generic_round_float_s_fu_364_ap_start <= grp_generic_round_float_s_fu_364_ap_start_reg;

    grp_generic_round_float_s_fu_364_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, grp_fu_465_p2, p_x_assign_4_reg_2543, grp_fu_470_p2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_generic_round_float_s_fu_364_x <= p_x_assign_4_reg_2543;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_generic_round_float_s_fu_364_x <= grp_fu_470_p2;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_generic_round_float_s_fu_364_x <= grp_fu_465_p2;
        else 
            grp_generic_round_float_s_fu_364_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_generic_round_float_s_fu_373_ap_start <= grp_generic_round_float_s_fu_373_ap_start_reg;

    grp_generic_round_float_s_fu_373_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, grp_fu_475_p2, p_x_assign_5_reg_2548, grp_fu_470_p2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_generic_round_float_s_fu_373_x <= p_x_assign_5_reg_2548;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_generic_round_float_s_fu_373_x <= grp_fu_475_p2;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_generic_round_float_s_fu_373_x <= grp_fu_470_p2;
        else 
            grp_generic_round_float_s_fu_373_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_generic_round_float_s_fu_382_ap_start <= grp_generic_round_float_s_fu_382_ap_start_reg;

    grp_generic_round_float_s_fu_382_x_assign_proc : process(ap_enable_reg_pp0_iter15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, p_x_assign_2_reg_2533, grp_fu_482_p2, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter15 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_generic_round_float_s_fu_382_x <= p_x_assign_2_reg_2533;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_generic_round_float_s_fu_382_x <= grp_fu_482_p2;
            else 
                grp_generic_round_float_s_fu_382_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_generic_round_float_s_fu_382_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_generic_round_float_s_fu_391_ap_start <= grp_generic_round_float_s_fu_391_ap_start_reg;

    grp_generic_round_float_s_fu_391_x_assign_proc : process(ap_enable_reg_pp0_iter15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, p_x_assign_3_reg_2538, grp_fu_487_p2, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter15 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_generic_round_float_s_fu_391_x <= p_x_assign_3_reg_2538;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_generic_round_float_s_fu_391_x <= grp_fu_487_p2;
            else 
                grp_generic_round_float_s_fu_391_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_generic_round_float_s_fu_391_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln18_10_fu_1072_p2 <= "0" when (x_fp_sig_4_fu_1062_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_11_fu_1124_p2 <= "1" when (x_fp_exp_5_fu_1110_p4 = ap_const_lv8_FF) else "0";
    icmp_ln18_12_fu_1130_p2 <= "0" when (x_fp_sig_5_fu_1120_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_13_fu_1240_p2 <= "1" when (x_fp_exp_6_fu_1226_p4 = ap_const_lv8_FF) else "0";
    icmp_ln18_14_fu_1246_p2 <= "0" when (x_fp_sig_6_fu_1236_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_15_fu_1297_p2 <= "1" when (x_fp_exp_7_fu_1283_p4 = ap_const_lv8_FF) else "0";
    icmp_ln18_16_fu_1303_p2 <= "0" when (x_fp_sig_7_fu_1293_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_2_fu_886_p2 <= "0" when (x_fp_sig_fu_876_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_3_fu_938_p2 <= "1" when (x_fp_exp_1_fu_924_p4 = ap_const_lv8_FF) else "0";
    icmp_ln18_4_fu_944_p2 <= "0" when (x_fp_sig_1_fu_934_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_5_fu_1008_p2 <= "1" when (x_fp_exp_2_fu_994_p4 = ap_const_lv8_FF) else "0";
    icmp_ln18_6_fu_1014_p2 <= "0" when (x_fp_sig_2_fu_1004_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_7_fu_1182_p2 <= "1" when (x_fp_exp_3_fu_1168_p4 = ap_const_lv8_FF) else "0";
    icmp_ln18_8_fu_1188_p2 <= "0" when (x_fp_sig_3_fu_1178_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_9_fu_1066_p2 <= "1" when (x_fp_exp_4_fu_1052_p4 = ap_const_lv8_FF) else "0";
    icmp_ln18_fu_880_p2 <= "1" when (x_fp_exp_fu_866_p4 = ap_const_lv8_FF) else "0";
    icmp_ln47_1_fu_750_p2 <= "1" when (trunc_ln47_fu_740_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_2_fu_794_p2 <= "0" when (tmp_11_fu_780_p4 = ap_const_lv8_FF) else "1";
    icmp_ln47_3_fu_800_p2 <= "1" when (trunc_ln47_1_fu_790_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_4_fu_1378_p2 <= "0" when (tmp_13_fu_1364_p4 = ap_const_lv8_FF) else "1";
    icmp_ln47_5_fu_1384_p2 <= "1" when (trunc_ln47_2_fu_1374_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_fu_744_p2 <= "0" when (tmp_fu_730_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_10_fu_1803_p2 <= "0" when (tmp_30_fu_1789_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_11_fu_1809_p2 <= "1" when (trunc_ln86_5_fu_1799_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_12_fu_1872_p2 <= "0" when (tmp_33_fu_1858_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_13_fu_1878_p2 <= "1" when (trunc_ln86_6_fu_1868_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_14_fu_1942_p2 <= "0" when (tmp_36_fu_1928_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_15_fu_1948_p2 <= "1" when (trunc_ln86_7_fu_1938_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_1_fu_1463_p2 <= "1" when (trunc_ln86_fu_1453_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_2_fu_1527_p2 <= "0" when (tmp_18_fu_1513_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_3_fu_1533_p2 <= "1" when (trunc_ln86_1_fu_1523_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_4_fu_1597_p2 <= "0" when (tmp_21_fu_1583_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_5_fu_1603_p2 <= "1" when (trunc_ln86_2_fu_1593_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_6_fu_1666_p2 <= "0" when (tmp_24_fu_1652_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_7_fu_1672_p2 <= "1" when (trunc_ln86_3_fu_1662_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_8_fu_1734_p2 <= "0" when (tmp_27_fu_1720_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_9_fu_1740_p2 <= "1" when (trunc_ln86_4_fu_1730_p1 = ap_const_lv23_0) else "0";
    icmp_ln86_fu_1457_p2 <= "0" when (tmp_15_fu_1443_p4 = ap_const_lv8_FF) else "1";
    input_0_address0 <= ap_const_lv64_1(1 - 1 downto 0);
    input_0_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    input_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_0_ce0 <= ap_const_logic_1;
        else 
            input_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_0_ce1 <= ap_const_logic_1;
        else 
            input_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    input_1_address0 <= ap_const_lv64_1(1 - 1 downto 0);
    input_1_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    input_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_1_ce0 <= ap_const_logic_1;
        else 
            input_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_1_ce1 <= ap_const_logic_1;
        else 
            input_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    input_2_address0 <= ap_const_lv64_1(1 - 1 downto 0);
    input_2_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    input_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_2_ce0 <= ap_const_logic_1;
        else 
            input_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_2_ce1 <= ap_const_logic_1;
        else 
            input_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    input_3_address0 <= ap_const_lv64_1(1 - 1 downto 0);
    input_3_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    input_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_3_ce0 <= ap_const_logic_1;
        else 
            input_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_3_ce1 <= ap_const_logic_1;
        else 
            input_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln47_1_fu_806_p2 <= (icmp_ln47_3_fu_800_p2 or icmp_ln47_2_fu_794_p2);
    or_ln47_2_fu_1390_p2 <= (icmp_ln47_5_reg_2458 or icmp_ln47_4_reg_2453);
    or_ln47_fu_756_p2 <= (icmp_ln47_fu_744_p2 or icmp_ln47_1_fu_750_p2);
    or_ln86_10_fu_1609_p2 <= (icmp_ln86_5_fu_1603_p2 or icmp_ln86_4_fu_1597_p2);
    or_ln86_11_fu_1678_p2 <= (icmp_ln86_7_fu_1672_p2 or icmp_ln86_6_fu_1666_p2);
    or_ln86_12_fu_1746_p2 <= (icmp_ln86_9_fu_1740_p2 or icmp_ln86_8_fu_1734_p2);
    or_ln86_13_fu_1815_p2 <= (icmp_ln86_11_fu_1809_p2 or icmp_ln86_10_fu_1803_p2);
    or_ln86_14_fu_1884_p2 <= (icmp_ln86_13_fu_1878_p2 or icmp_ln86_12_fu_1872_p2);
    or_ln86_15_fu_1954_p2 <= (icmp_ln86_15_fu_1948_p2 or icmp_ln86_14_fu_1942_p2);
    or_ln86_1_fu_1565_p2 <= (and_ln86_3_fu_1551_p2 or and_ln86_2_fu_1545_p2);
    or_ln86_2_fu_1635_p2 <= (and_ln86_5_fu_1621_p2 or and_ln86_4_fu_1615_p2);
    or_ln86_3_fu_1703_p2 <= (and_ln86_7_fu_1689_p2 or and_ln86_6_fu_1684_p2);
    or_ln86_4_fu_1772_p2 <= (and_ln86_9_fu_1758_p2 or and_ln86_8_fu_1752_p2);
    or_ln86_5_fu_1841_p2 <= (and_ln86_11_fu_1827_p2 or and_ln86_10_fu_1821_p2);
    or_ln86_6_fu_1910_p2 <= (and_ln86_13_fu_1896_p2 or and_ln86_12_fu_1890_p2);
    or_ln86_7_fu_1980_p2 <= (and_ln86_15_fu_1966_p2 or and_ln86_14_fu_1960_p2);
    or_ln86_8_fu_1469_p2 <= (icmp_ln86_fu_1457_p2 or icmp_ln86_1_fu_1463_p2);
    or_ln86_9_fu_1539_p2 <= (icmp_ln86_3_fu_1533_p2 or icmp_ln86_2_fu_1527_p2);
    or_ln86_fu_1495_p2 <= (and_ln86_fu_1475_p2 or and_ln86_1_fu_1481_p2);
    output_0_address0 <= ap_const_lv64_1(1 - 1 downto 0);
    output_0_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    output_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_0_ce0 <= ap_const_logic_1;
        else 
            output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_0_ce1 <= ap_const_logic_1;
        else 
            output_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_0_d0 <= add_1_3_i_reg_2812;
    output_0_d1 <= add_3_i_reg_2802;

    output_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_0_we0 <= ap_const_logic_1;
        else 
            output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_0_we1 <= ap_const_logic_1;
        else 
            output_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_1_address0 <= ap_const_lv64_1(1 - 1 downto 0);
    output_1_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    output_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_1_ce0 <= ap_const_logic_1;
        else 
            output_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_1_ce1 <= ap_const_logic_1;
        else 
            output_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_1_d0 <= add_1_1_3_i_reg_2817;
    output_1_d1 <= add_120_3_i_reg_2807;

    output_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_1_we0 <= ap_const_logic_1;
        else 
            output_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_1_we1 <= ap_const_logic_1;
        else 
            output_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    res_10_fu_1148_p3 <= 
        grp_generic_fmax_float_s_fu_412_ap_return when (ymaggreater_6_fu_1142_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    res_12_fu_1264_p3 <= 
        grp_generic_fmax_float_s_fu_406_ap_return when (ymaggreater_7_fu_1258_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    res_14_fu_1321_p3 <= 
        x_assign_6_reg_2369 when (ymaggreater_8_fu_1315_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    res_16_fu_912_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_fu_892_p2(0) = '1') else 
        res_fu_904_p3;
    res_17_fu_970_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_1_fu_950_p2(0) = '1') else 
        res_2_fu_962_p3;
    res_18_fu_1040_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_2_fu_1020_p2(0) = '1') else 
        res_4_fu_1032_p3;
    res_19_fu_1214_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_3_fu_1194_p2(0) = '1') else 
        res_6_fu_1206_p3;
    res_20_fu_1098_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_4_fu_1078_p2(0) = '1') else 
        res_8_fu_1090_p3;
    res_21_fu_1156_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_5_fu_1136_p2(0) = '1') else 
        res_10_fu_1148_p3;
    res_22_fu_1272_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_6_fu_1252_p2(0) = '1') else 
        res_12_fu_1264_p3;
    res_23_fu_1328_p3 <= 
        ap_const_lv32_42FE0000 when (and_ln18_7_fu_1309_p2(0) = '1') else 
        res_14_fu_1321_p3;
    res_2_fu_962_p3 <= 
        grp_generic_fmax_float_s_fu_406_ap_return when (ymaggreater_2_fu_956_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    res_4_fu_1032_p3 <= 
        grp_generic_fmax_float_s_fu_400_ap_return when (ymaggreater_3_fu_1026_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    res_6_fu_1206_p3 <= 
        grp_generic_fmax_float_s_fu_400_ap_return when (ymaggreater_4_fu_1200_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    res_8_fu_1090_p3 <= 
        grp_generic_fmax_float_s_fu_406_ap_return when (ymaggreater_5_fu_1084_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    res_fu_904_p3 <= 
        grp_generic_fmax_float_s_fu_400_ap_return when (ymaggreater_fu_898_p2(0) = '1') else 
        ap_const_lv32_42FE0000;
    scaled_11_fu_1847_p3 <= 
        select_ln86_10_fu_1833_p3 when (or_ln86_5_fu_1841_p2(0) = '1') else 
        scaled_10_reg_2581;
    scaled_13_fu_1916_p3 <= 
        select_ln86_12_fu_1902_p3 when (or_ln86_6_fu_1910_p2(0) = '1') else 
        reg_618;
    scaled_15_fu_1986_p3 <= 
        select_ln86_14_fu_1972_p3 when (or_ln86_7_fu_1980_p2(0) = '1') else 
        reg_609;
    scaled_1_fu_1501_p3 <= 
        select_ln86_fu_1487_p3 when (or_ln86_fu_1495_p2(0) = '1') else 
        reg_618;
    scaled_3_fu_1571_p3 <= 
        select_ln86_2_fu_1557_p3 when (or_ln86_1_fu_1565_p2(0) = '1') else 
        reg_609;
    scaled_5_fu_1641_p3 <= 
        select_ln86_4_fu_1627_p3 when (or_ln86_2_fu_1635_p2(0) = '1') else 
        reg_626;
    scaled_7_fu_1709_p3 <= 
        select_ln86_6_fu_1695_p3 when (or_ln86_3_fu_1703_p2(0) = '1') else 
        scaled_6_reg_2553;
    scaled_9_fu_1778_p3 <= 
        select_ln86_8_fu_1764_p3 when (or_ln86_4_fu_1772_p2(0) = '1') else 
        reg_626;
    select_ln47_1_fu_818_p3 <= 
        ap_const_lv32_3727C5AC when (and_ln47_1_fu_812_p2(0) = '1') else 
        reg_597;
    select_ln47_fu_768_p3 <= 
        ap_const_lv32_3727C5AC when (and_ln47_fu_762_p2(0) = '1') else 
        reg_597;
    select_ln75_fu_1400_p3 <= 
        ap_const_lv64_3EE4F8B580000000 when (and_ln47_2_fu_1394_p2(0) = '1') else 
        tmp_7_reg_2463;
    select_ln86_10_fu_1833_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_10_fu_1821_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    select_ln86_12_fu_1902_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_12_fu_1890_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    select_ln86_14_fu_1972_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_14_fu_1960_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    select_ln86_2_fu_1557_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_2_fu_1545_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    select_ln86_4_fu_1627_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_4_fu_1615_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    select_ln86_6_fu_1695_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_6_fu_1684_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    select_ln86_8_fu_1764_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_8_fu_1752_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    select_ln86_fu_1487_p3 <= 
        ap_const_lv32_3F800000 when (and_ln86_fu_1475_p2(0) = '1') else 
        ap_const_lv32_BF800000;
    t_14_fu_714_p3 <= (ap_const_lv1_0 & trunc_ln313_4_reg_2129_pp0_iter1_reg);
    t_15_fu_826_p3 <= (ap_const_lv1_0 & trunc_ln313_5_reg_2139_pp0_iter2_reg);
    t_16_fu_838_p3 <= (ap_const_lv1_0 & trunc_ln313_6_reg_2149_pp0_iter3_reg);
    t_17_fu_850_p3 <= (ap_const_lv1_0 & trunc_ln313_7_reg_2208_pp0_iter3_reg);
    t_18_fu_978_p3 <= (ap_const_lv1_0 & trunc_ln313_8_reg_2218_pp0_iter4_reg);
    t_19_fu_1336_p3 <= (ap_const_lv1_0 & trunc_ln313_9_reg_2228_pp0_iter5_reg);
    t_20_fu_1348_p3 <= (ap_const_lv1_0 & trunc_ln313_10_reg_2238_pp0_iter6_reg);
    t_fu_686_p3 <= (ap_const_lv1_0 & trunc_ln313_reg_2119);
    tmp_11_fu_780_p4 <= bitcast_ln47_1_fu_776_p1(30 downto 23);
    tmp_13_fu_1364_p4 <= bitcast_ln47_2_fu_1360_p1(30 downto 23);
    tmp_15_fu_1443_p4 <= bitcast_ln86_fu_1439_p1(30 downto 23);
    tmp_18_fu_1513_p4 <= bitcast_ln86_1_fu_1509_p1(30 downto 23);
    tmp_21_fu_1583_p4 <= bitcast_ln86_2_fu_1579_p1(30 downto 23);
    tmp_24_fu_1652_p4 <= bitcast_ln86_3_fu_1649_p1(30 downto 23);
    tmp_27_fu_1720_p4 <= bitcast_ln86_4_fu_1716_p1(30 downto 23);
    tmp_30_fu_1789_p4 <= bitcast_ln86_5_fu_1786_p1(30 downto 23);
    tmp_33_fu_1858_p4 <= bitcast_ln86_6_fu_1854_p1(30 downto 23);
    tmp_36_fu_1928_p4 <= bitcast_ln86_7_fu_1924_p1(30 downto 23);
    tmp_fu_730_p4 <= bitcast_ln47_fu_726_p1(30 downto 23);
    trunc_ln313_10_fu_710_p1 <= weight_1_q0(31 - 1 downto 0);
    trunc_ln313_4_fu_658_p1 <= weight_1_q1(31 - 1 downto 0);
    trunc_ln313_5_fu_662_p1 <= weight_0_q0(31 - 1 downto 0);
    trunc_ln313_6_fu_666_p1 <= weight_1_q0(31 - 1 downto 0);
    trunc_ln313_7_fu_698_p1 <= weight_0_q1(31 - 1 downto 0);
    trunc_ln313_8_fu_702_p1 <= weight_1_q1(31 - 1 downto 0);
    trunc_ln313_9_fu_706_p1 <= weight_0_q0(31 - 1 downto 0);
    trunc_ln313_fu_654_p1 <= weight_0_q1(31 - 1 downto 0);
    trunc_ln47_1_fu_790_p1 <= bitcast_ln47_1_fu_776_p1(23 - 1 downto 0);
    trunc_ln47_2_fu_1374_p1 <= bitcast_ln47_2_fu_1360_p1(23 - 1 downto 0);
    trunc_ln47_fu_740_p1 <= bitcast_ln47_fu_726_p1(23 - 1 downto 0);
    trunc_ln86_1_fu_1523_p1 <= bitcast_ln86_1_fu_1509_p1(23 - 1 downto 0);
    trunc_ln86_2_fu_1593_p1 <= bitcast_ln86_2_fu_1579_p1(23 - 1 downto 0);
    trunc_ln86_3_fu_1662_p1 <= bitcast_ln86_3_fu_1649_p1(23 - 1 downto 0);
    trunc_ln86_4_fu_1730_p1 <= bitcast_ln86_4_fu_1716_p1(23 - 1 downto 0);
    trunc_ln86_5_fu_1799_p1 <= bitcast_ln86_5_fu_1786_p1(23 - 1 downto 0);
    trunc_ln86_6_fu_1868_p1 <= bitcast_ln86_6_fu_1854_p1(23 - 1 downto 0);
    trunc_ln86_7_fu_1938_p1 <= bitcast_ln86_7_fu_1924_p1(23 - 1 downto 0);
    trunc_ln86_fu_1453_p1 <= bitcast_ln86_fu_1439_p1(23 - 1 downto 0);

    weight_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                weight_0_address0 <= ap_const_lv64_3(2 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                weight_0_address0 <= ap_const_lv64_1(2 - 1 downto 0);
            else 
                weight_0_address0 <= "XX";
            end if;
        else 
            weight_0_address0 <= "XX";
        end if; 
    end process;


    weight_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                weight_0_address1 <= ap_const_lv64_2(2 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                weight_0_address1 <= ap_const_lv64_0(2 - 1 downto 0);
            else 
                weight_0_address1 <= "XX";
            end if;
        else 
            weight_0_address1 <= "XX";
        end if; 
    end process;


    weight_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            weight_0_ce0 <= ap_const_logic_1;
        else 
            weight_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            weight_0_ce1 <= ap_const_logic_1;
        else 
            weight_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                weight_1_address0 <= ap_const_lv64_3(2 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                weight_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
            else 
                weight_1_address0 <= "XX";
            end if;
        else 
            weight_1_address0 <= "XX";
        end if; 
    end process;


    weight_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                weight_1_address1 <= ap_const_lv64_2(2 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                weight_1_address1 <= ap_const_lv64_0(2 - 1 downto 0);
            else 
                weight_1_address1 <= "XX";
            end if;
        else 
            weight_1_address1 <= "XX";
        end if; 
    end process;


    weight_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            weight_1_ce0 <= ap_const_logic_1;
        else 
            weight_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            weight_1_ce1 <= ap_const_logic_1;
        else 
            weight_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    x_fp_exp_1_fu_924_p4 <= data_21_fu_920_p1(30 downto 23);
    x_fp_exp_2_fu_994_p4 <= data_22_fu_990_p1(30 downto 23);
    x_fp_exp_3_fu_1168_p4 <= data_23_fu_1164_p1(30 downto 23);
    x_fp_exp_4_fu_1052_p4 <= data_24_fu_1048_p1(30 downto 23);
    x_fp_exp_5_fu_1110_p4 <= data_25_fu_1106_p1(30 downto 23);
    x_fp_exp_6_fu_1226_p4 <= data_26_fu_1222_p1(30 downto 23);
    x_fp_exp_7_fu_1283_p4 <= data_27_fu_1280_p1(30 downto 23);
    x_fp_exp_fu_866_p4 <= data_20_fu_862_p1(30 downto 23);
    x_fp_sig_1_fu_934_p1 <= data_21_fu_920_p1(23 - 1 downto 0);
    x_fp_sig_2_fu_1004_p1 <= data_22_fu_990_p1(23 - 1 downto 0);
    x_fp_sig_3_fu_1178_p1 <= data_23_fu_1164_p1(23 - 1 downto 0);
    x_fp_sig_4_fu_1062_p1 <= data_24_fu_1048_p1(23 - 1 downto 0);
    x_fp_sig_5_fu_1120_p1 <= data_25_fu_1106_p1(23 - 1 downto 0);
    x_fp_sig_6_fu_1236_p1 <= data_26_fu_1222_p1(23 - 1 downto 0);
    x_fp_sig_7_fu_1293_p1 <= data_27_fu_1280_p1(23 - 1 downto 0);
    x_fp_sig_fu_876_p1 <= data_20_fu_862_p1(23 - 1 downto 0);
    ymaggreater_2_fu_956_p2 <= "1" when (signed(data_21_fu_920_p1) < signed(ap_const_lv32_42FE0000)) else "0";
    ymaggreater_3_fu_1026_p2 <= "1" when (signed(data_22_fu_990_p1) < signed(ap_const_lv32_42FE0000)) else "0";
    ymaggreater_4_fu_1200_p2 <= "1" when (signed(data_23_fu_1164_p1) < signed(ap_const_lv32_42FE0000)) else "0";
    ymaggreater_5_fu_1084_p2 <= "1" when (signed(data_24_fu_1048_p1) < signed(ap_const_lv32_42FE0000)) else "0";
    ymaggreater_6_fu_1142_p2 <= "1" when (signed(data_25_fu_1106_p1) < signed(ap_const_lv32_42FE0000)) else "0";
    ymaggreater_7_fu_1258_p2 <= "1" when (signed(data_26_fu_1222_p1) < signed(ap_const_lv32_42FE0000)) else "0";
    ymaggreater_8_fu_1315_p2 <= "1" when (signed(data_27_fu_1280_p1) < signed(ap_const_lv32_42FE0000)) else "0";
    ymaggreater_fu_898_p2 <= "1" when (signed(data_20_fu_862_p1) < signed(ap_const_lv32_42FE0000)) else "0";
end behav;
