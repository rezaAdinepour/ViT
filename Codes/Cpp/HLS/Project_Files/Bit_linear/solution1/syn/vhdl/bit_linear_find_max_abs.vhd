-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bit_linear_find_max_abs is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    arr_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
    arr_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
    arr_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
    arr_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of bit_linear_find_max_abs is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal arr_3_val_read_reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal arr_3_val_read_reg_451_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_3_val_read_reg_451_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_2_val_read_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_2_val_read_reg_456_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_1_val_read_reg_461 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_fu_95_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_reg_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln22_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_1_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_1_reg_477 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_val_1_fu_132_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_1_reg_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_1_fu_159_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_1_reg_489 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln22_2_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_2_reg_495 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_3_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_3_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_val_3_fu_237_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_3_reg_505 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_2_fu_263_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_2_reg_512 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln22_6_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_6_reg_518 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_7_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_7_reg_523 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_val_5_fu_341_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_5_reg_528 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_3_fu_367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_val_3_reg_535 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln22_10_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_10_reg_541 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_11_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_11_reg_546 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_58_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_63_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_63_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_67_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_67_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_71_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_71_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_fu_75_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_fu_79_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal t_fu_87_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_100_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_fu_83_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln22_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_58_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_2_fu_140_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_1_fu_143_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal t_3_fu_151_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_164_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_1_fu_147_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln22_fu_186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_189_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_2_fu_199_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln22_5_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_4_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_1_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_2_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_1_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_63_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_2_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_3_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_2_fu_247_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal t_4_fu_255_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_268_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_3_fu_251_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln22_1_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_293_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_4_fu_303_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln22_9_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_8_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_3_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_4_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_3_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_67_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_4_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_4_fu_348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln313_3_fu_351_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal t_5_fu_359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_372_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_5_fu_355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln22_2_fu_394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_397_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_6_fu_407_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln22_13_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_12_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_5_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_6_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_5_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_71_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_6_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_58_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_63_ce : STD_LOGIC;
    signal grp_fu_67_ce : STD_LOGIC;
    signal grp_fu_71_ce : STD_LOGIC;
    signal max_val_7_fu_445_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal arr_0_val_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_1_val_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_2_val_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_3_val_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (31 downto 0);

    component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    fcmp_32ns_32ns_1_2_no_dsp_0_U1 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_58_p0,
        din1 => ap_const_lv32_0,
        ce => grp_fu_58_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_58_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U2 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_63_p0,
        din1 => grp_fu_63_p1,
        ce => grp_fu_63_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_63_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U3 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_67_p0,
        din1 => grp_fu_67_p1,
        ce => grp_fu_67_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_67_p2);

    fcmp_32ns_32ns_1_2_no_dsp_0_U4 : component bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_71_p0,
        din1 => grp_fu_71_p1,
        ce => grp_fu_71_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_71_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                    abs_val_1_reg_489(30 downto 0) <= abs_val_1_fu_159_p1(30 downto 0);
                    abs_val_2_reg_512(30 downto 0) <= abs_val_2_fu_263_p1(30 downto 0);
                    abs_val_3_reg_535(30 downto 0) <= abs_val_3_fu_367_p1(30 downto 0);
                    abs_val_reg_466(30 downto 0) <= abs_val_fu_95_p1(30 downto 0);
                arr_1_val_read_reg_461 <= arr_1_val_int_reg;
                arr_2_val_read_reg_456 <= arr_2_val_int_reg;
                arr_2_val_read_reg_456_pp0_iter1_reg <= arr_2_val_read_reg_456;
                arr_3_val_read_reg_451 <= arr_3_val_int_reg;
                arr_3_val_read_reg_451_pp0_iter1_reg <= arr_3_val_read_reg_451;
                arr_3_val_read_reg_451_pp0_iter2_reg <= arr_3_val_read_reg_451_pp0_iter1_reg;
                icmp_ln22_10_reg_541 <= icmp_ln22_10_fu_382_p2;
                icmp_ln22_11_reg_546 <= icmp_ln22_11_fu_388_p2;
                icmp_ln22_1_reg_477 <= icmp_ln22_1_fu_116_p2;
                icmp_ln22_2_reg_495 <= icmp_ln22_2_fu_174_p2;
                icmp_ln22_3_reg_500 <= icmp_ln22_3_fu_180_p2;
                icmp_ln22_6_reg_518 <= icmp_ln22_6_fu_278_p2;
                icmp_ln22_7_reg_523 <= icmp_ln22_7_fu_284_p2;
                icmp_ln22_reg_472 <= icmp_ln22_fu_110_p2;
                    max_val_1_reg_482(30 downto 0) <= max_val_1_fu_132_p3(30 downto 0);
                    max_val_3_reg_505(30 downto 0) <= max_val_3_fu_237_p3(30 downto 0);
                    max_val_5_reg_528(30 downto 0) <= max_val_5_fu_341_p3(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                    ap_return_int_reg(30 downto 0) <= max_val_7_fu_445_p3(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                arr_0_val_int_reg <= arr_0_val;
                arr_1_val_int_reg <= arr_1_val;
                arr_2_val_int_reg <= arr_2_val;
                arr_3_val_int_reg <= arr_3_val;
            end if;
        end if;
    end process;
    abs_val_reg_466(31) <= '0';
    max_val_1_reg_482(31) <= '0';
    abs_val_1_reg_489(31) <= '0';
    max_val_3_reg_505(31) <= '0';
    abs_val_2_reg_512(31) <= '0';
    max_val_5_reg_528(31) <= '0';
    abs_val_3_reg_535(31) <= '0';
    ap_return_int_reg(31) <= '0';
    abs_val_1_fu_159_p1 <= t_3_fu_151_p3;
    abs_val_2_fu_263_p1 <= t_4_fu_255_p3;
    abs_val_3_fu_367_p1 <= t_5_fu_359_p3;
    abs_val_fu_95_p1 <= t_fu_87_p3;
    and_ln22_1_fu_225_p2 <= (or_ln22_2_fu_219_p2 and or_ln22_1_fu_203_p2);
    and_ln22_2_fu_231_p2 <= (grp_fu_63_p2 and and_ln22_1_fu_225_p2);
    and_ln22_3_fu_329_p2 <= (or_ln22_4_fu_323_p2 and or_ln22_3_fu_307_p2);
    and_ln22_4_fu_335_p2 <= (grp_fu_67_p2 and and_ln22_3_fu_329_p2);
    and_ln22_5_fu_433_p2 <= (or_ln22_6_fu_427_p2 and or_ln22_5_fu_411_p2);
    and_ln22_6_fu_439_p2 <= (grp_fu_71_p2 and and_ln22_5_fu_433_p2);
    and_ln22_fu_126_p2 <= (or_ln22_fu_122_p2 and grp_fu_58_p2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(max_val_7_fu_445_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= max_val_7_fu_445_p3;
        else 
            ap_return <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bitcast_ln22_1_fu_290_p1 <= max_val_3_reg_505;
    bitcast_ln22_2_fu_394_p1 <= max_val_5_reg_528;
    bitcast_ln22_fu_186_p1 <= max_val_1_reg_482;
    data_2_fu_140_p1 <= arr_1_val_read_reg_461;
    data_3_fu_244_p1 <= arr_2_val_read_reg_456_pp0_iter1_reg;
    data_4_fu_348_p1 <= arr_3_val_read_reg_451_pp0_iter2_reg;
    data_fu_75_p1 <= arr_0_val_int_reg;

    grp_fu_58_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_58_ce <= ap_const_logic_1;
        else 
            grp_fu_58_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_58_p0 <= t_fu_87_p3;

    grp_fu_63_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_63_ce <= ap_const_logic_1;
        else 
            grp_fu_63_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_63_p0 <= t_3_fu_151_p3;
    grp_fu_63_p1 <= 
        abs_val_reg_466 when (and_ln22_fu_126_p2(0) = '1') else 
        ap_const_lv32_0;

    grp_fu_67_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_67_ce <= ap_const_logic_1;
        else 
            grp_fu_67_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_67_p0 <= t_4_fu_255_p3;
    grp_fu_67_p1 <= 
        abs_val_1_reg_489 when (and_ln22_2_fu_231_p2(0) = '1') else 
        max_val_1_reg_482;

    grp_fu_71_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_71_ce <= ap_const_logic_1;
        else 
            grp_fu_71_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_71_p0 <= t_5_fu_359_p3;
    grp_fu_71_p1 <= 
        abs_val_2_reg_512 when (and_ln22_4_fu_335_p2(0) = '1') else 
        max_val_3_reg_505;
    icmp_ln22_10_fu_382_p2 <= "0" when (tmp_3_fu_372_p4 = ap_const_lv8_FF) else "1";
    icmp_ln22_11_fu_388_p2 <= "1" when (trunc_ln22_5_fu_355_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_12_fu_415_p2 <= "0" when (tmp_7_fu_397_p4 = ap_const_lv8_FF) else "1";
    icmp_ln22_13_fu_421_p2 <= "1" when (trunc_ln22_6_fu_407_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_1_fu_116_p2 <= "1" when (trunc_ln22_fu_83_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_2_fu_174_p2 <= "0" when (tmp_4_fu_164_p4 = ap_const_lv8_FF) else "1";
    icmp_ln22_3_fu_180_p2 <= "1" when (trunc_ln22_1_fu_147_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_4_fu_207_p2 <= "0" when (tmp_5_fu_189_p4 = ap_const_lv8_FF) else "1";
    icmp_ln22_5_fu_213_p2 <= "1" when (trunc_ln22_2_fu_199_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_6_fu_278_p2 <= "0" when (tmp_8_fu_268_p4 = ap_const_lv8_FF) else "1";
    icmp_ln22_7_fu_284_p2 <= "1" when (trunc_ln22_3_fu_251_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_8_fu_311_p2 <= "0" when (tmp_9_fu_293_p4 = ap_const_lv8_FF) else "1";
    icmp_ln22_9_fu_317_p2 <= "1" when (trunc_ln22_4_fu_303_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_fu_110_p2 <= "0" when (tmp_1_fu_100_p4 = ap_const_lv8_FF) else "1";
    max_val_1_fu_132_p3 <= 
        abs_val_reg_466 when (and_ln22_fu_126_p2(0) = '1') else 
        ap_const_lv32_0;
    max_val_3_fu_237_p3 <= 
        abs_val_1_reg_489 when (and_ln22_2_fu_231_p2(0) = '1') else 
        max_val_1_reg_482;
    max_val_5_fu_341_p3 <= 
        abs_val_2_reg_512 when (and_ln22_4_fu_335_p2(0) = '1') else 
        max_val_3_reg_505;
    max_val_7_fu_445_p3 <= 
        abs_val_3_reg_535 when (and_ln22_6_fu_439_p2(0) = '1') else 
        max_val_5_reg_528;
    or_ln22_1_fu_203_p2 <= (icmp_ln22_3_reg_500 or icmp_ln22_2_reg_495);
    or_ln22_2_fu_219_p2 <= (icmp_ln22_5_fu_213_p2 or icmp_ln22_4_fu_207_p2);
    or_ln22_3_fu_307_p2 <= (icmp_ln22_7_reg_523 or icmp_ln22_6_reg_518);
    or_ln22_4_fu_323_p2 <= (icmp_ln22_9_fu_317_p2 or icmp_ln22_8_fu_311_p2);
    or_ln22_5_fu_411_p2 <= (icmp_ln22_11_reg_546 or icmp_ln22_10_reg_541);
    or_ln22_6_fu_427_p2 <= (icmp_ln22_13_fu_421_p2 or icmp_ln22_12_fu_415_p2);
    or_ln22_fu_122_p2 <= (icmp_ln22_reg_472 or icmp_ln22_1_reg_477);
    t_3_fu_151_p3 <= (ap_const_lv1_0 & trunc_ln313_1_fu_143_p1);
    t_4_fu_255_p3 <= (ap_const_lv1_0 & trunc_ln313_2_fu_247_p1);
    t_5_fu_359_p3 <= (ap_const_lv1_0 & trunc_ln313_3_fu_351_p1);
    t_fu_87_p3 <= (ap_const_lv1_0 & trunc_ln313_fu_79_p1);
    tmp_1_fu_100_p4 <= data_fu_75_p1(30 downto 23);
    tmp_3_fu_372_p4 <= data_4_fu_348_p1(30 downto 23);
    tmp_4_fu_164_p4 <= data_2_fu_140_p1(30 downto 23);
    tmp_5_fu_189_p4 <= bitcast_ln22_fu_186_p1(30 downto 23);
    tmp_7_fu_397_p4 <= bitcast_ln22_2_fu_394_p1(30 downto 23);
    tmp_8_fu_268_p4 <= data_3_fu_244_p1(30 downto 23);
    tmp_9_fu_293_p4 <= bitcast_ln22_1_fu_290_p1(30 downto 23);
    trunc_ln22_1_fu_147_p1 <= data_2_fu_140_p1(23 - 1 downto 0);
    trunc_ln22_2_fu_199_p1 <= bitcast_ln22_fu_186_p1(23 - 1 downto 0);
    trunc_ln22_3_fu_251_p1 <= data_3_fu_244_p1(23 - 1 downto 0);
    trunc_ln22_4_fu_303_p1 <= bitcast_ln22_1_fu_290_p1(23 - 1 downto 0);
    trunc_ln22_5_fu_355_p1 <= data_4_fu_348_p1(23 - 1 downto 0);
    trunc_ln22_6_fu_407_p1 <= bitcast_ln22_2_fu_394_p1(23 - 1 downto 0);
    trunc_ln22_fu_83_p1 <= data_fu_75_p1(23 - 1 downto 0);
    trunc_ln313_1_fu_143_p1 <= data_2_fu_140_p1(31 - 1 downto 0);
    trunc_ln313_2_fu_247_p1 <= data_3_fu_244_p1(31 - 1 downto 0);
    trunc_ln313_3_fu_351_p1 <= data_4_fu_348_p1(31 - 1 downto 0);
    trunc_ln313_fu_79_p1 <= data_fu_75_p1(31 - 1 downto 0);
end behav;
