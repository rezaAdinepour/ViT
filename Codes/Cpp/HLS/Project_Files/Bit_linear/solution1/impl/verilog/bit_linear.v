// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bit_linear_bit_linear,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=72,HLS_SYN_TPT=3,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=10839,HLS_SYN_LUT=9935,HLS_VERSION=2023_2}" *)

module bit_linear (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_0_address1,
        input_0_ce1,
        input_0_q1,
        input_1_address0,
        input_1_ce0,
        input_1_q0,
        input_1_address1,
        input_1_ce1,
        input_1_q1,
        input_2_address0,
        input_2_ce0,
        input_2_q0,
        input_2_address1,
        input_2_ce1,
        input_2_q1,
        input_3_address0,
        input_3_ce0,
        input_3_q0,
        input_3_address1,
        input_3_ce1,
        input_3_q1,
        weight_0_address0,
        weight_0_ce0,
        weight_0_q0,
        weight_0_address1,
        weight_0_ce1,
        weight_0_q1,
        weight_1_address0,
        weight_1_ce0,
        weight_1_q0,
        weight_1_address1,
        weight_1_ce1,
        weight_1_q1,
        output_0_address0,
        output_0_ce0,
        output_0_we0,
        output_0_d0,
        output_0_address1,
        output_0_ce1,
        output_0_we1,
        output_0_d1,
        output_1_address0,
        output_1_ce0,
        output_1_we0,
        output_1_d0,
        output_1_address1,
        output_1_ce1,
        output_1_we1,
        output_1_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [0:0] input_0_address1;
output   input_0_ce1;
input  [31:0] input_0_q1;
output  [0:0] input_1_address0;
output   input_1_ce0;
input  [31:0] input_1_q0;
output  [0:0] input_1_address1;
output   input_1_ce1;
input  [31:0] input_1_q1;
output  [0:0] input_2_address0;
output   input_2_ce0;
input  [31:0] input_2_q0;
output  [0:0] input_2_address1;
output   input_2_ce1;
input  [31:0] input_2_q1;
output  [0:0] input_3_address0;
output   input_3_ce0;
input  [31:0] input_3_q0;
output  [0:0] input_3_address1;
output   input_3_ce1;
input  [31:0] input_3_q1;
output  [1:0] weight_0_address0;
output   weight_0_ce0;
input  [31:0] weight_0_q0;
output  [1:0] weight_0_address1;
output   weight_0_ce1;
input  [31:0] weight_0_q1;
output  [1:0] weight_1_address0;
output   weight_1_ce0;
input  [31:0] weight_1_q0;
output  [1:0] weight_1_address1;
output   weight_1_ce1;
input  [31:0] weight_1_q1;
output  [0:0] output_0_address0;
output   output_0_ce0;
output   output_0_we0;
output  [31:0] output_0_d0;
output  [0:0] output_0_address1;
output   output_0_ce1;
output   output_0_we1;
output  [31:0] output_0_d1;
output  [0:0] output_1_address0;
output   output_1_ce0;
output   output_1_we0;
output  [31:0] output_1_d0;
output  [0:0] output_1_address1;
output   output_1_ce1;
output   output_1_we1;
output  [31:0] output_1_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_0_ce0;
reg input_0_ce1;
reg input_1_ce0;
reg input_1_ce1;
reg input_2_ce0;
reg input_2_ce1;
reg input_3_ce0;
reg input_3_ce1;
reg[1:0] weight_0_address0;
reg weight_0_ce0;
reg[1:0] weight_0_address1;
reg weight_0_ce1;
reg[1:0] weight_1_address0;
reg weight_1_ce0;
reg[1:0] weight_1_address1;
reg weight_1_ce1;
reg output_0_ce0;
reg output_0_we0;
reg output_0_ce1;
reg output_0_we1;
reg output_1_ce0;
reg output_1_we0;
reg output_1_ce1;
reg output_1_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_subdone;
wire   [31:0] grp_find_max_abs_fu_338_ap_return;
reg   [31:0] reg_597;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] grp_fu_455_p2;
reg   [31:0] reg_602;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] grp_generic_round_float_s_fu_373_ap_return;
reg   [31:0] reg_609;
wire   [31:0] grp_generic_round_float_s_fu_364_ap_return;
reg   [31:0] reg_618;
wire   [31:0] grp_generic_round_float_s_fu_382_ap_return;
reg   [31:0] reg_626;
wire   [31:0] empty_fu_634_p1;
reg   [31:0] empty_reg_2070;
reg   [31:0] empty_reg_2070_pp0_iter1_reg;
reg   [31:0] empty_reg_2070_pp0_iter2_reg;
reg   [31:0] empty_reg_2070_pp0_iter3_reg;
reg   [31:0] empty_reg_2070_pp0_iter4_reg;
reg   [31:0] input_0_load_1_reg_2076;
wire   [31:0] empty_7_fu_639_p1;
reg   [31:0] empty_7_reg_2081;
reg   [31:0] empty_7_reg_2081_pp0_iter1_reg;
reg   [31:0] empty_7_reg_2081_pp0_iter2_reg;
reg   [31:0] empty_7_reg_2081_pp0_iter3_reg;
reg   [31:0] empty_7_reg_2081_pp0_iter4_reg;
reg   [31:0] input_1_load_1_reg_2087;
wire   [31:0] empty_9_fu_644_p1;
reg   [31:0] empty_9_reg_2092;
reg   [31:0] empty_9_reg_2092_pp0_iter1_reg;
reg   [31:0] empty_9_reg_2092_pp0_iter2_reg;
reg   [31:0] empty_9_reg_2092_pp0_iter3_reg;
reg   [31:0] empty_9_reg_2092_pp0_iter4_reg;
reg   [31:0] input_2_load_1_reg_2098;
wire   [31:0] empty_11_fu_649_p1;
reg   [31:0] empty_11_reg_2103;
reg   [31:0] empty_11_reg_2103_pp0_iter1_reg;
reg   [31:0] empty_11_reg_2103_pp0_iter2_reg;
reg   [31:0] empty_11_reg_2103_pp0_iter3_reg;
reg   [31:0] empty_11_reg_2103_pp0_iter4_reg;
reg   [31:0] input_3_load_1_reg_2109;
reg   [31:0] data_reg_2114;
reg   [31:0] data_reg_2114_pp0_iter1_reg;
reg   [31:0] data_reg_2114_pp0_iter2_reg;
reg   [31:0] data_reg_2114_pp0_iter3_reg;
reg   [31:0] data_reg_2114_pp0_iter4_reg;
reg   [31:0] data_reg_2114_pp0_iter5_reg;
reg   [31:0] data_reg_2114_pp0_iter6_reg;
reg   [31:0] data_reg_2114_pp0_iter7_reg;
reg   [31:0] data_reg_2114_pp0_iter8_reg;
reg   [31:0] data_reg_2114_pp0_iter9_reg;
reg   [31:0] data_reg_2114_pp0_iter10_reg;
reg   [31:0] data_reg_2114_pp0_iter11_reg;
reg   [31:0] data_reg_2114_pp0_iter12_reg;
reg   [31:0] data_reg_2114_pp0_iter13_reg;
reg   [31:0] data_reg_2114_pp0_iter14_reg;
wire   [30:0] trunc_ln313_fu_654_p1;
reg   [30:0] trunc_ln313_reg_2119;
reg   [31:0] data_13_reg_2124;
reg   [31:0] data_13_reg_2124_pp0_iter1_reg;
reg   [31:0] data_13_reg_2124_pp0_iter2_reg;
reg   [31:0] data_13_reg_2124_pp0_iter3_reg;
reg   [31:0] data_13_reg_2124_pp0_iter4_reg;
reg   [31:0] data_13_reg_2124_pp0_iter5_reg;
reg   [31:0] data_13_reg_2124_pp0_iter6_reg;
reg   [31:0] data_13_reg_2124_pp0_iter7_reg;
reg   [31:0] data_13_reg_2124_pp0_iter8_reg;
reg   [31:0] data_13_reg_2124_pp0_iter9_reg;
reg   [31:0] data_13_reg_2124_pp0_iter10_reg;
reg   [31:0] data_13_reg_2124_pp0_iter11_reg;
reg   [31:0] data_13_reg_2124_pp0_iter12_reg;
reg   [31:0] data_13_reg_2124_pp0_iter13_reg;
reg   [31:0] data_13_reg_2124_pp0_iter14_reg;
wire   [30:0] trunc_ln313_4_fu_658_p1;
reg   [30:0] trunc_ln313_4_reg_2129;
reg   [30:0] trunc_ln313_4_reg_2129_pp0_iter1_reg;
reg   [31:0] data_14_reg_2134;
reg   [31:0] data_14_reg_2134_pp0_iter1_reg;
reg   [31:0] data_14_reg_2134_pp0_iter2_reg;
reg   [31:0] data_14_reg_2134_pp0_iter3_reg;
reg   [31:0] data_14_reg_2134_pp0_iter4_reg;
reg   [31:0] data_14_reg_2134_pp0_iter5_reg;
reg   [31:0] data_14_reg_2134_pp0_iter6_reg;
reg   [31:0] data_14_reg_2134_pp0_iter7_reg;
reg   [31:0] data_14_reg_2134_pp0_iter8_reg;
reg   [31:0] data_14_reg_2134_pp0_iter9_reg;
reg   [31:0] data_14_reg_2134_pp0_iter10_reg;
reg   [31:0] data_14_reg_2134_pp0_iter11_reg;
reg   [31:0] data_14_reg_2134_pp0_iter12_reg;
reg   [31:0] data_14_reg_2134_pp0_iter13_reg;
reg   [31:0] data_14_reg_2134_pp0_iter14_reg;
wire   [30:0] trunc_ln313_5_fu_662_p1;
reg   [30:0] trunc_ln313_5_reg_2139;
reg   [30:0] trunc_ln313_5_reg_2139_pp0_iter1_reg;
reg   [30:0] trunc_ln313_5_reg_2139_pp0_iter2_reg;
reg   [31:0] data_15_reg_2144;
reg   [31:0] data_15_reg_2144_pp0_iter1_reg;
reg   [31:0] data_15_reg_2144_pp0_iter2_reg;
reg   [31:0] data_15_reg_2144_pp0_iter3_reg;
reg   [31:0] data_15_reg_2144_pp0_iter4_reg;
reg   [31:0] data_15_reg_2144_pp0_iter5_reg;
reg   [31:0] data_15_reg_2144_pp0_iter6_reg;
reg   [31:0] data_15_reg_2144_pp0_iter7_reg;
reg   [31:0] data_15_reg_2144_pp0_iter8_reg;
reg   [31:0] data_15_reg_2144_pp0_iter9_reg;
reg   [31:0] data_15_reg_2144_pp0_iter10_reg;
reg   [31:0] data_15_reg_2144_pp0_iter11_reg;
reg   [31:0] data_15_reg_2144_pp0_iter12_reg;
reg   [31:0] data_15_reg_2144_pp0_iter13_reg;
reg   [31:0] data_15_reg_2144_pp0_iter14_reg;
wire   [30:0] trunc_ln313_6_fu_666_p1;
reg   [30:0] trunc_ln313_6_reg_2149;
reg   [30:0] trunc_ln313_6_reg_2149_pp0_iter1_reg;
reg   [30:0] trunc_ln313_6_reg_2149_pp0_iter2_reg;
reg   [30:0] trunc_ln313_6_reg_2149_pp0_iter3_reg;
wire   [31:0] empty_6_fu_670_p1;
reg   [31:0] empty_6_reg_2174;
reg   [31:0] empty_6_reg_2174_pp0_iter1_reg;
reg   [31:0] empty_6_reg_2174_pp0_iter2_reg;
reg   [31:0] empty_6_reg_2174_pp0_iter3_reg;
reg   [31:0] empty_6_reg_2174_pp0_iter4_reg;
wire   [31:0] empty_8_fu_674_p1;
reg   [31:0] empty_8_reg_2180;
reg   [31:0] empty_8_reg_2180_pp0_iter1_reg;
reg   [31:0] empty_8_reg_2180_pp0_iter2_reg;
reg   [31:0] empty_8_reg_2180_pp0_iter3_reg;
reg   [31:0] empty_8_reg_2180_pp0_iter4_reg;
wire   [31:0] empty_10_fu_678_p1;
reg   [31:0] empty_10_reg_2186;
reg   [31:0] empty_10_reg_2186_pp0_iter1_reg;
reg   [31:0] empty_10_reg_2186_pp0_iter2_reg;
reg   [31:0] empty_10_reg_2186_pp0_iter3_reg;
reg   [31:0] empty_10_reg_2186_pp0_iter4_reg;
wire   [31:0] empty_12_fu_682_p1;
reg   [31:0] empty_12_reg_2192;
reg   [31:0] empty_12_reg_2192_pp0_iter1_reg;
reg   [31:0] empty_12_reg_2192_pp0_iter2_reg;
reg   [31:0] empty_12_reg_2192_pp0_iter3_reg;
reg   [31:0] empty_12_reg_2192_pp0_iter4_reg;
wire   [31:0] bitcast_ln327_fu_693_p1;
reg   [31:0] data_16_reg_2203;
reg   [31:0] data_16_reg_2203_pp0_iter1_reg;
reg   [31:0] data_16_reg_2203_pp0_iter2_reg;
reg   [31:0] data_16_reg_2203_pp0_iter3_reg;
reg   [31:0] data_16_reg_2203_pp0_iter4_reg;
reg   [31:0] data_16_reg_2203_pp0_iter5_reg;
reg   [31:0] data_16_reg_2203_pp0_iter6_reg;
reg   [31:0] data_16_reg_2203_pp0_iter7_reg;
reg   [31:0] data_16_reg_2203_pp0_iter8_reg;
reg   [31:0] data_16_reg_2203_pp0_iter9_reg;
reg   [31:0] data_16_reg_2203_pp0_iter10_reg;
reg   [31:0] data_16_reg_2203_pp0_iter11_reg;
reg   [31:0] data_16_reg_2203_pp0_iter12_reg;
reg   [31:0] data_16_reg_2203_pp0_iter13_reg;
reg   [31:0] data_16_reg_2203_pp0_iter14_reg;
wire   [30:0] trunc_ln313_7_fu_698_p1;
reg   [30:0] trunc_ln313_7_reg_2208;
reg   [30:0] trunc_ln313_7_reg_2208_pp0_iter1_reg;
reg   [30:0] trunc_ln313_7_reg_2208_pp0_iter2_reg;
reg   [30:0] trunc_ln313_7_reg_2208_pp0_iter3_reg;
reg   [31:0] data_17_reg_2213;
reg   [31:0] data_17_reg_2213_pp0_iter1_reg;
reg   [31:0] data_17_reg_2213_pp0_iter2_reg;
reg   [31:0] data_17_reg_2213_pp0_iter3_reg;
reg   [31:0] data_17_reg_2213_pp0_iter4_reg;
reg   [31:0] data_17_reg_2213_pp0_iter5_reg;
reg   [31:0] data_17_reg_2213_pp0_iter6_reg;
reg   [31:0] data_17_reg_2213_pp0_iter7_reg;
reg   [31:0] data_17_reg_2213_pp0_iter8_reg;
reg   [31:0] data_17_reg_2213_pp0_iter9_reg;
reg   [31:0] data_17_reg_2213_pp0_iter10_reg;
reg   [31:0] data_17_reg_2213_pp0_iter11_reg;
reg   [31:0] data_17_reg_2213_pp0_iter12_reg;
reg   [31:0] data_17_reg_2213_pp0_iter13_reg;
reg   [31:0] data_17_reg_2213_pp0_iter14_reg;
wire   [30:0] trunc_ln313_8_fu_702_p1;
reg   [30:0] trunc_ln313_8_reg_2218;
reg   [30:0] trunc_ln313_8_reg_2218_pp0_iter1_reg;
reg   [30:0] trunc_ln313_8_reg_2218_pp0_iter2_reg;
reg   [30:0] trunc_ln313_8_reg_2218_pp0_iter3_reg;
reg   [30:0] trunc_ln313_8_reg_2218_pp0_iter4_reg;
reg   [31:0] data_18_reg_2223;
reg   [31:0] data_18_reg_2223_pp0_iter1_reg;
reg   [31:0] data_18_reg_2223_pp0_iter2_reg;
reg   [31:0] data_18_reg_2223_pp0_iter3_reg;
reg   [31:0] data_18_reg_2223_pp0_iter4_reg;
reg   [31:0] data_18_reg_2223_pp0_iter5_reg;
reg   [31:0] data_18_reg_2223_pp0_iter6_reg;
reg   [31:0] data_18_reg_2223_pp0_iter7_reg;
reg   [31:0] data_18_reg_2223_pp0_iter8_reg;
reg   [31:0] data_18_reg_2223_pp0_iter9_reg;
reg   [31:0] data_18_reg_2223_pp0_iter10_reg;
reg   [31:0] data_18_reg_2223_pp0_iter11_reg;
reg   [31:0] data_18_reg_2223_pp0_iter12_reg;
reg   [31:0] data_18_reg_2223_pp0_iter13_reg;
reg   [31:0] data_18_reg_2223_pp0_iter14_reg;
wire   [30:0] trunc_ln313_9_fu_706_p1;
reg   [30:0] trunc_ln313_9_reg_2228;
reg   [30:0] trunc_ln313_9_reg_2228_pp0_iter1_reg;
reg   [30:0] trunc_ln313_9_reg_2228_pp0_iter2_reg;
reg   [30:0] trunc_ln313_9_reg_2228_pp0_iter3_reg;
reg   [30:0] trunc_ln313_9_reg_2228_pp0_iter4_reg;
reg   [30:0] trunc_ln313_9_reg_2228_pp0_iter5_reg;
reg   [31:0] data_19_reg_2233;
reg   [31:0] data_19_reg_2233_pp0_iter1_reg;
reg   [31:0] data_19_reg_2233_pp0_iter2_reg;
reg   [31:0] data_19_reg_2233_pp0_iter3_reg;
reg   [31:0] data_19_reg_2233_pp0_iter4_reg;
reg   [31:0] data_19_reg_2233_pp0_iter5_reg;
reg   [31:0] data_19_reg_2233_pp0_iter6_reg;
reg   [31:0] data_19_reg_2233_pp0_iter7_reg;
reg   [31:0] data_19_reg_2233_pp0_iter8_reg;
reg   [31:0] data_19_reg_2233_pp0_iter9_reg;
reg   [31:0] data_19_reg_2233_pp0_iter10_reg;
reg   [31:0] data_19_reg_2233_pp0_iter11_reg;
reg   [31:0] data_19_reg_2233_pp0_iter12_reg;
reg   [31:0] data_19_reg_2233_pp0_iter13_reg;
reg   [31:0] data_19_reg_2233_pp0_iter14_reg;
wire   [30:0] trunc_ln313_10_fu_710_p1;
reg   [30:0] trunc_ln313_10_reg_2238;
reg   [30:0] trunc_ln313_10_reg_2238_pp0_iter1_reg;
reg   [30:0] trunc_ln313_10_reg_2238_pp0_iter2_reg;
reg   [30:0] trunc_ln313_10_reg_2238_pp0_iter3_reg;
reg   [30:0] trunc_ln313_10_reg_2238_pp0_iter4_reg;
reg   [30:0] trunc_ln313_10_reg_2238_pp0_iter5_reg;
reg   [30:0] trunc_ln313_10_reg_2238_pp0_iter6_reg;
wire   [31:0] grp_fu_419_p2;
reg   [31:0] sum_reg_2243;
wire   [31:0] bitcast_ln327_1_fu_721_p1;
wire   [31:0] select_ln47_fu_768_p3;
reg   [31:0] select_ln47_reg_2253;
wire   [31:0] grp_fu_424_p2;
reg   [31:0] sum_1_reg_2258;
wire   [31:0] select_ln47_1_fu_818_p3;
reg   [31:0] select_ln47_1_reg_2263;
wire   [31:0] bitcast_ln327_2_fu_833_p1;
wire   [31:0] grp_fu_428_p2;
reg   [31:0] sum_2_reg_2273;
wire   [31:0] bitcast_ln327_3_fu_845_p1;
wire   [31:0] grp_fu_432_p2;
reg   [31:0] sum_3_reg_2283;
wire   [31:0] grp_fu_508_p2;
reg   [31:0] scale_reg_2288;
reg   [31:0] scale_reg_2288_pp0_iter5_reg;
wire   [31:0] bitcast_ln327_4_fu_857_p1;
reg   [31:0] scale_1_reg_2303;
reg   [31:0] scale_1_reg_2303_pp0_iter6_reg;
wire   [31:0] grp_fu_465_p2;
reg   [31:0] scaled_val_2_reg_2314;
wire   [31:0] grp_fu_436_p2;
reg   [31:0] sum_4_reg_2319;
wire   [31:0] res_16_fu_912_p3;
reg   [31:0] res_16_reg_2324;
wire   [31:0] res_17_fu_970_p3;
reg   [31:0] res_17_reg_2329;
wire   [31:0] grp_fu_475_p2;
reg   [31:0] scaled_val_7_reg_2334;
wire   [31:0] bitcast_ln327_5_fu_985_p1;
wire   [31:0] res_18_fu_1040_p3;
reg   [31:0] res_18_reg_2344;
wire   [31:0] res_20_fu_1098_p3;
reg   [31:0] res_20_reg_2349;
wire   [31:0] res_21_fu_1156_p3;
reg   [31:0] res_21_reg_2354;
wire   [31:0] res_19_fu_1214_p3;
reg   [31:0] res_19_reg_2359;
wire   [31:0] res_22_fu_1272_p3;
reg   [31:0] res_22_reg_2364;
wire   [31:0] grp_generic_fmax_float_s_fu_412_ap_return;
reg   [31:0] x_assign_6_reg_2369;
wire   [31:0] grp_fu_440_p2;
reg   [31:0] sum_5_reg_2375;
wire   [31:0] res_23_fu_1328_p3;
reg   [31:0] res_23_reg_2380;
wire   [31:0] bitcast_ln327_6_fu_1343_p1;
wire   [31:0] grp_fu_444_p2;
reg   [31:0] sum_6_reg_2390;
wire   [31:0] bitcast_ln327_7_fu_1355_p1;
wire   [31:0] grp_fu_513_p2;
reg   [31:0] input_quant_reg_2400;
reg   [31:0] input_quant_reg_2400_pp0_iter9_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter10_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter11_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter12_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter13_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter14_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter15_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter16_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter17_reg;
reg   [31:0] input_quant_reg_2400_pp0_iter18_reg;
wire   [31:0] grp_fu_517_p2;
reg   [31:0] input_quant_1_reg_2406;
reg   [31:0] input_quant_1_reg_2406_pp0_iter9_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter10_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter11_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter12_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter13_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter14_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter15_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter16_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter17_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter18_reg;
reg   [31:0] input_quant_1_reg_2406_pp0_iter19_reg;
reg   [31:0] input_quant_2_reg_2412;
reg   [31:0] input_quant_2_reg_2412_pp0_iter9_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter10_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter11_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter12_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter13_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter14_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter15_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter16_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter17_reg;
reg   [31:0] input_quant_2_reg_2412_pp0_iter18_reg;
reg   [31:0] input_quant_4_reg_2418;
reg   [31:0] input_quant_4_reg_2418_pp0_iter9_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter10_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter11_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter12_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter13_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter14_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter15_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter16_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter17_reg;
reg   [31:0] input_quant_4_reg_2418_pp0_iter18_reg;
reg   [31:0] input_quant_5_reg_2424;
reg   [31:0] input_quant_5_reg_2424_pp0_iter9_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter10_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter11_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter12_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter13_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter14_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter15_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter16_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter17_reg;
reg   [31:0] input_quant_5_reg_2424_pp0_iter18_reg;
wire   [31:0] grp_fu_448_p2;
reg   [31:0] sum_7_reg_2430;
reg   [31:0] input_quant_3_reg_2435;
reg   [31:0] input_quant_3_reg_2435_pp0_iter9_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter10_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter11_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter12_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter13_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter14_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter15_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter16_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter17_reg;
reg   [31:0] input_quant_3_reg_2435_pp0_iter18_reg;
reg   [31:0] input_quant_6_reg_2441;
reg   [31:0] input_quant_6_reg_2441_pp0_iter9_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter10_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter11_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter12_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter13_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter14_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter15_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter16_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter17_reg;
reg   [31:0] input_quant_6_reg_2441_pp0_iter18_reg;
wire   [31:0] grp_fu_521_p2;
reg   [31:0] input_quant_7_reg_2447;
reg   [31:0] input_quant_7_reg_2447_pp0_iter10_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter11_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter12_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter13_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter14_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter15_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter16_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter17_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter18_reg;
reg   [31:0] input_quant_7_reg_2447_pp0_iter19_reg;
wire   [0:0] icmp_ln47_4_fu_1378_p2;
reg   [0:0] icmp_ln47_4_reg_2453;
wire   [0:0] icmp_ln47_5_fu_1384_p2;
reg   [0:0] icmp_ln47_5_reg_2458;
wire   [63:0] tmp_7_fu_536_p1;
reg   [63:0] tmp_7_reg_2463;
wire   [63:0] select_ln75_fu_1400_p3;
reg   [63:0] select_ln75_reg_2468;
wire   [63:0] grp_fu_592_p2;
reg   [63:0] div_i8_reg_2473;
wire   [31:0] grp_fu_533_p1;
reg   [31:0] scale_2_reg_2478;
reg   [31:0] scale_2_reg_2478_pp0_iter15_reg;
reg   [31:0] scale_2_reg_2478_pp0_iter16_reg;
wire   [31:0] dc_fu_1407_p1;
wire   [31:0] dc_1_fu_1411_p1;
wire   [31:0] dc_2_fu_1415_p1;
wire   [31:0] dc_3_fu_1419_p1;
wire   [31:0] dc_4_fu_1423_p1;
wire   [31:0] dc_5_fu_1427_p1;
wire   [31:0] dc_6_fu_1431_p1;
wire   [31:0] dc_7_fu_1435_p1;
wire   [31:0] grp_fu_492_p2;
reg   [31:0] p_x_assign_2_reg_2533;
wire   [31:0] grp_fu_496_p2;
reg   [31:0] p_x_assign_3_reg_2538;
wire   [31:0] grp_fu_500_p2;
reg   [31:0] p_x_assign_4_reg_2543;
wire   [31:0] grp_fu_504_p2;
reg   [31:0] p_x_assign_5_reg_2548;
wire   [31:0] grp_generic_round_float_s_fu_391_ap_return;
reg   [31:0] scaled_6_reg_2553;
wire   [31:0] scaled_1_fu_1501_p3;
reg   [31:0] scaled_1_reg_2561;
wire   [31:0] scaled_3_fu_1571_p3;
reg   [31:0] scaled_3_reg_2566;
wire   [31:0] scaled_5_fu_1641_p3;
reg   [31:0] scaled_5_reg_2571;
wire   [0:0] grp_fu_578_p2;
reg   [0:0] tmp_25_reg_2576;
reg   [31:0] scaled_10_reg_2581;
wire   [31:0] scaled_7_fu_1709_p3;
reg   [31:0] scaled_7_reg_2589;
wire   [31:0] scaled_9_fu_1778_p3;
reg   [31:0] scaled_9_reg_2594;
wire   [31:0] scaled_11_fu_1847_p3;
reg   [31:0] scaled_11_reg_2599;
wire   [31:0] scaled_13_fu_1916_p3;
reg   [31:0] scaled_13_reg_2604;
wire   [31:0] scaled_15_fu_1986_p3;
reg   [31:0] scaled_15_reg_2609;
reg   [31:0] weight_quantized_reg_2614;
wire   [31:0] grp_fu_525_p2;
reg   [31:0] weight_quantized_1_reg_2620;
wire   [31:0] grp_fu_529_p2;
reg   [31:0] weight_quantized_2_reg_2626;
reg   [31:0] weight_quantized_3_reg_2632;
reg   [31:0] weight_quantized_4_reg_2638;
reg   [31:0] weight_quantized_5_reg_2644;
reg   [31:0] weight_quantized_6_reg_2650;
reg   [31:0] weight_quantized_7_reg_2656;
wire   [31:0] grp_fu_460_p2;
reg   [31:0] mul_i_reg_2662;
reg   [31:0] mul_124_i_reg_2667;
reg   [31:0] mul_124_i_reg_2667_pp0_iter20_reg;
wire   [31:0] grp_fu_470_p2;
reg   [31:0] mul_119_i_reg_2672;
reg   [31:0] mul_1_i_reg_2677;
wire   [31:0] grp_fu_482_p2;
reg   [31:0] mul_1_110_i_reg_2682;
reg   [31:0] mul_1_110_i_reg_2682_pp0_iter20_reg;
wire   [31:0] grp_fu_487_p2;
reg   [31:0] mul_1_1_i_reg_2687;
reg   [31:0] mul_2_i_reg_2692;
reg   [31:0] mul_2_i_reg_2692_pp0_iter20_reg;
reg   [31:0] mul_2_i_reg_2692_pp0_iter21_reg;
reg   [31:0] mul_119_1_i_reg_2697;
reg   [31:0] mul_119_2_i_reg_2702;
reg   [31:0] mul_119_2_i_reg_2702_pp0_iter20_reg;
reg   [31:0] mul_119_2_i_reg_2702_pp0_iter21_reg;
reg   [31:0] mul_1_2_i_reg_2707;
reg   [31:0] mul_1_2_i_reg_2707_pp0_iter20_reg;
reg   [31:0] mul_1_2_i_reg_2707_pp0_iter21_reg;
reg   [31:0] mul_1_1_1_i_reg_2712;
reg   [31:0] mul_1_1_2_i_reg_2717;
reg   [31:0] mul_1_1_2_i_reg_2717_pp0_iter20_reg;
reg   [31:0] mul_1_1_2_i_reg_2717_pp0_iter21_reg;
reg   [31:0] add_i_reg_2722;
reg   [31:0] mul_3_i_reg_2727;
reg   [31:0] mul_3_i_reg_2727_pp0_iter21_reg;
reg   [31:0] mul_3_i_reg_2727_pp0_iter22_reg;
reg   [31:0] add_120_i_reg_2732;
reg   [31:0] mul_119_3_i_reg_2737;
reg   [31:0] mul_119_3_i_reg_2737_pp0_iter21_reg;
reg   [31:0] mul_119_3_i_reg_2737_pp0_iter22_reg;
reg   [31:0] add_1_i_reg_2742;
reg   [31:0] mul_1_3_i_reg_2747;
reg   [31:0] mul_1_3_i_reg_2747_pp0_iter21_reg;
reg   [31:0] mul_1_3_i_reg_2747_pp0_iter22_reg;
reg   [31:0] add_1_1_i_reg_2752;
reg   [31:0] mul_1_1_3_i_reg_2757;
reg   [31:0] mul_1_1_3_i_reg_2757_pp0_iter21_reg;
reg   [31:0] mul_1_1_3_i_reg_2757_pp0_iter22_reg;
reg   [31:0] add_125_i_reg_2762;
reg   [31:0] add_120_1_i_reg_2767;
reg   [31:0] add_1_111_i_reg_2772;
reg   [31:0] add_1_1_1_i_reg_2777;
reg   [31:0] add_2_i_reg_2782;
reg   [31:0] add_120_2_i_reg_2787;
reg   [31:0] add_1_2_i_reg_2792;
reg   [31:0] add_1_1_2_i_reg_2797;
reg   [31:0] add_3_i_reg_2802;
reg   [31:0] add_120_3_i_reg_2807;
reg   [31:0] add_1_3_i_reg_2812;
reg   [31:0] add_1_1_3_i_reg_2817;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg   [31:0] grp_find_max_abs_fu_338_arr_0_val;
reg   [31:0] grp_find_max_abs_fu_338_arr_1_val;
reg   [31:0] grp_find_max_abs_fu_338_arr_2_val;
reg   [31:0] grp_find_max_abs_fu_338_arr_3_val;
reg    grp_find_max_abs_fu_338_ap_ce;
wire    ap_block_pp0_stage1_11001_ignoreCallOp110;
wire    ap_block_pp0_stage2_11001_ignoreCallOp131;
wire    ap_block_pp0_stage0_11001_ignoreCallOp144;
wire    grp_generic_round_float_s_fu_346_ap_start;
wire    grp_generic_round_float_s_fu_346_ap_done;
wire    grp_generic_round_float_s_fu_346_ap_idle;
wire    grp_generic_round_float_s_fu_346_ap_ready;
reg   [31:0] grp_generic_round_float_s_fu_346_x;
wire   [31:0] grp_generic_round_float_s_fu_346_ap_return;
wire    grp_generic_round_float_s_fu_355_ap_start;
wire    grp_generic_round_float_s_fu_355_ap_done;
wire    grp_generic_round_float_s_fu_355_ap_idle;
wire    grp_generic_round_float_s_fu_355_ap_ready;
reg   [31:0] grp_generic_round_float_s_fu_355_x;
wire   [31:0] grp_generic_round_float_s_fu_355_ap_return;
wire    grp_generic_round_float_s_fu_364_ap_start;
wire    grp_generic_round_float_s_fu_364_ap_done;
wire    grp_generic_round_float_s_fu_364_ap_idle;
wire    grp_generic_round_float_s_fu_364_ap_ready;
reg   [31:0] grp_generic_round_float_s_fu_364_x;
wire    grp_generic_round_float_s_fu_373_ap_start;
wire    grp_generic_round_float_s_fu_373_ap_done;
wire    grp_generic_round_float_s_fu_373_ap_idle;
wire    grp_generic_round_float_s_fu_373_ap_ready;
reg   [31:0] grp_generic_round_float_s_fu_373_x;
wire    grp_generic_round_float_s_fu_382_ap_start;
wire    grp_generic_round_float_s_fu_382_ap_done;
wire    grp_generic_round_float_s_fu_382_ap_idle;
wire    grp_generic_round_float_s_fu_382_ap_ready;
reg   [31:0] grp_generic_round_float_s_fu_382_x;
wire    grp_generic_round_float_s_fu_391_ap_start;
wire    grp_generic_round_float_s_fu_391_ap_done;
wire    grp_generic_round_float_s_fu_391_ap_idle;
wire    grp_generic_round_float_s_fu_391_ap_ready;
reg   [31:0] grp_generic_round_float_s_fu_391_x;
wire    grp_generic_fmax_float_s_fu_400_ap_ready;
wire   [31:0] grp_generic_fmax_float_s_fu_400_ap_return;
wire    grp_generic_fmax_float_s_fu_406_ap_ready;
reg   [31:0] grp_generic_fmax_float_s_fu_406_x;
wire   [31:0] grp_generic_fmax_float_s_fu_406_ap_return;
wire    grp_generic_fmax_float_s_fu_412_ap_ready;
reg   [31:0] grp_generic_fmax_float_s_fu_412_x;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
reg    grp_generic_round_float_s_fu_346_ap_start_reg;
wire    ap_block_pp0_stage0;
reg    grp_generic_round_float_s_fu_355_ap_start_reg;
reg    grp_generic_round_float_s_fu_364_ap_start_reg;
reg    grp_generic_round_float_s_fu_373_ap_start_reg;
reg    grp_generic_round_float_s_fu_382_ap_start_reg;
reg    grp_generic_round_float_s_fu_391_ap_start_reg;
reg   [31:0] grp_fu_419_p0;
reg   [31:0] grp_fu_419_p1;
reg   [31:0] grp_fu_424_p0;
reg   [31:0] grp_fu_424_p1;
reg   [31:0] grp_fu_428_p0;
reg   [31:0] grp_fu_428_p1;
reg   [31:0] grp_fu_432_p0;
reg   [31:0] grp_fu_432_p1;
reg   [31:0] grp_fu_436_p0;
reg   [31:0] grp_fu_436_p1;
reg   [31:0] grp_fu_440_p0;
reg   [31:0] grp_fu_440_p1;
reg   [31:0] grp_fu_444_p0;
reg   [31:0] grp_fu_444_p1;
reg   [31:0] grp_fu_448_p0;
reg   [31:0] grp_fu_448_p1;
reg   [31:0] grp_fu_455_p0;
reg   [31:0] grp_fu_455_p1;
reg   [31:0] grp_fu_460_p0;
reg   [31:0] grp_fu_460_p1;
reg   [31:0] grp_fu_465_p0;
reg   [31:0] grp_fu_465_p1;
reg   [31:0] grp_fu_470_p0;
reg   [31:0] grp_fu_470_p1;
reg   [31:0] grp_fu_475_p0;
reg   [31:0] grp_fu_475_p1;
reg   [31:0] grp_fu_482_p0;
reg   [31:0] grp_fu_482_p1;
reg   [31:0] grp_fu_487_p0;
reg   [31:0] grp_fu_487_p1;
reg   [31:0] grp_fu_492_p0;
reg   [31:0] grp_fu_492_p1;
reg   [31:0] grp_fu_496_p0;
reg   [31:0] grp_fu_496_p1;
reg   [31:0] grp_fu_500_p0;
reg   [31:0] grp_fu_500_p1;
reg   [31:0] grp_fu_504_p0;
reg   [31:0] grp_fu_504_p1;
reg   [31:0] grp_fu_508_p0;
reg   [31:0] grp_fu_508_p1;
reg   [31:0] grp_fu_513_p0;
reg   [31:0] grp_fu_513_p1;
reg   [31:0] grp_fu_517_p0;
reg   [31:0] grp_fu_517_p1;
reg   [31:0] grp_fu_521_p0;
reg   [31:0] grp_fu_521_p1;
reg   [31:0] grp_fu_525_p0;
reg   [31:0] grp_fu_525_p1;
reg   [31:0] grp_fu_529_p0;
reg   [31:0] grp_fu_529_p1;
reg   [31:0] grp_fu_539_p0;
reg   [31:0] grp_fu_539_p1;
reg   [31:0] grp_fu_545_p0;
reg   [31:0] grp_fu_545_p1;
reg   [31:0] grp_fu_554_p0;
reg   [31:0] grp_fu_560_p0;
reg   [31:0] grp_fu_566_p0;
reg   [31:0] grp_fu_572_p0;
wire   [31:0] t_fu_686_p3;
wire   [31:0] t_14_fu_714_p3;
wire   [31:0] bitcast_ln47_fu_726_p1;
wire   [7:0] tmp_fu_730_p4;
wire   [22:0] trunc_ln47_fu_740_p1;
wire   [0:0] icmp_ln47_1_fu_750_p2;
wire   [0:0] icmp_ln47_fu_744_p2;
wire   [0:0] or_ln47_fu_756_p2;
wire   [0:0] grp_fu_539_p2;
wire   [0:0] and_ln47_fu_762_p2;
wire   [31:0] bitcast_ln47_1_fu_776_p1;
wire   [7:0] tmp_11_fu_780_p4;
wire   [22:0] trunc_ln47_1_fu_790_p1;
wire   [0:0] icmp_ln47_3_fu_800_p2;
wire   [0:0] icmp_ln47_2_fu_794_p2;
wire   [0:0] or_ln47_1_fu_806_p2;
wire   [0:0] and_ln47_1_fu_812_p2;
wire   [31:0] t_15_fu_826_p3;
wire   [31:0] t_16_fu_838_p3;
wire   [31:0] t_17_fu_850_p3;
wire   [31:0] data_20_fu_862_p1;
wire   [7:0] x_fp_exp_fu_866_p4;
wire   [22:0] x_fp_sig_fu_876_p1;
wire   [0:0] icmp_ln18_fu_880_p2;
wire   [0:0] icmp_ln18_2_fu_886_p2;
wire   [0:0] ymaggreater_fu_898_p2;
wire   [0:0] and_ln18_fu_892_p2;
wire   [31:0] res_fu_904_p3;
wire   [31:0] data_21_fu_920_p1;
wire   [7:0] x_fp_exp_1_fu_924_p4;
wire   [22:0] x_fp_sig_1_fu_934_p1;
wire   [0:0] icmp_ln18_3_fu_938_p2;
wire   [0:0] icmp_ln18_4_fu_944_p2;
wire   [0:0] ymaggreater_2_fu_956_p2;
wire   [0:0] and_ln18_1_fu_950_p2;
wire   [31:0] res_2_fu_962_p3;
wire   [31:0] t_18_fu_978_p3;
wire   [31:0] data_22_fu_990_p1;
wire   [7:0] x_fp_exp_2_fu_994_p4;
wire   [22:0] x_fp_sig_2_fu_1004_p1;
wire   [0:0] icmp_ln18_5_fu_1008_p2;
wire   [0:0] icmp_ln18_6_fu_1014_p2;
wire   [0:0] ymaggreater_3_fu_1026_p2;
wire   [0:0] and_ln18_2_fu_1020_p2;
wire   [31:0] res_4_fu_1032_p3;
wire   [31:0] data_24_fu_1048_p1;
wire   [7:0] x_fp_exp_4_fu_1052_p4;
wire   [22:0] x_fp_sig_4_fu_1062_p1;
wire   [0:0] icmp_ln18_9_fu_1066_p2;
wire   [0:0] icmp_ln18_10_fu_1072_p2;
wire   [0:0] ymaggreater_5_fu_1084_p2;
wire   [0:0] and_ln18_4_fu_1078_p2;
wire   [31:0] res_8_fu_1090_p3;
wire   [31:0] data_25_fu_1106_p1;
wire   [7:0] x_fp_exp_5_fu_1110_p4;
wire   [22:0] x_fp_sig_5_fu_1120_p1;
wire   [0:0] icmp_ln18_11_fu_1124_p2;
wire   [0:0] icmp_ln18_12_fu_1130_p2;
wire   [0:0] ymaggreater_6_fu_1142_p2;
wire   [0:0] and_ln18_5_fu_1136_p2;
wire   [31:0] res_10_fu_1148_p3;
wire   [31:0] data_23_fu_1164_p1;
wire   [7:0] x_fp_exp_3_fu_1168_p4;
wire   [22:0] x_fp_sig_3_fu_1178_p1;
wire   [0:0] icmp_ln18_7_fu_1182_p2;
wire   [0:0] icmp_ln18_8_fu_1188_p2;
wire   [0:0] ymaggreater_4_fu_1200_p2;
wire   [0:0] and_ln18_3_fu_1194_p2;
wire   [31:0] res_6_fu_1206_p3;
wire   [31:0] data_26_fu_1222_p1;
wire   [7:0] x_fp_exp_6_fu_1226_p4;
wire   [22:0] x_fp_sig_6_fu_1236_p1;
wire   [0:0] icmp_ln18_13_fu_1240_p2;
wire   [0:0] icmp_ln18_14_fu_1246_p2;
wire   [0:0] ymaggreater_7_fu_1258_p2;
wire   [0:0] and_ln18_6_fu_1252_p2;
wire   [31:0] res_12_fu_1264_p3;
wire   [31:0] data_27_fu_1280_p1;
wire   [7:0] x_fp_exp_7_fu_1283_p4;
wire   [22:0] x_fp_sig_7_fu_1293_p1;
wire   [0:0] icmp_ln18_15_fu_1297_p2;
wire   [0:0] icmp_ln18_16_fu_1303_p2;
wire   [0:0] ymaggreater_8_fu_1315_p2;
wire   [0:0] and_ln18_7_fu_1309_p2;
wire   [31:0] res_14_fu_1321_p3;
wire   [31:0] t_19_fu_1336_p3;
wire   [31:0] t_20_fu_1348_p3;
wire   [31:0] bitcast_ln47_2_fu_1360_p1;
wire   [7:0] tmp_13_fu_1364_p4;
wire   [22:0] trunc_ln47_2_fu_1374_p1;
wire   [0:0] or_ln47_2_fu_1390_p2;
wire   [0:0] grp_fu_545_p2;
wire   [0:0] and_ln47_2_fu_1394_p2;
wire   [31:0] bitcast_ln86_fu_1439_p1;
wire   [7:0] tmp_15_fu_1443_p4;
wire   [22:0] trunc_ln86_fu_1453_p1;
wire   [0:0] icmp_ln86_1_fu_1463_p2;
wire   [0:0] icmp_ln86_fu_1457_p2;
wire   [0:0] or_ln86_8_fu_1469_p2;
wire   [0:0] and_ln86_fu_1475_p2;
wire   [0:0] and_ln86_1_fu_1481_p2;
wire   [0:0] or_ln86_fu_1495_p2;
wire   [31:0] select_ln86_fu_1487_p3;
wire   [31:0] bitcast_ln86_1_fu_1509_p1;
wire   [7:0] tmp_18_fu_1513_p4;
wire   [22:0] trunc_ln86_1_fu_1523_p1;
wire   [0:0] icmp_ln86_3_fu_1533_p2;
wire   [0:0] icmp_ln86_2_fu_1527_p2;
wire   [0:0] or_ln86_9_fu_1539_p2;
wire   [0:0] grp_fu_554_p2;
wire   [0:0] grp_fu_560_p2;
wire   [0:0] and_ln86_2_fu_1545_p2;
wire   [0:0] and_ln86_3_fu_1551_p2;
wire   [0:0] or_ln86_1_fu_1565_p2;
wire   [31:0] select_ln86_2_fu_1557_p3;
wire   [31:0] bitcast_ln86_2_fu_1579_p1;
wire   [7:0] tmp_21_fu_1583_p4;
wire   [22:0] trunc_ln86_2_fu_1593_p1;
wire   [0:0] icmp_ln86_5_fu_1603_p2;
wire   [0:0] icmp_ln86_4_fu_1597_p2;
wire   [0:0] or_ln86_10_fu_1609_p2;
wire   [0:0] grp_fu_566_p2;
wire   [0:0] grp_fu_572_p2;
wire   [0:0] and_ln86_4_fu_1615_p2;
wire   [0:0] and_ln86_5_fu_1621_p2;
wire   [0:0] or_ln86_2_fu_1635_p2;
wire   [31:0] select_ln86_4_fu_1627_p3;
wire   [31:0] bitcast_ln86_3_fu_1649_p1;
wire   [7:0] tmp_24_fu_1652_p4;
wire   [22:0] trunc_ln86_3_fu_1662_p1;
wire   [0:0] icmp_ln86_7_fu_1672_p2;
wire   [0:0] icmp_ln86_6_fu_1666_p2;
wire   [0:0] or_ln86_11_fu_1678_p2;
wire   [0:0] and_ln86_6_fu_1684_p2;
wire   [0:0] and_ln86_7_fu_1689_p2;
wire   [0:0] or_ln86_3_fu_1703_p2;
wire   [31:0] select_ln86_6_fu_1695_p3;
wire   [31:0] bitcast_ln86_4_fu_1716_p1;
wire   [7:0] tmp_27_fu_1720_p4;
wire   [22:0] trunc_ln86_4_fu_1730_p1;
wire   [0:0] icmp_ln86_9_fu_1740_p2;
wire   [0:0] icmp_ln86_8_fu_1734_p2;
wire   [0:0] or_ln86_12_fu_1746_p2;
wire   [0:0] and_ln86_8_fu_1752_p2;
wire   [0:0] and_ln86_9_fu_1758_p2;
wire   [0:0] or_ln86_4_fu_1772_p2;
wire   [31:0] select_ln86_8_fu_1764_p3;
wire   [31:0] bitcast_ln86_5_fu_1786_p1;
wire   [7:0] tmp_30_fu_1789_p4;
wire   [22:0] trunc_ln86_5_fu_1799_p1;
wire   [0:0] icmp_ln86_11_fu_1809_p2;
wire   [0:0] icmp_ln86_10_fu_1803_p2;
wire   [0:0] or_ln86_13_fu_1815_p2;
wire   [0:0] and_ln86_10_fu_1821_p2;
wire   [0:0] and_ln86_11_fu_1827_p2;
wire   [0:0] or_ln86_5_fu_1841_p2;
wire   [31:0] select_ln86_10_fu_1833_p3;
wire   [31:0] bitcast_ln86_6_fu_1854_p1;
wire   [7:0] tmp_33_fu_1858_p4;
wire   [22:0] trunc_ln86_6_fu_1868_p1;
wire   [0:0] icmp_ln86_13_fu_1878_p2;
wire   [0:0] icmp_ln86_12_fu_1872_p2;
wire   [0:0] or_ln86_14_fu_1884_p2;
wire   [0:0] and_ln86_12_fu_1890_p2;
wire   [0:0] and_ln86_13_fu_1896_p2;
wire   [0:0] or_ln86_6_fu_1910_p2;
wire   [31:0] select_ln86_12_fu_1902_p3;
wire   [31:0] bitcast_ln86_7_fu_1924_p1;
wire   [7:0] tmp_36_fu_1928_p4;
wire   [22:0] trunc_ln86_7_fu_1938_p1;
wire   [0:0] icmp_ln86_15_fu_1948_p2;
wire   [0:0] icmp_ln86_14_fu_1942_p2;
wire   [0:0] or_ln86_15_fu_1954_p2;
wire   [0:0] and_ln86_14_fu_1960_p2;
wire   [0:0] and_ln86_15_fu_1966_p2;
wire   [0:0] or_ln86_7_fu_1980_p2;
wire   [31:0] select_ln86_14_fu_1972_p3;
reg   [4:0] grp_fu_539_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_0to23;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to24;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_generic_round_float_s_fu_346_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_355_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_364_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_373_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_382_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_391_ap_start_reg = 1'b0;
end

bit_linear_find_max_abs grp_find_max_abs_fu_338(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .arr_0_val(grp_find_max_abs_fu_338_arr_0_val),
    .arr_1_val(grp_find_max_abs_fu_338_arr_1_val),
    .arr_2_val(grp_find_max_abs_fu_338_arr_2_val),
    .arr_3_val(grp_find_max_abs_fu_338_arr_3_val),
    .ap_return(grp_find_max_abs_fu_338_ap_return),
    .ap_ce(grp_find_max_abs_fu_338_ap_ce)
);

bit_linear_generic_round_float_s grp_generic_round_float_s_fu_346(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_346_ap_start),
    .ap_done(grp_generic_round_float_s_fu_346_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_346_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_346_ap_ready),
    .ap_ce(1'b1),
    .x(grp_generic_round_float_s_fu_346_x),
    .ap_return(grp_generic_round_float_s_fu_346_ap_return)
);

bit_linear_generic_round_float_s grp_generic_round_float_s_fu_355(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_355_ap_start),
    .ap_done(grp_generic_round_float_s_fu_355_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_355_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_355_ap_ready),
    .ap_ce(1'b1),
    .x(grp_generic_round_float_s_fu_355_x),
    .ap_return(grp_generic_round_float_s_fu_355_ap_return)
);

bit_linear_generic_round_float_s grp_generic_round_float_s_fu_364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_364_ap_start),
    .ap_done(grp_generic_round_float_s_fu_364_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_364_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_364_ap_ready),
    .ap_ce(1'b1),
    .x(grp_generic_round_float_s_fu_364_x),
    .ap_return(grp_generic_round_float_s_fu_364_ap_return)
);

bit_linear_generic_round_float_s grp_generic_round_float_s_fu_373(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_373_ap_start),
    .ap_done(grp_generic_round_float_s_fu_373_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_373_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_373_ap_ready),
    .ap_ce(1'b1),
    .x(grp_generic_round_float_s_fu_373_x),
    .ap_return(grp_generic_round_float_s_fu_373_ap_return)
);

bit_linear_generic_round_float_s grp_generic_round_float_s_fu_382(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_382_ap_start),
    .ap_done(grp_generic_round_float_s_fu_382_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_382_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_382_ap_ready),
    .ap_ce(1'b1),
    .x(grp_generic_round_float_s_fu_382_x),
    .ap_return(grp_generic_round_float_s_fu_382_ap_return)
);

bit_linear_generic_round_float_s grp_generic_round_float_s_fu_391(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_391_ap_start),
    .ap_done(grp_generic_round_float_s_fu_391_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_391_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_391_ap_ready),
    .ap_ce(1'b1),
    .x(grp_generic_round_float_s_fu_391_x),
    .ap_return(grp_generic_round_float_s_fu_391_ap_return)
);

bit_linear_generic_fmax_float_s grp_generic_fmax_float_s_fu_400(
    .ap_ready(grp_generic_fmax_float_s_fu_400_ap_ready),
    .x(grp_generic_round_float_s_fu_346_ap_return),
    .ap_return(grp_generic_fmax_float_s_fu_400_ap_return)
);

bit_linear_generic_fmax_float_s grp_generic_fmax_float_s_fu_406(
    .ap_ready(grp_generic_fmax_float_s_fu_406_ap_ready),
    .x(grp_generic_fmax_float_s_fu_406_x),
    .ap_return(grp_generic_fmax_float_s_fu_406_ap_return)
);

bit_linear_generic_fmax_float_s grp_generic_fmax_float_s_fu_412(
    .ap_ready(grp_generic_fmax_float_s_fu_412_ap_ready),
    .x(grp_generic_fmax_float_s_fu_412_x),
    .ap_return(grp_generic_fmax_float_s_fu_412_ap_return)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_419_p0),
    .din1(grp_fu_419_p1),
    .ce(1'b1),
    .dout(grp_fu_419_p2)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_424_p0),
    .din1(grp_fu_424_p1),
    .ce(1'b1),
    .dout(grp_fu_424_p2)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_428_p0),
    .din1(grp_fu_428_p1),
    .ce(1'b1),
    .dout(grp_fu_428_p2)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_432_p0),
    .din1(grp_fu_432_p1),
    .ce(1'b1),
    .dout(grp_fu_432_p2)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_436_p0),
    .din1(grp_fu_436_p1),
    .ce(1'b1),
    .dout(grp_fu_436_p2)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_440_p0),
    .din1(grp_fu_440_p1),
    .ce(1'b1),
    .dout(grp_fu_440_p2)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_444_p0),
    .din1(grp_fu_444_p1),
    .ce(1'b1),
    .dout(grp_fu_444_p2)
);

bit_linear_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_448_p0),
    .din1(grp_fu_448_p1),
    .ce(1'b1),
    .dout(grp_fu_448_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_455_p0),
    .din1(grp_fu_455_p1),
    .ce(1'b1),
    .dout(grp_fu_455_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_460_p0),
    .din1(grp_fu_460_p1),
    .ce(1'b1),
    .dout(grp_fu_460_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_465_p0),
    .din1(grp_fu_465_p1),
    .ce(1'b1),
    .dout(grp_fu_465_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_470_p0),
    .din1(grp_fu_470_p1),
    .ce(1'b1),
    .dout(grp_fu_470_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_475_p0),
    .din1(grp_fu_475_p1),
    .ce(1'b1),
    .dout(grp_fu_475_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_482_p0),
    .din1(grp_fu_482_p1),
    .ce(1'b1),
    .dout(grp_fu_482_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_487_p0),
    .din1(grp_fu_487_p1),
    .ce(1'b1),
    .dout(grp_fu_487_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_492_p0),
    .din1(grp_fu_492_p1),
    .ce(1'b1),
    .dout(grp_fu_492_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_496_p0),
    .din1(grp_fu_496_p1),
    .ce(1'b1),
    .dout(grp_fu_496_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_500_p0),
    .din1(grp_fu_500_p1),
    .ce(1'b1),
    .dout(grp_fu_500_p2)
);

bit_linear_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_504_p0),
    .din1(grp_fu_504_p1),
    .ce(1'b1),
    .dout(grp_fu_504_p2)
);

bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_508_p0),
    .din1(grp_fu_508_p1),
    .ce(1'b1),
    .dout(grp_fu_508_p2)
);

bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_513_p0),
    .din1(grp_fu_513_p1),
    .ce(1'b1),
    .dout(grp_fu_513_p2)
);

bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_517_p0),
    .din1(grp_fu_517_p1),
    .ce(1'b1),
    .dout(grp_fu_517_p2)
);

bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_521_p0),
    .din1(grp_fu_521_p1),
    .ce(1'b1),
    .dout(grp_fu_521_p2)
);

bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_525_p0),
    .din1(grp_fu_525_p1),
    .ce(1'b1),
    .dout(grp_fu_525_p2)
);

bit_linear_fdiv_32ns_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_7_no_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_529_p0),
    .din1(grp_fu_529_p1),
    .ce(1'b1),
    .dout(grp_fu_529_p2)
);

bit_linear_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(div_i8_reg_2473),
    .ce(1'b1),
    .dout(grp_fu_533_p1)
);

bit_linear_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U40(
    .din0(reg_602),
    .dout(tmp_7_fu_536_p1)
);

bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_539_p0),
    .din1(grp_fu_539_p1),
    .ce(1'b1),
    .opcode(grp_fu_539_opcode),
    .dout(grp_fu_539_p2)
);

bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_545_p0),
    .din1(grp_fu_545_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_545_p2)
);

bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_554_p0),
    .din1(32'd1065353216),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_554_p2)
);

bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_560_p0),
    .din1(32'd3212836864),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_560_p2)
);

bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_566_p0),
    .din1(32'd1065353216),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_566_p2)
);

bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_572_p0),
    .din1(32'd3212836864),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_572_p2)
);

bit_linear_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_generic_round_float_s_fu_391_ap_return),
    .din1(32'd1065353216),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_578_p2)
);

bit_linear_ddiv_64ns_64ns_64_13_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_13_no_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(select_ln75_reg_2468),
    .ce(1'b1),
    .dout(grp_fu_592_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter24 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_346_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
            grp_generic_round_float_s_fu_346_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_346_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_346_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_355_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
            grp_generic_round_float_s_fu_355_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_355_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_355_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_364_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
            grp_generic_round_float_s_fu_364_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_364_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_364_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_373_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
            grp_generic_round_float_s_fu_373_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_373_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_373_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_382_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            grp_generic_round_float_s_fu_382_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_382_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_382_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_391_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            grp_generic_round_float_s_fu_391_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_391_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_391_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_120_1_i_reg_2767 <= grp_fu_440_p2;
        add_125_i_reg_2762 <= grp_fu_436_p2;
        add_1_111_i_reg_2772 <= grp_fu_444_p2;
        add_1_1_1_i_reg_2777 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_120_2_i_reg_2787 <= grp_fu_424_p2;
        add_1_1_2_i_reg_2797 <= grp_fu_432_p2;
        add_1_2_i_reg_2792 <= grp_fu_428_p2;
        add_2_i_reg_2782 <= grp_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_120_3_i_reg_2807 <= grp_fu_440_p2;
        add_1_1_3_i_reg_2817 <= grp_fu_448_p2;
        add_1_3_i_reg_2812 <= grp_fu_444_p2;
        add_3_i_reg_2802 <= grp_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_120_i_reg_2732 <= grp_fu_424_p2;
        add_1_1_i_reg_2752 <= grp_fu_432_p2;
        add_1_i_reg_2742 <= grp_fu_428_p2;
        add_i_reg_2722 <= grp_fu_419_p2;
        mul_119_3_i_reg_2737 <= grp_fu_496_p2;
        mul_1_1_3_i_reg_2757 <= grp_fu_504_p2;
        mul_1_3_i_reg_2747 <= grp_fu_500_p2;
        mul_3_i_reg_2727 <= grp_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_13_reg_2124 <= weight_1_q1;
        data_14_reg_2134 <= weight_0_q0;
        data_15_reg_2144 <= weight_1_q0;
        data_reg_2114 <= weight_0_q1;
        input_0_load_1_reg_2076 <= input_0_q0;
        input_1_load_1_reg_2087 <= input_1_q0;
        input_2_load_1_reg_2098 <= input_2_q0;
        input_3_load_1_reg_2109 <= input_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_13_reg_2124_pp0_iter10_reg <= data_13_reg_2124_pp0_iter9_reg;
        data_13_reg_2124_pp0_iter11_reg <= data_13_reg_2124_pp0_iter10_reg;
        data_13_reg_2124_pp0_iter12_reg <= data_13_reg_2124_pp0_iter11_reg;
        data_13_reg_2124_pp0_iter13_reg <= data_13_reg_2124_pp0_iter12_reg;
        data_13_reg_2124_pp0_iter14_reg <= data_13_reg_2124_pp0_iter13_reg;
        data_13_reg_2124_pp0_iter1_reg <= data_13_reg_2124;
        data_13_reg_2124_pp0_iter2_reg <= data_13_reg_2124_pp0_iter1_reg;
        data_13_reg_2124_pp0_iter3_reg <= data_13_reg_2124_pp0_iter2_reg;
        data_13_reg_2124_pp0_iter4_reg <= data_13_reg_2124_pp0_iter3_reg;
        data_13_reg_2124_pp0_iter5_reg <= data_13_reg_2124_pp0_iter4_reg;
        data_13_reg_2124_pp0_iter6_reg <= data_13_reg_2124_pp0_iter5_reg;
        data_13_reg_2124_pp0_iter7_reg <= data_13_reg_2124_pp0_iter6_reg;
        data_13_reg_2124_pp0_iter8_reg <= data_13_reg_2124_pp0_iter7_reg;
        data_13_reg_2124_pp0_iter9_reg <= data_13_reg_2124_pp0_iter8_reg;
        data_14_reg_2134_pp0_iter10_reg <= data_14_reg_2134_pp0_iter9_reg;
        data_14_reg_2134_pp0_iter11_reg <= data_14_reg_2134_pp0_iter10_reg;
        data_14_reg_2134_pp0_iter12_reg <= data_14_reg_2134_pp0_iter11_reg;
        data_14_reg_2134_pp0_iter13_reg <= data_14_reg_2134_pp0_iter12_reg;
        data_14_reg_2134_pp0_iter14_reg <= data_14_reg_2134_pp0_iter13_reg;
        data_14_reg_2134_pp0_iter1_reg <= data_14_reg_2134;
        data_14_reg_2134_pp0_iter2_reg <= data_14_reg_2134_pp0_iter1_reg;
        data_14_reg_2134_pp0_iter3_reg <= data_14_reg_2134_pp0_iter2_reg;
        data_14_reg_2134_pp0_iter4_reg <= data_14_reg_2134_pp0_iter3_reg;
        data_14_reg_2134_pp0_iter5_reg <= data_14_reg_2134_pp0_iter4_reg;
        data_14_reg_2134_pp0_iter6_reg <= data_14_reg_2134_pp0_iter5_reg;
        data_14_reg_2134_pp0_iter7_reg <= data_14_reg_2134_pp0_iter6_reg;
        data_14_reg_2134_pp0_iter8_reg <= data_14_reg_2134_pp0_iter7_reg;
        data_14_reg_2134_pp0_iter9_reg <= data_14_reg_2134_pp0_iter8_reg;
        data_15_reg_2144_pp0_iter10_reg <= data_15_reg_2144_pp0_iter9_reg;
        data_15_reg_2144_pp0_iter11_reg <= data_15_reg_2144_pp0_iter10_reg;
        data_15_reg_2144_pp0_iter12_reg <= data_15_reg_2144_pp0_iter11_reg;
        data_15_reg_2144_pp0_iter13_reg <= data_15_reg_2144_pp0_iter12_reg;
        data_15_reg_2144_pp0_iter14_reg <= data_15_reg_2144_pp0_iter13_reg;
        data_15_reg_2144_pp0_iter1_reg <= data_15_reg_2144;
        data_15_reg_2144_pp0_iter2_reg <= data_15_reg_2144_pp0_iter1_reg;
        data_15_reg_2144_pp0_iter3_reg <= data_15_reg_2144_pp0_iter2_reg;
        data_15_reg_2144_pp0_iter4_reg <= data_15_reg_2144_pp0_iter3_reg;
        data_15_reg_2144_pp0_iter5_reg <= data_15_reg_2144_pp0_iter4_reg;
        data_15_reg_2144_pp0_iter6_reg <= data_15_reg_2144_pp0_iter5_reg;
        data_15_reg_2144_pp0_iter7_reg <= data_15_reg_2144_pp0_iter6_reg;
        data_15_reg_2144_pp0_iter8_reg <= data_15_reg_2144_pp0_iter7_reg;
        data_15_reg_2144_pp0_iter9_reg <= data_15_reg_2144_pp0_iter8_reg;
        data_reg_2114_pp0_iter10_reg <= data_reg_2114_pp0_iter9_reg;
        data_reg_2114_pp0_iter11_reg <= data_reg_2114_pp0_iter10_reg;
        data_reg_2114_pp0_iter12_reg <= data_reg_2114_pp0_iter11_reg;
        data_reg_2114_pp0_iter13_reg <= data_reg_2114_pp0_iter12_reg;
        data_reg_2114_pp0_iter14_reg <= data_reg_2114_pp0_iter13_reg;
        data_reg_2114_pp0_iter1_reg <= data_reg_2114;
        data_reg_2114_pp0_iter2_reg <= data_reg_2114_pp0_iter1_reg;
        data_reg_2114_pp0_iter3_reg <= data_reg_2114_pp0_iter2_reg;
        data_reg_2114_pp0_iter4_reg <= data_reg_2114_pp0_iter3_reg;
        data_reg_2114_pp0_iter5_reg <= data_reg_2114_pp0_iter4_reg;
        data_reg_2114_pp0_iter6_reg <= data_reg_2114_pp0_iter5_reg;
        data_reg_2114_pp0_iter7_reg <= data_reg_2114_pp0_iter6_reg;
        data_reg_2114_pp0_iter8_reg <= data_reg_2114_pp0_iter7_reg;
        data_reg_2114_pp0_iter9_reg <= data_reg_2114_pp0_iter8_reg;
        empty_11_reg_2103 <= empty_11_fu_649_p1;
        empty_11_reg_2103_pp0_iter1_reg <= empty_11_reg_2103;
        empty_11_reg_2103_pp0_iter2_reg <= empty_11_reg_2103_pp0_iter1_reg;
        empty_11_reg_2103_pp0_iter3_reg <= empty_11_reg_2103_pp0_iter2_reg;
        empty_11_reg_2103_pp0_iter4_reg <= empty_11_reg_2103_pp0_iter3_reg;
        empty_7_reg_2081 <= empty_7_fu_639_p1;
        empty_7_reg_2081_pp0_iter1_reg <= empty_7_reg_2081;
        empty_7_reg_2081_pp0_iter2_reg <= empty_7_reg_2081_pp0_iter1_reg;
        empty_7_reg_2081_pp0_iter3_reg <= empty_7_reg_2081_pp0_iter2_reg;
        empty_7_reg_2081_pp0_iter4_reg <= empty_7_reg_2081_pp0_iter3_reg;
        empty_9_reg_2092 <= empty_9_fu_644_p1;
        empty_9_reg_2092_pp0_iter1_reg <= empty_9_reg_2092;
        empty_9_reg_2092_pp0_iter2_reg <= empty_9_reg_2092_pp0_iter1_reg;
        empty_9_reg_2092_pp0_iter3_reg <= empty_9_reg_2092_pp0_iter2_reg;
        empty_9_reg_2092_pp0_iter4_reg <= empty_9_reg_2092_pp0_iter3_reg;
        empty_reg_2070 <= empty_fu_634_p1;
        empty_reg_2070_pp0_iter1_reg <= empty_reg_2070;
        empty_reg_2070_pp0_iter2_reg <= empty_reg_2070_pp0_iter1_reg;
        empty_reg_2070_pp0_iter3_reg <= empty_reg_2070_pp0_iter2_reg;
        empty_reg_2070_pp0_iter4_reg <= empty_reg_2070_pp0_iter3_reg;
        icmp_ln47_4_reg_2453 <= icmp_ln47_4_fu_1378_p2;
        icmp_ln47_5_reg_2458 <= icmp_ln47_5_fu_1384_p2;
        input_quant_2_reg_2412_pp0_iter10_reg <= input_quant_2_reg_2412_pp0_iter9_reg;
        input_quant_2_reg_2412_pp0_iter11_reg <= input_quant_2_reg_2412_pp0_iter10_reg;
        input_quant_2_reg_2412_pp0_iter12_reg <= input_quant_2_reg_2412_pp0_iter11_reg;
        input_quant_2_reg_2412_pp0_iter13_reg <= input_quant_2_reg_2412_pp0_iter12_reg;
        input_quant_2_reg_2412_pp0_iter14_reg <= input_quant_2_reg_2412_pp0_iter13_reg;
        input_quant_2_reg_2412_pp0_iter15_reg <= input_quant_2_reg_2412_pp0_iter14_reg;
        input_quant_2_reg_2412_pp0_iter16_reg <= input_quant_2_reg_2412_pp0_iter15_reg;
        input_quant_2_reg_2412_pp0_iter17_reg <= input_quant_2_reg_2412_pp0_iter16_reg;
        input_quant_2_reg_2412_pp0_iter18_reg <= input_quant_2_reg_2412_pp0_iter17_reg;
        input_quant_2_reg_2412_pp0_iter9_reg <= input_quant_2_reg_2412;
        input_quant_4_reg_2418_pp0_iter10_reg <= input_quant_4_reg_2418_pp0_iter9_reg;
        input_quant_4_reg_2418_pp0_iter11_reg <= input_quant_4_reg_2418_pp0_iter10_reg;
        input_quant_4_reg_2418_pp0_iter12_reg <= input_quant_4_reg_2418_pp0_iter11_reg;
        input_quant_4_reg_2418_pp0_iter13_reg <= input_quant_4_reg_2418_pp0_iter12_reg;
        input_quant_4_reg_2418_pp0_iter14_reg <= input_quant_4_reg_2418_pp0_iter13_reg;
        input_quant_4_reg_2418_pp0_iter15_reg <= input_quant_4_reg_2418_pp0_iter14_reg;
        input_quant_4_reg_2418_pp0_iter16_reg <= input_quant_4_reg_2418_pp0_iter15_reg;
        input_quant_4_reg_2418_pp0_iter17_reg <= input_quant_4_reg_2418_pp0_iter16_reg;
        input_quant_4_reg_2418_pp0_iter18_reg <= input_quant_4_reg_2418_pp0_iter17_reg;
        input_quant_4_reg_2418_pp0_iter9_reg <= input_quant_4_reg_2418;
        input_quant_5_reg_2424_pp0_iter10_reg <= input_quant_5_reg_2424_pp0_iter9_reg;
        input_quant_5_reg_2424_pp0_iter11_reg <= input_quant_5_reg_2424_pp0_iter10_reg;
        input_quant_5_reg_2424_pp0_iter12_reg <= input_quant_5_reg_2424_pp0_iter11_reg;
        input_quant_5_reg_2424_pp0_iter13_reg <= input_quant_5_reg_2424_pp0_iter12_reg;
        input_quant_5_reg_2424_pp0_iter14_reg <= input_quant_5_reg_2424_pp0_iter13_reg;
        input_quant_5_reg_2424_pp0_iter15_reg <= input_quant_5_reg_2424_pp0_iter14_reg;
        input_quant_5_reg_2424_pp0_iter16_reg <= input_quant_5_reg_2424_pp0_iter15_reg;
        input_quant_5_reg_2424_pp0_iter17_reg <= input_quant_5_reg_2424_pp0_iter16_reg;
        input_quant_5_reg_2424_pp0_iter18_reg <= input_quant_5_reg_2424_pp0_iter17_reg;
        input_quant_5_reg_2424_pp0_iter9_reg <= input_quant_5_reg_2424;
        res_19_reg_2359 <= res_19_fu_1214_p3;
        res_22_reg_2364 <= res_22_fu_1272_p3;
        scaled_11_reg_2599 <= scaled_11_fu_1847_p3;
        scaled_7_reg_2589 <= scaled_7_fu_1709_p3;
        scaled_9_reg_2594 <= scaled_9_fu_1778_p3;
        select_ln47_reg_2253 <= select_ln47_fu_768_p3;
        tmp_7_reg_2463 <= tmp_7_fu_536_p1;
        trunc_ln313_4_reg_2129 <= trunc_ln313_4_fu_658_p1;
        trunc_ln313_4_reg_2129_pp0_iter1_reg <= trunc_ln313_4_reg_2129;
        trunc_ln313_5_reg_2139 <= trunc_ln313_5_fu_662_p1;
        trunc_ln313_5_reg_2139_pp0_iter1_reg <= trunc_ln313_5_reg_2139;
        trunc_ln313_5_reg_2139_pp0_iter2_reg <= trunc_ln313_5_reg_2139_pp0_iter1_reg;
        trunc_ln313_6_reg_2149 <= trunc_ln313_6_fu_666_p1;
        trunc_ln313_6_reg_2149_pp0_iter1_reg <= trunc_ln313_6_reg_2149;
        trunc_ln313_6_reg_2149_pp0_iter2_reg <= trunc_ln313_6_reg_2149_pp0_iter1_reg;
        trunc_ln313_6_reg_2149_pp0_iter3_reg <= trunc_ln313_6_reg_2149_pp0_iter2_reg;
        trunc_ln313_reg_2119 <= trunc_ln313_fu_654_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        data_16_reg_2203 <= weight_0_q1;
        data_17_reg_2213 <= weight_1_q1;
        data_18_reg_2223 <= weight_0_q0;
        data_19_reg_2233 <= weight_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        data_16_reg_2203_pp0_iter10_reg <= data_16_reg_2203_pp0_iter9_reg;
        data_16_reg_2203_pp0_iter11_reg <= data_16_reg_2203_pp0_iter10_reg;
        data_16_reg_2203_pp0_iter12_reg <= data_16_reg_2203_pp0_iter11_reg;
        data_16_reg_2203_pp0_iter13_reg <= data_16_reg_2203_pp0_iter12_reg;
        data_16_reg_2203_pp0_iter14_reg <= data_16_reg_2203_pp0_iter13_reg;
        data_16_reg_2203_pp0_iter1_reg <= data_16_reg_2203;
        data_16_reg_2203_pp0_iter2_reg <= data_16_reg_2203_pp0_iter1_reg;
        data_16_reg_2203_pp0_iter3_reg <= data_16_reg_2203_pp0_iter2_reg;
        data_16_reg_2203_pp0_iter4_reg <= data_16_reg_2203_pp0_iter3_reg;
        data_16_reg_2203_pp0_iter5_reg <= data_16_reg_2203_pp0_iter4_reg;
        data_16_reg_2203_pp0_iter6_reg <= data_16_reg_2203_pp0_iter5_reg;
        data_16_reg_2203_pp0_iter7_reg <= data_16_reg_2203_pp0_iter6_reg;
        data_16_reg_2203_pp0_iter8_reg <= data_16_reg_2203_pp0_iter7_reg;
        data_16_reg_2203_pp0_iter9_reg <= data_16_reg_2203_pp0_iter8_reg;
        data_17_reg_2213_pp0_iter10_reg <= data_17_reg_2213_pp0_iter9_reg;
        data_17_reg_2213_pp0_iter11_reg <= data_17_reg_2213_pp0_iter10_reg;
        data_17_reg_2213_pp0_iter12_reg <= data_17_reg_2213_pp0_iter11_reg;
        data_17_reg_2213_pp0_iter13_reg <= data_17_reg_2213_pp0_iter12_reg;
        data_17_reg_2213_pp0_iter14_reg <= data_17_reg_2213_pp0_iter13_reg;
        data_17_reg_2213_pp0_iter1_reg <= data_17_reg_2213;
        data_17_reg_2213_pp0_iter2_reg <= data_17_reg_2213_pp0_iter1_reg;
        data_17_reg_2213_pp0_iter3_reg <= data_17_reg_2213_pp0_iter2_reg;
        data_17_reg_2213_pp0_iter4_reg <= data_17_reg_2213_pp0_iter3_reg;
        data_17_reg_2213_pp0_iter5_reg <= data_17_reg_2213_pp0_iter4_reg;
        data_17_reg_2213_pp0_iter6_reg <= data_17_reg_2213_pp0_iter5_reg;
        data_17_reg_2213_pp0_iter7_reg <= data_17_reg_2213_pp0_iter6_reg;
        data_17_reg_2213_pp0_iter8_reg <= data_17_reg_2213_pp0_iter7_reg;
        data_17_reg_2213_pp0_iter9_reg <= data_17_reg_2213_pp0_iter8_reg;
        data_18_reg_2223_pp0_iter10_reg <= data_18_reg_2223_pp0_iter9_reg;
        data_18_reg_2223_pp0_iter11_reg <= data_18_reg_2223_pp0_iter10_reg;
        data_18_reg_2223_pp0_iter12_reg <= data_18_reg_2223_pp0_iter11_reg;
        data_18_reg_2223_pp0_iter13_reg <= data_18_reg_2223_pp0_iter12_reg;
        data_18_reg_2223_pp0_iter14_reg <= data_18_reg_2223_pp0_iter13_reg;
        data_18_reg_2223_pp0_iter1_reg <= data_18_reg_2223;
        data_18_reg_2223_pp0_iter2_reg <= data_18_reg_2223_pp0_iter1_reg;
        data_18_reg_2223_pp0_iter3_reg <= data_18_reg_2223_pp0_iter2_reg;
        data_18_reg_2223_pp0_iter4_reg <= data_18_reg_2223_pp0_iter3_reg;
        data_18_reg_2223_pp0_iter5_reg <= data_18_reg_2223_pp0_iter4_reg;
        data_18_reg_2223_pp0_iter6_reg <= data_18_reg_2223_pp0_iter5_reg;
        data_18_reg_2223_pp0_iter7_reg <= data_18_reg_2223_pp0_iter6_reg;
        data_18_reg_2223_pp0_iter8_reg <= data_18_reg_2223_pp0_iter7_reg;
        data_18_reg_2223_pp0_iter9_reg <= data_18_reg_2223_pp0_iter8_reg;
        data_19_reg_2233_pp0_iter10_reg <= data_19_reg_2233_pp0_iter9_reg;
        data_19_reg_2233_pp0_iter11_reg <= data_19_reg_2233_pp0_iter10_reg;
        data_19_reg_2233_pp0_iter12_reg <= data_19_reg_2233_pp0_iter11_reg;
        data_19_reg_2233_pp0_iter13_reg <= data_19_reg_2233_pp0_iter12_reg;
        data_19_reg_2233_pp0_iter14_reg <= data_19_reg_2233_pp0_iter13_reg;
        data_19_reg_2233_pp0_iter1_reg <= data_19_reg_2233;
        data_19_reg_2233_pp0_iter2_reg <= data_19_reg_2233_pp0_iter1_reg;
        data_19_reg_2233_pp0_iter3_reg <= data_19_reg_2233_pp0_iter2_reg;
        data_19_reg_2233_pp0_iter4_reg <= data_19_reg_2233_pp0_iter3_reg;
        data_19_reg_2233_pp0_iter5_reg <= data_19_reg_2233_pp0_iter4_reg;
        data_19_reg_2233_pp0_iter6_reg <= data_19_reg_2233_pp0_iter5_reg;
        data_19_reg_2233_pp0_iter7_reg <= data_19_reg_2233_pp0_iter6_reg;
        data_19_reg_2233_pp0_iter8_reg <= data_19_reg_2233_pp0_iter7_reg;
        data_19_reg_2233_pp0_iter9_reg <= data_19_reg_2233_pp0_iter8_reg;
        empty_10_reg_2186 <= empty_10_fu_678_p1;
        empty_10_reg_2186_pp0_iter1_reg <= empty_10_reg_2186;
        empty_10_reg_2186_pp0_iter2_reg <= empty_10_reg_2186_pp0_iter1_reg;
        empty_10_reg_2186_pp0_iter3_reg <= empty_10_reg_2186_pp0_iter2_reg;
        empty_10_reg_2186_pp0_iter4_reg <= empty_10_reg_2186_pp0_iter3_reg;
        empty_12_reg_2192 <= empty_12_fu_682_p1;
        empty_12_reg_2192_pp0_iter1_reg <= empty_12_reg_2192;
        empty_12_reg_2192_pp0_iter2_reg <= empty_12_reg_2192_pp0_iter1_reg;
        empty_12_reg_2192_pp0_iter3_reg <= empty_12_reg_2192_pp0_iter2_reg;
        empty_12_reg_2192_pp0_iter4_reg <= empty_12_reg_2192_pp0_iter3_reg;
        empty_6_reg_2174 <= empty_6_fu_670_p1;
        empty_6_reg_2174_pp0_iter1_reg <= empty_6_reg_2174;
        empty_6_reg_2174_pp0_iter2_reg <= empty_6_reg_2174_pp0_iter1_reg;
        empty_6_reg_2174_pp0_iter3_reg <= empty_6_reg_2174_pp0_iter2_reg;
        empty_6_reg_2174_pp0_iter4_reg <= empty_6_reg_2174_pp0_iter3_reg;
        empty_8_reg_2180 <= empty_8_fu_674_p1;
        empty_8_reg_2180_pp0_iter1_reg <= empty_8_reg_2180;
        empty_8_reg_2180_pp0_iter2_reg <= empty_8_reg_2180_pp0_iter1_reg;
        empty_8_reg_2180_pp0_iter3_reg <= empty_8_reg_2180_pp0_iter2_reg;
        empty_8_reg_2180_pp0_iter4_reg <= empty_8_reg_2180_pp0_iter3_reg;
        input_quant_3_reg_2435_pp0_iter10_reg <= input_quant_3_reg_2435_pp0_iter9_reg;
        input_quant_3_reg_2435_pp0_iter11_reg <= input_quant_3_reg_2435_pp0_iter10_reg;
        input_quant_3_reg_2435_pp0_iter12_reg <= input_quant_3_reg_2435_pp0_iter11_reg;
        input_quant_3_reg_2435_pp0_iter13_reg <= input_quant_3_reg_2435_pp0_iter12_reg;
        input_quant_3_reg_2435_pp0_iter14_reg <= input_quant_3_reg_2435_pp0_iter13_reg;
        input_quant_3_reg_2435_pp0_iter15_reg <= input_quant_3_reg_2435_pp0_iter14_reg;
        input_quant_3_reg_2435_pp0_iter16_reg <= input_quant_3_reg_2435_pp0_iter15_reg;
        input_quant_3_reg_2435_pp0_iter17_reg <= input_quant_3_reg_2435_pp0_iter16_reg;
        input_quant_3_reg_2435_pp0_iter18_reg <= input_quant_3_reg_2435_pp0_iter17_reg;
        input_quant_3_reg_2435_pp0_iter9_reg <= input_quant_3_reg_2435;
        input_quant_6_reg_2441_pp0_iter10_reg <= input_quant_6_reg_2441_pp0_iter9_reg;
        input_quant_6_reg_2441_pp0_iter11_reg <= input_quant_6_reg_2441_pp0_iter10_reg;
        input_quant_6_reg_2441_pp0_iter12_reg <= input_quant_6_reg_2441_pp0_iter11_reg;
        input_quant_6_reg_2441_pp0_iter13_reg <= input_quant_6_reg_2441_pp0_iter12_reg;
        input_quant_6_reg_2441_pp0_iter14_reg <= input_quant_6_reg_2441_pp0_iter13_reg;
        input_quant_6_reg_2441_pp0_iter15_reg <= input_quant_6_reg_2441_pp0_iter14_reg;
        input_quant_6_reg_2441_pp0_iter16_reg <= input_quant_6_reg_2441_pp0_iter15_reg;
        input_quant_6_reg_2441_pp0_iter17_reg <= input_quant_6_reg_2441_pp0_iter16_reg;
        input_quant_6_reg_2441_pp0_iter18_reg <= input_quant_6_reg_2441_pp0_iter17_reg;
        input_quant_6_reg_2441_pp0_iter9_reg <= input_quant_6_reg_2441;
        mul_119_2_i_reg_2702_pp0_iter20_reg <= mul_119_2_i_reg_2702;
        mul_119_2_i_reg_2702_pp0_iter21_reg <= mul_119_2_i_reg_2702_pp0_iter20_reg;
        mul_1_1_2_i_reg_2717_pp0_iter20_reg <= mul_1_1_2_i_reg_2717;
        mul_1_1_2_i_reg_2717_pp0_iter21_reg <= mul_1_1_2_i_reg_2717_pp0_iter20_reg;
        mul_1_2_i_reg_2707_pp0_iter20_reg <= mul_1_2_i_reg_2707;
        mul_1_2_i_reg_2707_pp0_iter21_reg <= mul_1_2_i_reg_2707_pp0_iter20_reg;
        mul_2_i_reg_2692_pp0_iter20_reg <= mul_2_i_reg_2692;
        mul_2_i_reg_2692_pp0_iter21_reg <= mul_2_i_reg_2692_pp0_iter20_reg;
        res_16_reg_2324 <= res_16_fu_912_p3;
        res_17_reg_2329 <= res_17_fu_970_p3;
        res_23_reg_2380 <= res_23_fu_1328_p3;
        scale_2_reg_2478 <= grp_fu_533_p1;
        scale_2_reg_2478_pp0_iter15_reg <= scale_2_reg_2478;
        scale_2_reg_2478_pp0_iter16_reg <= scale_2_reg_2478_pp0_iter15_reg;
        scale_reg_2288_pp0_iter5_reg <= scale_reg_2288;
        scaled_13_reg_2604 <= scaled_13_fu_1916_p3;
        scaled_15_reg_2609 <= scaled_15_fu_1986_p3;
        select_ln47_1_reg_2263 <= select_ln47_1_fu_818_p3;
        select_ln75_reg_2468 <= select_ln75_fu_1400_p3;
        trunc_ln313_10_reg_2238 <= trunc_ln313_10_fu_710_p1;
        trunc_ln313_10_reg_2238_pp0_iter1_reg <= trunc_ln313_10_reg_2238;
        trunc_ln313_10_reg_2238_pp0_iter2_reg <= trunc_ln313_10_reg_2238_pp0_iter1_reg;
        trunc_ln313_10_reg_2238_pp0_iter3_reg <= trunc_ln313_10_reg_2238_pp0_iter2_reg;
        trunc_ln313_10_reg_2238_pp0_iter4_reg <= trunc_ln313_10_reg_2238_pp0_iter3_reg;
        trunc_ln313_10_reg_2238_pp0_iter5_reg <= trunc_ln313_10_reg_2238_pp0_iter4_reg;
        trunc_ln313_10_reg_2238_pp0_iter6_reg <= trunc_ln313_10_reg_2238_pp0_iter5_reg;
        trunc_ln313_7_reg_2208 <= trunc_ln313_7_fu_698_p1;
        trunc_ln313_7_reg_2208_pp0_iter1_reg <= trunc_ln313_7_reg_2208;
        trunc_ln313_7_reg_2208_pp0_iter2_reg <= trunc_ln313_7_reg_2208_pp0_iter1_reg;
        trunc_ln313_7_reg_2208_pp0_iter3_reg <= trunc_ln313_7_reg_2208_pp0_iter2_reg;
        trunc_ln313_8_reg_2218 <= trunc_ln313_8_fu_702_p1;
        trunc_ln313_8_reg_2218_pp0_iter1_reg <= trunc_ln313_8_reg_2218;
        trunc_ln313_8_reg_2218_pp0_iter2_reg <= trunc_ln313_8_reg_2218_pp0_iter1_reg;
        trunc_ln313_8_reg_2218_pp0_iter3_reg <= trunc_ln313_8_reg_2218_pp0_iter2_reg;
        trunc_ln313_8_reg_2218_pp0_iter4_reg <= trunc_ln313_8_reg_2218_pp0_iter3_reg;
        trunc_ln313_9_reg_2228 <= trunc_ln313_9_fu_706_p1;
        trunc_ln313_9_reg_2228_pp0_iter1_reg <= trunc_ln313_9_reg_2228;
        trunc_ln313_9_reg_2228_pp0_iter2_reg <= trunc_ln313_9_reg_2228_pp0_iter1_reg;
        trunc_ln313_9_reg_2228_pp0_iter3_reg <= trunc_ln313_9_reg_2228_pp0_iter2_reg;
        trunc_ln313_9_reg_2228_pp0_iter4_reg <= trunc_ln313_9_reg_2228_pp0_iter3_reg;
        trunc_ln313_9_reg_2228_pp0_iter5_reg <= trunc_ln313_9_reg_2228_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        div_i8_reg_2473 <= grp_fu_592_p2;
        input_quant_1_reg_2406_pp0_iter10_reg <= input_quant_1_reg_2406_pp0_iter9_reg;
        input_quant_1_reg_2406_pp0_iter11_reg <= input_quant_1_reg_2406_pp0_iter10_reg;
        input_quant_1_reg_2406_pp0_iter12_reg <= input_quant_1_reg_2406_pp0_iter11_reg;
        input_quant_1_reg_2406_pp0_iter13_reg <= input_quant_1_reg_2406_pp0_iter12_reg;
        input_quant_1_reg_2406_pp0_iter14_reg <= input_quant_1_reg_2406_pp0_iter13_reg;
        input_quant_1_reg_2406_pp0_iter15_reg <= input_quant_1_reg_2406_pp0_iter14_reg;
        input_quant_1_reg_2406_pp0_iter16_reg <= input_quant_1_reg_2406_pp0_iter15_reg;
        input_quant_1_reg_2406_pp0_iter17_reg <= input_quant_1_reg_2406_pp0_iter16_reg;
        input_quant_1_reg_2406_pp0_iter18_reg <= input_quant_1_reg_2406_pp0_iter17_reg;
        input_quant_1_reg_2406_pp0_iter19_reg <= input_quant_1_reg_2406_pp0_iter18_reg;
        input_quant_1_reg_2406_pp0_iter9_reg <= input_quant_1_reg_2406;
        input_quant_7_reg_2447_pp0_iter10_reg <= input_quant_7_reg_2447;
        input_quant_7_reg_2447_pp0_iter11_reg <= input_quant_7_reg_2447_pp0_iter10_reg;
        input_quant_7_reg_2447_pp0_iter12_reg <= input_quant_7_reg_2447_pp0_iter11_reg;
        input_quant_7_reg_2447_pp0_iter13_reg <= input_quant_7_reg_2447_pp0_iter12_reg;
        input_quant_7_reg_2447_pp0_iter14_reg <= input_quant_7_reg_2447_pp0_iter13_reg;
        input_quant_7_reg_2447_pp0_iter15_reg <= input_quant_7_reg_2447_pp0_iter14_reg;
        input_quant_7_reg_2447_pp0_iter16_reg <= input_quant_7_reg_2447_pp0_iter15_reg;
        input_quant_7_reg_2447_pp0_iter17_reg <= input_quant_7_reg_2447_pp0_iter16_reg;
        input_quant_7_reg_2447_pp0_iter18_reg <= input_quant_7_reg_2447_pp0_iter17_reg;
        input_quant_7_reg_2447_pp0_iter19_reg <= input_quant_7_reg_2447_pp0_iter18_reg;
        input_quant_reg_2400_pp0_iter10_reg <= input_quant_reg_2400_pp0_iter9_reg;
        input_quant_reg_2400_pp0_iter11_reg <= input_quant_reg_2400_pp0_iter10_reg;
        input_quant_reg_2400_pp0_iter12_reg <= input_quant_reg_2400_pp0_iter11_reg;
        input_quant_reg_2400_pp0_iter13_reg <= input_quant_reg_2400_pp0_iter12_reg;
        input_quant_reg_2400_pp0_iter14_reg <= input_quant_reg_2400_pp0_iter13_reg;
        input_quant_reg_2400_pp0_iter15_reg <= input_quant_reg_2400_pp0_iter14_reg;
        input_quant_reg_2400_pp0_iter16_reg <= input_quant_reg_2400_pp0_iter15_reg;
        input_quant_reg_2400_pp0_iter17_reg <= input_quant_reg_2400_pp0_iter16_reg;
        input_quant_reg_2400_pp0_iter18_reg <= input_quant_reg_2400_pp0_iter17_reg;
        input_quant_reg_2400_pp0_iter9_reg <= input_quant_reg_2400;
        mul_119_3_i_reg_2737_pp0_iter21_reg <= mul_119_3_i_reg_2737;
        mul_119_3_i_reg_2737_pp0_iter22_reg <= mul_119_3_i_reg_2737_pp0_iter21_reg;
        mul_124_i_reg_2667_pp0_iter20_reg <= mul_124_i_reg_2667;
        mul_1_110_i_reg_2682_pp0_iter20_reg <= mul_1_110_i_reg_2682;
        mul_1_1_3_i_reg_2757_pp0_iter21_reg <= mul_1_1_3_i_reg_2757;
        mul_1_1_3_i_reg_2757_pp0_iter22_reg <= mul_1_1_3_i_reg_2757_pp0_iter21_reg;
        mul_1_3_i_reg_2747_pp0_iter21_reg <= mul_1_3_i_reg_2747;
        mul_1_3_i_reg_2747_pp0_iter22_reg <= mul_1_3_i_reg_2747_pp0_iter21_reg;
        mul_3_i_reg_2727_pp0_iter21_reg <= mul_3_i_reg_2727;
        mul_3_i_reg_2727_pp0_iter22_reg <= mul_3_i_reg_2727_pp0_iter21_reg;
        res_18_reg_2344 <= res_18_fu_1040_p3;
        res_20_reg_2349 <= res_20_fu_1098_p3;
        res_21_reg_2354 <= res_21_fu_1156_p3;
        scale_1_reg_2303_pp0_iter6_reg <= scale_1_reg_2303;
        scaled_1_reg_2561 <= scaled_1_fu_1501_p3;
        scaled_3_reg_2566 <= scaled_3_fu_1571_p3;
        scaled_5_reg_2571 <= scaled_5_fu_1641_p3;
        tmp_25_reg_2576 <= grp_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_quant_1_reg_2406 <= grp_fu_517_p2;
        input_quant_reg_2400 <= grp_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_quant_2_reg_2412 <= grp_fu_508_p2;
        input_quant_4_reg_2418 <= grp_fu_513_p2;
        input_quant_5_reg_2424 <= grp_fu_517_p2;
        sum_7_reg_2430 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        input_quant_3_reg_2435 <= grp_fu_513_p2;
        input_quant_6_reg_2441 <= grp_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_quant_7_reg_2447 <= grp_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_119_1_i_reg_2697 <= grp_fu_487_p2;
        mul_119_2_i_reg_2702 <= grp_fu_492_p2;
        mul_1_1_1_i_reg_2712 <= grp_fu_500_p2;
        mul_1_1_2_i_reg_2717 <= grp_fu_504_p2;
        mul_1_2_i_reg_2707 <= grp_fu_496_p2;
        mul_2_i_reg_2692 <= grp_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_119_i_reg_2672 <= grp_fu_470_p2;
        mul_124_i_reg_2667 <= grp_fu_465_p2;
        mul_1_110_i_reg_2682 <= grp_fu_482_p2;
        mul_1_1_i_reg_2687 <= grp_fu_487_p2;
        mul_1_i_reg_2677 <= grp_fu_475_p2;
        mul_i_reg_2662 <= grp_fu_460_p2;
        weight_quantized_6_reg_2650 <= grp_fu_525_p2;
        weight_quantized_7_reg_2656 <= grp_fu_529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        p_x_assign_2_reg_2533 <= grp_fu_492_p2;
        p_x_assign_3_reg_2538 <= grp_fu_496_p2;
        p_x_assign_4_reg_2543 <= grp_fu_500_p2;
        p_x_assign_5_reg_2548 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_597 <= grp_find_max_abs_fu_338_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_602 <= grp_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_609 <= grp_generic_round_float_s_fu_373_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_618 <= grp_generic_round_float_s_fu_364_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_626 <= grp_generic_round_float_s_fu_382_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        scale_1_reg_2303 <= grp_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        scale_reg_2288 <= grp_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        scaled_10_reg_2581 <= grp_generic_round_float_s_fu_391_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        scaled_6_reg_2553 <= grp_generic_round_float_s_fu_391_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        scaled_val_2_reg_2314 <= grp_fu_465_p2;
        sum_4_reg_2319 <= grp_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        scaled_val_7_reg_2334 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_1_reg_2258 <= grp_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_2_reg_2273 <= grp_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_3_reg_2283 <= grp_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_5_reg_2375 <= grp_fu_440_p2;
        x_assign_6_reg_2369 <= grp_generic_fmax_float_s_fu_412_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_6_reg_2390 <= grp_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_reg_2243 <= grp_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_quantized_1_reg_2620 <= grp_fu_525_p2;
        weight_quantized_2_reg_2626 <= grp_fu_529_p2;
        weight_quantized_reg_2614 <= grp_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        weight_quantized_3_reg_2632 <= grp_fu_521_p2;
        weight_quantized_4_reg_2638 <= grp_fu_525_p2;
        weight_quantized_5_reg_2644 <= grp_fu_529_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to23 = 1'b1;
    end else begin
        ap_idle_pp0_0to23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to24 = 1'b1;
    end else begin
        ap_idle_pp0_1to24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to23 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp110)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp144)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp131)))) begin
        grp_find_max_abs_fu_338_ap_ce = 1'b1;
    end else begin
        grp_find_max_abs_fu_338_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_find_max_abs_fu_338_arr_0_val = empty_6_fu_670_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_find_max_abs_fu_338_arr_0_val = empty_fu_634_p1;
        end else begin
            grp_find_max_abs_fu_338_arr_0_val = 'bx;
        end
    end else begin
        grp_find_max_abs_fu_338_arr_0_val = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_find_max_abs_fu_338_arr_1_val = empty_8_fu_674_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_find_max_abs_fu_338_arr_1_val = empty_7_fu_639_p1;
        end else begin
            grp_find_max_abs_fu_338_arr_1_val = 'bx;
        end
    end else begin
        grp_find_max_abs_fu_338_arr_1_val = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_find_max_abs_fu_338_arr_2_val = empty_10_fu_678_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_find_max_abs_fu_338_arr_2_val = empty_9_fu_644_p1;
        end else begin
            grp_find_max_abs_fu_338_arr_2_val = 'bx;
        end
    end else begin
        grp_find_max_abs_fu_338_arr_2_val = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_find_max_abs_fu_338_arr_3_val = empty_12_fu_682_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_find_max_abs_fu_338_arr_3_val = empty_11_fu_649_p1;
        end else begin
            grp_find_max_abs_fu_338_arr_3_val = 'bx;
        end
    end else begin
        grp_find_max_abs_fu_338_arr_3_val = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_419_p0 = add_125_i_reg_2762;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_419_p0 = mul_i_reg_2662;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_419_p0 = bitcast_ln327_fu_693_p1;
    end else begin
        grp_fu_419_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_419_p1 = mul_2_i_reg_2692_pp0_iter21_reg;
    end else if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_419_p1 = 32'd0;
    end else begin
        grp_fu_419_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_424_p0 = add_120_1_i_reg_2767;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_424_p0 = mul_119_i_reg_2672;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_424_p0 = sum_reg_2243;
    end else begin
        grp_fu_424_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_424_p1 = mul_119_2_i_reg_2702_pp0_iter21_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_424_p1 = 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_424_p1 = bitcast_ln327_1_fu_721_p1;
    end else begin
        grp_fu_424_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_428_p0 = add_1_111_i_reg_2772;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_428_p0 = mul_1_i_reg_2677;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_428_p0 = sum_1_reg_2258;
    end else begin
        grp_fu_428_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_428_p1 = mul_1_2_i_reg_2707_pp0_iter21_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_428_p1 = 32'd0;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_428_p1 = bitcast_ln327_2_fu_833_p1;
    end else begin
        grp_fu_428_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_432_p0 = add_1_1_1_i_reg_2777;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_432_p0 = mul_1_1_i_reg_2687;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_432_p0 = sum_2_reg_2273;
    end else begin
        grp_fu_432_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_432_p1 = mul_1_1_2_i_reg_2717_pp0_iter21_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_432_p1 = 32'd0;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_432_p1 = bitcast_ln327_3_fu_845_p1;
    end else begin
        grp_fu_432_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_436_p0 = add_2_i_reg_2782;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_436_p0 = add_i_reg_2722;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_436_p0 = sum_3_reg_2283;
    end else begin
        grp_fu_436_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_436_p1 = mul_3_i_reg_2727_pp0_iter22_reg;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_436_p1 = mul_124_i_reg_2667_pp0_iter20_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_436_p1 = bitcast_ln327_4_fu_857_p1;
    end else begin
        grp_fu_436_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_440_p0 = add_120_2_i_reg_2787;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_440_p0 = add_120_i_reg_2732;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_440_p0 = sum_4_reg_2319;
    end else begin
        grp_fu_440_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_440_p1 = mul_119_3_i_reg_2737_pp0_iter22_reg;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_440_p1 = mul_119_1_i_reg_2697;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_440_p1 = bitcast_ln327_5_fu_985_p1;
    end else begin
        grp_fu_440_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_444_p0 = add_1_2_i_reg_2792;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_444_p0 = add_1_i_reg_2742;
    end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_444_p0 = sum_5_reg_2375;
    end else begin
        grp_fu_444_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_444_p1 = mul_1_3_i_reg_2747_pp0_iter22_reg;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_444_p1 = mul_1_110_i_reg_2682_pp0_iter20_reg;
    end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_444_p1 = bitcast_ln327_6_fu_1343_p1;
    end else begin
        grp_fu_444_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_448_p0 = add_1_1_2_i_reg_2797;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_448_p0 = add_1_1_i_reg_2752;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_448_p0 = sum_6_reg_2390;
    end else begin
        grp_fu_448_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_448_p1 = mul_1_1_3_i_reg_2757_pp0_iter22_reg;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_448_p1 = mul_1_1_1_i_reg_2712;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_448_p1 = bitcast_ln327_7_fu_1355_p1;
    end else begin
        grp_fu_448_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_455_p0 = sum_7_reg_2430;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_455_p0 = empty_11_reg_2103_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_455_p0 = empty_reg_2070_pp0_iter4_reg;
    end else begin
        grp_fu_455_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_455_p1 = 32'd1040187392;
    end else if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_455_p1 = scale_reg_2288;
    end else begin
        grp_fu_455_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_460_p0 = input_quant_reg_2400_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_460_p0 = empty_6_reg_2174_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_460_p0 = empty_7_reg_2081_pp0_iter4_reg;
    end else begin
        grp_fu_460_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_460_p1 = weight_quantized_reg_2614;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_460_p1 = scale_1_reg_2303;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_460_p1 = scale_reg_2288;
    end else begin
        grp_fu_460_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_465_p0 = input_quant_1_reg_2406_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_465_p0 = empty_8_reg_2180_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_465_p0 = empty_9_reg_2092_pp0_iter4_reg;
    end else begin
        grp_fu_465_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_465_p1 = weight_quantized_2_reg_2626;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_465_p1 = scale_1_reg_2303;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_465_p1 = scale_reg_2288;
    end else begin
        grp_fu_465_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_470_p0 = input_quant_reg_2400_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_470_p0 = dc_fu_1407_p1;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_470_p0 = empty_10_reg_2186_pp0_iter4_reg;
    end else begin
        grp_fu_470_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_470_p1 = weight_quantized_1_reg_2620;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_470_p1 = scale_2_reg_2478;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_470_p1 = scale_1_reg_2303;
    end else begin
        grp_fu_470_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_475_p0 = input_quant_4_reg_2418_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_475_p0 = dc_1_fu_1411_p1;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_475_p0 = empty_12_reg_2192_pp0_iter4_reg;
    end else begin
        grp_fu_475_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_475_p1 = weight_quantized_reg_2614;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_475_p1 = scale_2_reg_2478;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_475_p1 = scale_1_reg_2303;
    end else begin
        grp_fu_475_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_482_p0 = input_quant_2_reg_2412_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_482_p0 = input_quant_5_reg_2424_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_482_p0 = dc_2_fu_1415_p1;
    end else begin
        grp_fu_482_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_482_p1 = weight_quantized_4_reg_2638;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_482_p1 = weight_quantized_2_reg_2626;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_482_p1 = scale_2_reg_2478;
    end else begin
        grp_fu_482_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_487_p0 = input_quant_1_reg_2406_pp0_iter19_reg;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_487_p0 = input_quant_4_reg_2418_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_487_p0 = dc_3_fu_1419_p1;
    end else begin
        grp_fu_487_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_487_p1 = weight_quantized_3_reg_2632;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_487_p1 = weight_quantized_1_reg_2620;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_487_p1 = scale_2_reg_2478;
    end else begin
        grp_fu_487_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_492_p0 = input_quant_3_reg_2435_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_492_p0 = input_quant_2_reg_2412_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_492_p0 = dc_4_fu_1423_p1;
    end else begin
        grp_fu_492_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_492_p1 = weight_quantized_6_reg_2650;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_492_p1 = weight_quantized_5_reg_2644;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_492_p1 = scale_2_reg_2478;
    end else begin
        grp_fu_492_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_496_p0 = input_quant_3_reg_2435_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_496_p0 = input_quant_6_reg_2441_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_496_p0 = dc_5_fu_1427_p1;
    end else begin
        grp_fu_496_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_496_p1 = weight_quantized_7_reg_2656;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_496_p1 = weight_quantized_4_reg_2638;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_496_p1 = scale_2_reg_2478;
    end else begin
        grp_fu_496_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_500_p0 = input_quant_7_reg_2447_pp0_iter19_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_500_p0 = input_quant_5_reg_2424_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_500_p0 = dc_6_fu_1431_p1;
    end else begin
        grp_fu_500_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_500_p1 = weight_quantized_6_reg_2650;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_500_p1 = weight_quantized_3_reg_2632;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_500_p1 = scale_2_reg_2478;
    end else begin
        grp_fu_500_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_504_p0 = input_quant_7_reg_2447_pp0_iter19_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_504_p0 = input_quant_6_reg_2441_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_504_p0 = dc_7_fu_1435_p1;
    end else begin
        grp_fu_504_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_504_p1 = weight_quantized_7_reg_2656;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_504_p1 = weight_quantized_5_reg_2644;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_504_p1 = scale_2_reg_2478;
    end else begin
        grp_fu_504_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_508_p0 = res_18_reg_2344;
    end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_508_p0 = 32'd1123942400;
    end else begin
        grp_fu_508_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_508_p1 = scale_reg_2288_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_508_p1 = select_ln47_1_reg_2263;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_508_p1 = select_ln47_reg_2253;
    end else begin
        grp_fu_508_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_513_p0 = res_19_reg_2359;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_513_p0 = res_20_reg_2349;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_513_p0 = res_16_reg_2324;
        end else begin
            grp_fu_513_p0 = 'bx;
        end
    end else begin
        grp_fu_513_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_513_p1 = scale_1_reg_2303_pp0_iter6_reg;
    end else if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_513_p1 = scale_reg_2288_pp0_iter5_reg;
    end else begin
        grp_fu_513_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_517_p0 = res_22_reg_2364;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_517_p0 = res_21_reg_2354;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_517_p0 = res_17_reg_2329;
        end else begin
            grp_fu_517_p0 = 'bx;
        end
    end else begin
        grp_fu_517_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_517_p1 = scale_1_reg_2303_pp0_iter6_reg;
    end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_517_p1 = scale_reg_2288_pp0_iter5_reg;
    end else begin
        grp_fu_517_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_521_p0 = scaled_7_reg_2589;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_521_p0 = scaled_1_reg_2561;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_521_p0 = res_23_reg_2380;
    end else begin
        grp_fu_521_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_521_p1 = scale_2_reg_2478_pp0_iter15_reg;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_521_p1 = scale_1_reg_2303_pp0_iter6_reg;
    end else begin
        grp_fu_521_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_525_p0 = scaled_13_reg_2604;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_525_p0 = scaled_9_reg_2594;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_525_p0 = scaled_3_reg_2566;
    end else begin
        grp_fu_525_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_525_p1 = scale_2_reg_2478_pp0_iter16_reg;
    end else if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_525_p1 = scale_2_reg_2478_pp0_iter15_reg;
    end else begin
        grp_fu_525_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_529_p0 = scaled_15_reg_2609;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_529_p0 = scaled_11_reg_2599;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_529_p0 = scaled_5_reg_2571;
    end else begin
        grp_fu_529_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_529_p1 = scale_2_reg_2478_pp0_iter16_reg;
    end else if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_529_p1 = scale_2_reg_2478_pp0_iter15_reg;
    end else begin
        grp_fu_529_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_00001))) begin
        grp_fu_539_opcode = 5'd2;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001)))) begin
        grp_fu_539_opcode = 5'd4;
    end else begin
        grp_fu_539_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_539_p0 = grp_generic_round_float_s_fu_364_ap_return;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_539_p0 = grp_find_max_abs_fu_338_ap_return;
    end else begin
        grp_fu_539_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_539_p1 = 32'd1065353216;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_539_p1 = 32'd925353388;
    end else begin
        grp_fu_539_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_545_p0 = scaled_6_reg_2553;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_545_p0 = grp_generic_round_float_s_fu_364_ap_return;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_545_p0 = reg_602;
    end else begin
        grp_fu_545_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_545_p1 = 32'd3212836864;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_545_p1 = 32'd925353388;
    end else begin
        grp_fu_545_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_554_p0 = grp_generic_round_float_s_fu_364_ap_return;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_554_p0 = grp_generic_round_float_s_fu_382_ap_return;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_554_p0 = grp_generic_round_float_s_fu_373_ap_return;
    end else begin
        grp_fu_554_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_560_p0 = grp_generic_round_float_s_fu_364_ap_return;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_560_p0 = grp_generic_round_float_s_fu_382_ap_return;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_560_p0 = grp_generic_round_float_s_fu_373_ap_return;
    end else begin
        grp_fu_560_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_566_p0 = grp_generic_round_float_s_fu_373_ap_return;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_566_p0 = grp_generic_round_float_s_fu_391_ap_return;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_566_p0 = grp_generic_round_float_s_fu_382_ap_return;
    end else begin
        grp_fu_566_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_572_p0 = grp_generic_round_float_s_fu_373_ap_return;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_572_p0 = grp_generic_round_float_s_fu_391_ap_return;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_572_p0 = grp_generic_round_float_s_fu_382_ap_return;
    end else begin
        grp_fu_572_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_generic_fmax_float_s_fu_406_x = reg_609;
    end else if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_generic_fmax_float_s_fu_406_x = grp_generic_round_float_s_fu_355_ap_return;
    end else begin
        grp_generic_fmax_float_s_fu_406_x = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_generic_fmax_float_s_fu_412_x = grp_generic_round_float_s_fu_355_ap_return;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_generic_fmax_float_s_fu_412_x = grp_generic_round_float_s_fu_364_ap_return;
        end else begin
            grp_generic_fmax_float_s_fu_412_x = 'bx;
        end
    end else begin
        grp_generic_fmax_float_s_fu_412_x = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_generic_round_float_s_fu_346_x = reg_602;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_generic_round_float_s_fu_346_x = scaled_val_2_reg_2314;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_generic_round_float_s_fu_346_x = grp_fu_455_p2;
    end else begin
        grp_generic_round_float_s_fu_346_x = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_generic_round_float_s_fu_355_x = scaled_val_7_reg_2334;
    end else if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_generic_round_float_s_fu_355_x = grp_fu_460_p2;
    end else begin
        grp_generic_round_float_s_fu_355_x = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_generic_round_float_s_fu_364_x = p_x_assign_4_reg_2543;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_generic_round_float_s_fu_364_x = grp_fu_470_p2;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_generic_round_float_s_fu_364_x = grp_fu_465_p2;
    end else begin
        grp_generic_round_float_s_fu_364_x = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_generic_round_float_s_fu_373_x = p_x_assign_5_reg_2548;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_generic_round_float_s_fu_373_x = grp_fu_475_p2;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_generic_round_float_s_fu_373_x = grp_fu_470_p2;
    end else begin
        grp_generic_round_float_s_fu_373_x = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter15 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_generic_round_float_s_fu_382_x = p_x_assign_2_reg_2533;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_generic_round_float_s_fu_382_x = grp_fu_482_p2;
        end else begin
            grp_generic_round_float_s_fu_382_x = 'bx;
        end
    end else begin
        grp_generic_round_float_s_fu_382_x = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter15 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_generic_round_float_s_fu_391_x = p_x_assign_3_reg_2538;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_generic_round_float_s_fu_391_x = grp_fu_487_p2;
        end else begin
            grp_generic_round_float_s_fu_391_x = 'bx;
        end
    end else begin
        grp_generic_round_float_s_fu_391_x = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_1_ce1 = 1'b1;
    end else begin
        input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_ce0 = 1'b1;
    end else begin
        input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_ce1 = 1'b1;
    end else begin
        input_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_3_ce0 = 1'b1;
    end else begin
        input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_3_ce1 = 1'b1;
    end else begin
        input_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_ce1 = 1'b1;
    end else begin
        output_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_we1 = 1'b1;
    end else begin
        output_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_1_ce1 = 1'b1;
    end else begin
        output_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_1_we0 = 1'b1;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_1_we1 = 1'b1;
    end else begin
        output_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weight_0_address0 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weight_0_address0 = 64'd1;
        end else begin
            weight_0_address0 = 'bx;
        end
    end else begin
        weight_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weight_0_address1 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weight_0_address1 = 64'd0;
        end else begin
            weight_0_address1 = 'bx;
        end
    end else begin
        weight_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        weight_0_ce0 = 1'b1;
    end else begin
        weight_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        weight_0_ce1 = 1'b1;
    end else begin
        weight_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weight_1_address0 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weight_1_address0 = 64'd1;
        end else begin
            weight_1_address0 = 'bx;
        end
    end else begin
        weight_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weight_1_address1 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weight_1_address1 = 64'd0;
        end else begin
            weight_1_address1 = 'bx;
        end
    end else begin
        weight_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        weight_1_ce0 = 1'b1;
    end else begin
        weight_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        weight_1_ce1 = 1'b1;
    end else begin
        weight_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to24 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln18_1_fu_950_p2 = (icmp_ln18_4_fu_944_p2 & icmp_ln18_3_fu_938_p2);

assign and_ln18_2_fu_1020_p2 = (icmp_ln18_6_fu_1014_p2 & icmp_ln18_5_fu_1008_p2);

assign and_ln18_3_fu_1194_p2 = (icmp_ln18_8_fu_1188_p2 & icmp_ln18_7_fu_1182_p2);

assign and_ln18_4_fu_1078_p2 = (icmp_ln18_9_fu_1066_p2 & icmp_ln18_10_fu_1072_p2);

assign and_ln18_5_fu_1136_p2 = (icmp_ln18_12_fu_1130_p2 & icmp_ln18_11_fu_1124_p2);

assign and_ln18_6_fu_1252_p2 = (icmp_ln18_14_fu_1246_p2 & icmp_ln18_13_fu_1240_p2);

assign and_ln18_7_fu_1309_p2 = (icmp_ln18_16_fu_1303_p2 & icmp_ln18_15_fu_1297_p2);

assign and_ln18_fu_892_p2 = (icmp_ln18_fu_880_p2 & icmp_ln18_2_fu_886_p2);

assign and_ln47_1_fu_812_p2 = (or_ln47_1_fu_806_p2 & grp_fu_539_p2);

assign and_ln47_2_fu_1394_p2 = (or_ln47_2_fu_1390_p2 & grp_fu_545_p2);

assign and_ln47_fu_762_p2 = (or_ln47_fu_756_p2 & grp_fu_539_p2);

assign and_ln86_10_fu_1821_p2 = (or_ln86_13_fu_1815_p2 & grp_fu_566_p2);

assign and_ln86_11_fu_1827_p2 = (or_ln86_13_fu_1815_p2 & grp_fu_572_p2);

assign and_ln86_12_fu_1890_p2 = (or_ln86_14_fu_1884_p2 & grp_fu_554_p2);

assign and_ln86_13_fu_1896_p2 = (or_ln86_14_fu_1884_p2 & grp_fu_560_p2);

assign and_ln86_14_fu_1960_p2 = (or_ln86_15_fu_1954_p2 & grp_fu_566_p2);

assign and_ln86_15_fu_1966_p2 = (or_ln86_15_fu_1954_p2 & grp_fu_572_p2);

assign and_ln86_1_fu_1481_p2 = (or_ln86_8_fu_1469_p2 & grp_fu_545_p2);

assign and_ln86_2_fu_1545_p2 = (or_ln86_9_fu_1539_p2 & grp_fu_554_p2);

assign and_ln86_3_fu_1551_p2 = (or_ln86_9_fu_1539_p2 & grp_fu_560_p2);

assign and_ln86_4_fu_1615_p2 = (or_ln86_10_fu_1609_p2 & grp_fu_566_p2);

assign and_ln86_5_fu_1621_p2 = (or_ln86_10_fu_1609_p2 & grp_fu_572_p2);

assign and_ln86_6_fu_1684_p2 = (tmp_25_reg_2576 & or_ln86_11_fu_1678_p2);

assign and_ln86_7_fu_1689_p2 = (or_ln86_11_fu_1678_p2 & grp_fu_545_p2);

assign and_ln86_8_fu_1752_p2 = (or_ln86_12_fu_1746_p2 & grp_fu_554_p2);

assign and_ln86_9_fu_1758_p2 = (or_ln86_12_fu_1746_p2 & grp_fu_560_p2);

assign and_ln86_fu_1475_p2 = (or_ln86_8_fu_1469_p2 & grp_fu_539_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp144 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp110 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp131 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln327_1_fu_721_p1 = t_14_fu_714_p3;

assign bitcast_ln327_2_fu_833_p1 = t_15_fu_826_p3;

assign bitcast_ln327_3_fu_845_p1 = t_16_fu_838_p3;

assign bitcast_ln327_4_fu_857_p1 = t_17_fu_850_p3;

assign bitcast_ln327_5_fu_985_p1 = t_18_fu_978_p3;

assign bitcast_ln327_6_fu_1343_p1 = t_19_fu_1336_p3;

assign bitcast_ln327_7_fu_1355_p1 = t_20_fu_1348_p3;

assign bitcast_ln327_fu_693_p1 = t_fu_686_p3;

assign bitcast_ln47_1_fu_776_p1 = reg_597;

assign bitcast_ln47_2_fu_1360_p1 = reg_602;

assign bitcast_ln47_fu_726_p1 = reg_597;

assign bitcast_ln86_1_fu_1509_p1 = reg_609;

assign bitcast_ln86_2_fu_1579_p1 = reg_626;

assign bitcast_ln86_3_fu_1649_p1 = scaled_6_reg_2553;

assign bitcast_ln86_4_fu_1716_p1 = reg_626;

assign bitcast_ln86_5_fu_1786_p1 = scaled_10_reg_2581;

assign bitcast_ln86_6_fu_1854_p1 = reg_618;

assign bitcast_ln86_7_fu_1924_p1 = reg_609;

assign bitcast_ln86_fu_1439_p1 = reg_618;

assign data_20_fu_862_p1 = grp_generic_fmax_float_s_fu_400_ap_return;

assign data_21_fu_920_p1 = grp_generic_fmax_float_s_fu_406_ap_return;

assign data_22_fu_990_p1 = grp_generic_fmax_float_s_fu_400_ap_return;

assign data_23_fu_1164_p1 = grp_generic_fmax_float_s_fu_400_ap_return;

assign data_24_fu_1048_p1 = grp_generic_fmax_float_s_fu_406_ap_return;

assign data_25_fu_1106_p1 = grp_generic_fmax_float_s_fu_412_ap_return;

assign data_26_fu_1222_p1 = grp_generic_fmax_float_s_fu_406_ap_return;

assign data_27_fu_1280_p1 = x_assign_6_reg_2369;

assign dc_1_fu_1411_p1 = data_13_reg_2124_pp0_iter14_reg;

assign dc_2_fu_1415_p1 = data_14_reg_2134_pp0_iter14_reg;

assign dc_3_fu_1419_p1 = data_15_reg_2144_pp0_iter14_reg;

assign dc_4_fu_1423_p1 = data_16_reg_2203_pp0_iter14_reg;

assign dc_5_fu_1427_p1 = data_17_reg_2213_pp0_iter14_reg;

assign dc_6_fu_1431_p1 = data_18_reg_2223_pp0_iter14_reg;

assign dc_7_fu_1435_p1 = data_19_reg_2233_pp0_iter14_reg;

assign dc_fu_1407_p1 = data_reg_2114_pp0_iter14_reg;

assign empty_10_fu_678_p1 = input_2_load_1_reg_2098;

assign empty_11_fu_649_p1 = input_3_q1;

assign empty_12_fu_682_p1 = input_3_load_1_reg_2109;

assign empty_6_fu_670_p1 = input_0_load_1_reg_2076;

assign empty_7_fu_639_p1 = input_1_q1;

assign empty_8_fu_674_p1 = input_1_load_1_reg_2087;

assign empty_9_fu_644_p1 = input_2_q1;

assign empty_fu_634_p1 = input_0_q1;

assign grp_generic_round_float_s_fu_346_ap_start = grp_generic_round_float_s_fu_346_ap_start_reg;

assign grp_generic_round_float_s_fu_355_ap_start = grp_generic_round_float_s_fu_355_ap_start_reg;

assign grp_generic_round_float_s_fu_364_ap_start = grp_generic_round_float_s_fu_364_ap_start_reg;

assign grp_generic_round_float_s_fu_373_ap_start = grp_generic_round_float_s_fu_373_ap_start_reg;

assign grp_generic_round_float_s_fu_382_ap_start = grp_generic_round_float_s_fu_382_ap_start_reg;

assign grp_generic_round_float_s_fu_391_ap_start = grp_generic_round_float_s_fu_391_ap_start_reg;

assign icmp_ln18_10_fu_1072_p2 = ((x_fp_sig_4_fu_1062_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_11_fu_1124_p2 = ((x_fp_exp_5_fu_1110_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_12_fu_1130_p2 = ((x_fp_sig_5_fu_1120_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_13_fu_1240_p2 = ((x_fp_exp_6_fu_1226_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_14_fu_1246_p2 = ((x_fp_sig_6_fu_1236_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_15_fu_1297_p2 = ((x_fp_exp_7_fu_1283_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_16_fu_1303_p2 = ((x_fp_sig_7_fu_1293_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_2_fu_886_p2 = ((x_fp_sig_fu_876_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_3_fu_938_p2 = ((x_fp_exp_1_fu_924_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_4_fu_944_p2 = ((x_fp_sig_1_fu_934_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_5_fu_1008_p2 = ((x_fp_exp_2_fu_994_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_6_fu_1014_p2 = ((x_fp_sig_2_fu_1004_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_7_fu_1182_p2 = ((x_fp_exp_3_fu_1168_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_8_fu_1188_p2 = ((x_fp_sig_3_fu_1178_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_9_fu_1066_p2 = ((x_fp_exp_4_fu_1052_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_880_p2 = ((x_fp_exp_fu_866_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_750_p2 = ((trunc_ln47_fu_740_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_2_fu_794_p2 = ((tmp_11_fu_780_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_3_fu_800_p2 = ((trunc_ln47_1_fu_790_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_4_fu_1378_p2 = ((tmp_13_fu_1364_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_5_fu_1384_p2 = ((trunc_ln47_2_fu_1374_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_744_p2 = ((tmp_fu_730_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_10_fu_1803_p2 = ((tmp_30_fu_1789_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_11_fu_1809_p2 = ((trunc_ln86_5_fu_1799_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_12_fu_1872_p2 = ((tmp_33_fu_1858_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_13_fu_1878_p2 = ((trunc_ln86_6_fu_1868_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_14_fu_1942_p2 = ((tmp_36_fu_1928_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_15_fu_1948_p2 = ((trunc_ln86_7_fu_1938_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_1_fu_1463_p2 = ((trunc_ln86_fu_1453_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_2_fu_1527_p2 = ((tmp_18_fu_1513_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_3_fu_1533_p2 = ((trunc_ln86_1_fu_1523_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_4_fu_1597_p2 = ((tmp_21_fu_1583_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_5_fu_1603_p2 = ((trunc_ln86_2_fu_1593_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_6_fu_1666_p2 = ((tmp_24_fu_1652_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_7_fu_1672_p2 = ((trunc_ln86_3_fu_1662_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_8_fu_1734_p2 = ((tmp_27_fu_1720_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln86_9_fu_1740_p2 = ((trunc_ln86_4_fu_1730_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1457_p2 = ((tmp_15_fu_1443_p4 != 8'd255) ? 1'b1 : 1'b0);

assign input_0_address0 = 64'd1;

assign input_0_address1 = 64'd0;

assign input_1_address0 = 64'd1;

assign input_1_address1 = 64'd0;

assign input_2_address0 = 64'd1;

assign input_2_address1 = 64'd0;

assign input_3_address0 = 64'd1;

assign input_3_address1 = 64'd0;

assign or_ln47_1_fu_806_p2 = (icmp_ln47_3_fu_800_p2 | icmp_ln47_2_fu_794_p2);

assign or_ln47_2_fu_1390_p2 = (icmp_ln47_5_reg_2458 | icmp_ln47_4_reg_2453);

assign or_ln47_fu_756_p2 = (icmp_ln47_fu_744_p2 | icmp_ln47_1_fu_750_p2);

assign or_ln86_10_fu_1609_p2 = (icmp_ln86_5_fu_1603_p2 | icmp_ln86_4_fu_1597_p2);

assign or_ln86_11_fu_1678_p2 = (icmp_ln86_7_fu_1672_p2 | icmp_ln86_6_fu_1666_p2);

assign or_ln86_12_fu_1746_p2 = (icmp_ln86_9_fu_1740_p2 | icmp_ln86_8_fu_1734_p2);

assign or_ln86_13_fu_1815_p2 = (icmp_ln86_11_fu_1809_p2 | icmp_ln86_10_fu_1803_p2);

assign or_ln86_14_fu_1884_p2 = (icmp_ln86_13_fu_1878_p2 | icmp_ln86_12_fu_1872_p2);

assign or_ln86_15_fu_1954_p2 = (icmp_ln86_15_fu_1948_p2 | icmp_ln86_14_fu_1942_p2);

assign or_ln86_1_fu_1565_p2 = (and_ln86_3_fu_1551_p2 | and_ln86_2_fu_1545_p2);

assign or_ln86_2_fu_1635_p2 = (and_ln86_5_fu_1621_p2 | and_ln86_4_fu_1615_p2);

assign or_ln86_3_fu_1703_p2 = (and_ln86_7_fu_1689_p2 | and_ln86_6_fu_1684_p2);

assign or_ln86_4_fu_1772_p2 = (and_ln86_9_fu_1758_p2 | and_ln86_8_fu_1752_p2);

assign or_ln86_5_fu_1841_p2 = (and_ln86_11_fu_1827_p2 | and_ln86_10_fu_1821_p2);

assign or_ln86_6_fu_1910_p2 = (and_ln86_13_fu_1896_p2 | and_ln86_12_fu_1890_p2);

assign or_ln86_7_fu_1980_p2 = (and_ln86_15_fu_1966_p2 | and_ln86_14_fu_1960_p2);

assign or_ln86_8_fu_1469_p2 = (icmp_ln86_fu_1457_p2 | icmp_ln86_1_fu_1463_p2);

assign or_ln86_9_fu_1539_p2 = (icmp_ln86_3_fu_1533_p2 | icmp_ln86_2_fu_1527_p2);

assign or_ln86_fu_1495_p2 = (and_ln86_fu_1475_p2 | and_ln86_1_fu_1481_p2);

assign output_0_address0 = 64'd1;

assign output_0_address1 = 64'd0;

assign output_0_d0 = add_1_3_i_reg_2812;

assign output_0_d1 = add_3_i_reg_2802;

assign output_1_address0 = 64'd1;

assign output_1_address1 = 64'd0;

assign output_1_d0 = add_1_1_3_i_reg_2817;

assign output_1_d1 = add_120_3_i_reg_2807;

assign res_10_fu_1148_p3 = ((ymaggreater_6_fu_1142_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_412_ap_return : 32'd1123942400);

assign res_12_fu_1264_p3 = ((ymaggreater_7_fu_1258_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_406_ap_return : 32'd1123942400);

assign res_14_fu_1321_p3 = ((ymaggreater_8_fu_1315_p2[0:0] == 1'b1) ? x_assign_6_reg_2369 : 32'd1123942400);

assign res_16_fu_912_p3 = ((and_ln18_fu_892_p2[0:0] == 1'b1) ? 32'd1123942400 : res_fu_904_p3);

assign res_17_fu_970_p3 = ((and_ln18_1_fu_950_p2[0:0] == 1'b1) ? 32'd1123942400 : res_2_fu_962_p3);

assign res_18_fu_1040_p3 = ((and_ln18_2_fu_1020_p2[0:0] == 1'b1) ? 32'd1123942400 : res_4_fu_1032_p3);

assign res_19_fu_1214_p3 = ((and_ln18_3_fu_1194_p2[0:0] == 1'b1) ? 32'd1123942400 : res_6_fu_1206_p3);

assign res_20_fu_1098_p3 = ((and_ln18_4_fu_1078_p2[0:0] == 1'b1) ? 32'd1123942400 : res_8_fu_1090_p3);

assign res_21_fu_1156_p3 = ((and_ln18_5_fu_1136_p2[0:0] == 1'b1) ? 32'd1123942400 : res_10_fu_1148_p3);

assign res_22_fu_1272_p3 = ((and_ln18_6_fu_1252_p2[0:0] == 1'b1) ? 32'd1123942400 : res_12_fu_1264_p3);

assign res_23_fu_1328_p3 = ((and_ln18_7_fu_1309_p2[0:0] == 1'b1) ? 32'd1123942400 : res_14_fu_1321_p3);

assign res_2_fu_962_p3 = ((ymaggreater_2_fu_956_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_406_ap_return : 32'd1123942400);

assign res_4_fu_1032_p3 = ((ymaggreater_3_fu_1026_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_400_ap_return : 32'd1123942400);

assign res_6_fu_1206_p3 = ((ymaggreater_4_fu_1200_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_400_ap_return : 32'd1123942400);

assign res_8_fu_1090_p3 = ((ymaggreater_5_fu_1084_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_406_ap_return : 32'd1123942400);

assign res_fu_904_p3 = ((ymaggreater_fu_898_p2[0:0] == 1'b1) ? grp_generic_fmax_float_s_fu_400_ap_return : 32'd1123942400);

assign scaled_11_fu_1847_p3 = ((or_ln86_5_fu_1841_p2[0:0] == 1'b1) ? select_ln86_10_fu_1833_p3 : scaled_10_reg_2581);

assign scaled_13_fu_1916_p3 = ((or_ln86_6_fu_1910_p2[0:0] == 1'b1) ? select_ln86_12_fu_1902_p3 : reg_618);

assign scaled_15_fu_1986_p3 = ((or_ln86_7_fu_1980_p2[0:0] == 1'b1) ? select_ln86_14_fu_1972_p3 : reg_609);

assign scaled_1_fu_1501_p3 = ((or_ln86_fu_1495_p2[0:0] == 1'b1) ? select_ln86_fu_1487_p3 : reg_618);

assign scaled_3_fu_1571_p3 = ((or_ln86_1_fu_1565_p2[0:0] == 1'b1) ? select_ln86_2_fu_1557_p3 : reg_609);

assign scaled_5_fu_1641_p3 = ((or_ln86_2_fu_1635_p2[0:0] == 1'b1) ? select_ln86_4_fu_1627_p3 : reg_626);

assign scaled_7_fu_1709_p3 = ((or_ln86_3_fu_1703_p2[0:0] == 1'b1) ? select_ln86_6_fu_1695_p3 : scaled_6_reg_2553);

assign scaled_9_fu_1778_p3 = ((or_ln86_4_fu_1772_p2[0:0] == 1'b1) ? select_ln86_8_fu_1764_p3 : reg_626);

assign select_ln47_1_fu_818_p3 = ((and_ln47_1_fu_812_p2[0:0] == 1'b1) ? 32'd925353388 : reg_597);

assign select_ln47_fu_768_p3 = ((and_ln47_fu_762_p2[0:0] == 1'b1) ? 32'd925353388 : reg_597);

assign select_ln75_fu_1400_p3 = ((and_ln47_2_fu_1394_p2[0:0] == 1'b1) ? 64'd4532020583461814272 : tmp_7_reg_2463);

assign select_ln86_10_fu_1833_p3 = ((and_ln86_10_fu_1821_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln86_12_fu_1902_p3 = ((and_ln86_12_fu_1890_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln86_14_fu_1972_p3 = ((and_ln86_14_fu_1960_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln86_2_fu_1557_p3 = ((and_ln86_2_fu_1545_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln86_4_fu_1627_p3 = ((and_ln86_4_fu_1615_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln86_6_fu_1695_p3 = ((and_ln86_6_fu_1684_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln86_8_fu_1764_p3 = ((and_ln86_8_fu_1752_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign select_ln86_fu_1487_p3 = ((and_ln86_fu_1475_p2[0:0] == 1'b1) ? 32'd1065353216 : 32'd3212836864);

assign t_14_fu_714_p3 = {{1'd0}, {trunc_ln313_4_reg_2129_pp0_iter1_reg}};

assign t_15_fu_826_p3 = {{1'd0}, {trunc_ln313_5_reg_2139_pp0_iter2_reg}};

assign t_16_fu_838_p3 = {{1'd0}, {trunc_ln313_6_reg_2149_pp0_iter3_reg}};

assign t_17_fu_850_p3 = {{1'd0}, {trunc_ln313_7_reg_2208_pp0_iter3_reg}};

assign t_18_fu_978_p3 = {{1'd0}, {trunc_ln313_8_reg_2218_pp0_iter4_reg}};

assign t_19_fu_1336_p3 = {{1'd0}, {trunc_ln313_9_reg_2228_pp0_iter5_reg}};

assign t_20_fu_1348_p3 = {{1'd0}, {trunc_ln313_10_reg_2238_pp0_iter6_reg}};

assign t_fu_686_p3 = {{1'd0}, {trunc_ln313_reg_2119}};

assign tmp_11_fu_780_p4 = {{bitcast_ln47_1_fu_776_p1[30:23]}};

assign tmp_13_fu_1364_p4 = {{bitcast_ln47_2_fu_1360_p1[30:23]}};

assign tmp_15_fu_1443_p4 = {{bitcast_ln86_fu_1439_p1[30:23]}};

assign tmp_18_fu_1513_p4 = {{bitcast_ln86_1_fu_1509_p1[30:23]}};

assign tmp_21_fu_1583_p4 = {{bitcast_ln86_2_fu_1579_p1[30:23]}};

assign tmp_24_fu_1652_p4 = {{bitcast_ln86_3_fu_1649_p1[30:23]}};

assign tmp_27_fu_1720_p4 = {{bitcast_ln86_4_fu_1716_p1[30:23]}};

assign tmp_30_fu_1789_p4 = {{bitcast_ln86_5_fu_1786_p1[30:23]}};

assign tmp_33_fu_1858_p4 = {{bitcast_ln86_6_fu_1854_p1[30:23]}};

assign tmp_36_fu_1928_p4 = {{bitcast_ln86_7_fu_1924_p1[30:23]}};

assign tmp_fu_730_p4 = {{bitcast_ln47_fu_726_p1[30:23]}};

assign trunc_ln313_10_fu_710_p1 = weight_1_q0[30:0];

assign trunc_ln313_4_fu_658_p1 = weight_1_q1[30:0];

assign trunc_ln313_5_fu_662_p1 = weight_0_q0[30:0];

assign trunc_ln313_6_fu_666_p1 = weight_1_q0[30:0];

assign trunc_ln313_7_fu_698_p1 = weight_0_q1[30:0];

assign trunc_ln313_8_fu_702_p1 = weight_1_q1[30:0];

assign trunc_ln313_9_fu_706_p1 = weight_0_q0[30:0];

assign trunc_ln313_fu_654_p1 = weight_0_q1[30:0];

assign trunc_ln47_1_fu_790_p1 = bitcast_ln47_1_fu_776_p1[22:0];

assign trunc_ln47_2_fu_1374_p1 = bitcast_ln47_2_fu_1360_p1[22:0];

assign trunc_ln47_fu_740_p1 = bitcast_ln47_fu_726_p1[22:0];

assign trunc_ln86_1_fu_1523_p1 = bitcast_ln86_1_fu_1509_p1[22:0];

assign trunc_ln86_2_fu_1593_p1 = bitcast_ln86_2_fu_1579_p1[22:0];

assign trunc_ln86_3_fu_1662_p1 = bitcast_ln86_3_fu_1649_p1[22:0];

assign trunc_ln86_4_fu_1730_p1 = bitcast_ln86_4_fu_1716_p1[22:0];

assign trunc_ln86_5_fu_1799_p1 = bitcast_ln86_5_fu_1786_p1[22:0];

assign trunc_ln86_6_fu_1868_p1 = bitcast_ln86_6_fu_1854_p1[22:0];

assign trunc_ln86_7_fu_1938_p1 = bitcast_ln86_7_fu_1924_p1[22:0];

assign trunc_ln86_fu_1453_p1 = bitcast_ln86_fu_1439_p1[22:0];

assign x_fp_exp_1_fu_924_p4 = {{data_21_fu_920_p1[30:23]}};

assign x_fp_exp_2_fu_994_p4 = {{data_22_fu_990_p1[30:23]}};

assign x_fp_exp_3_fu_1168_p4 = {{data_23_fu_1164_p1[30:23]}};

assign x_fp_exp_4_fu_1052_p4 = {{data_24_fu_1048_p1[30:23]}};

assign x_fp_exp_5_fu_1110_p4 = {{data_25_fu_1106_p1[30:23]}};

assign x_fp_exp_6_fu_1226_p4 = {{data_26_fu_1222_p1[30:23]}};

assign x_fp_exp_7_fu_1283_p4 = {{data_27_fu_1280_p1[30:23]}};

assign x_fp_exp_fu_866_p4 = {{data_20_fu_862_p1[30:23]}};

assign x_fp_sig_1_fu_934_p1 = data_21_fu_920_p1[22:0];

assign x_fp_sig_2_fu_1004_p1 = data_22_fu_990_p1[22:0];

assign x_fp_sig_3_fu_1178_p1 = data_23_fu_1164_p1[22:0];

assign x_fp_sig_4_fu_1062_p1 = data_24_fu_1048_p1[22:0];

assign x_fp_sig_5_fu_1120_p1 = data_25_fu_1106_p1[22:0];

assign x_fp_sig_6_fu_1236_p1 = data_26_fu_1222_p1[22:0];

assign x_fp_sig_7_fu_1293_p1 = data_27_fu_1280_p1[22:0];

assign x_fp_sig_fu_876_p1 = data_20_fu_862_p1[22:0];

assign ymaggreater_2_fu_956_p2 = (($signed(data_21_fu_920_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_3_fu_1026_p2 = (($signed(data_22_fu_990_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_4_fu_1200_p2 = (($signed(data_23_fu_1164_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_5_fu_1084_p2 = (($signed(data_24_fu_1048_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_6_fu_1142_p2 = (($signed(data_25_fu_1106_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_7_fu_1258_p2 = (($signed(data_26_fu_1222_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_8_fu_1315_p2 = (($signed(data_27_fu_1280_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

assign ymaggreater_fu_898_p2 = (($signed(data_20_fu_862_p1) < $signed(32'd1123942400)) ? 1'b1 : 1'b0);

endmodule //bit_linear
